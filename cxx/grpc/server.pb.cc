// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#include "server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeriveKeyRequest_TemplateEntry_DoNotUse_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GenerateKeyRequest_TemplateEntry_DoNotUse_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAttributeValueResponse_AttributesEntry_DoNotUse_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MechanismInfo_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Mechanism_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UnwrapKeyRequest_TemplateEntry_DoNotUse_server_2eproto;
namespace grep11 {
class GenerateRandomRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateRandomRequest> _instance;
} _GenerateRandomRequest_default_instance_;
class GenerateRandomResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateRandomResponse> _instance;
} _GenerateRandomResponse_default_instance_;
class DigestInitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestInitRequest> _instance;
} _DigestInitRequest_default_instance_;
class DigestInitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestInitResponse> _instance;
} _DigestInitResponse_default_instance_;
class DigestRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestRequest> _instance;
} _DigestRequest_default_instance_;
class DigestResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestResponse> _instance;
} _DigestResponse_default_instance_;
class DigestUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestUpdateRequest> _instance;
} _DigestUpdateRequest_default_instance_;
class DigestUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestUpdateResponse> _instance;
} _DigestUpdateResponse_default_instance_;
class DigestKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestKeyRequest> _instance;
} _DigestKeyRequest_default_instance_;
class DigestKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestKeyResponse> _instance;
} _DigestKeyResponse_default_instance_;
class DigestFinalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestFinalRequest> _instance;
} _DigestFinalRequest_default_instance_;
class DigestFinalResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestFinalResponse> _instance;
} _DigestFinalResponse_default_instance_;
class DigestSingleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestSingleRequest> _instance;
} _DigestSingleRequest_default_instance_;
class DigestSingleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestSingleResponse> _instance;
} _DigestSingleResponse_default_instance_;
class EncryptInitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptInitRequest> _instance;
} _EncryptInitRequest_default_instance_;
class EncryptInitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptInitResponse> _instance;
} _EncryptInitResponse_default_instance_;
class DecryptInitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptInitRequest> _instance;
} _DecryptInitRequest_default_instance_;
class DecryptInitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptInitResponse> _instance;
} _DecryptInitResponse_default_instance_;
class EncryptUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptUpdateRequest> _instance;
} _EncryptUpdateRequest_default_instance_;
class EncryptUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptUpdateResponse> _instance;
} _EncryptUpdateResponse_default_instance_;
class DecryptUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptUpdateRequest> _instance;
} _DecryptUpdateRequest_default_instance_;
class DecryptUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptUpdateResponse> _instance;
} _DecryptUpdateResponse_default_instance_;
class EncryptRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptRequest> _instance;
} _EncryptRequest_default_instance_;
class EncryptResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptResponse> _instance;
} _EncryptResponse_default_instance_;
class DecryptRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptRequest> _instance;
} _DecryptRequest_default_instance_;
class DecryptResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptResponse> _instance;
} _DecryptResponse_default_instance_;
class EncryptFinalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptFinalRequest> _instance;
} _EncryptFinalRequest_default_instance_;
class EncryptFinalResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptFinalResponse> _instance;
} _EncryptFinalResponse_default_instance_;
class DecryptFinalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptFinalRequest> _instance;
} _DecryptFinalRequest_default_instance_;
class DecryptFinalResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptFinalResponse> _instance;
} _DecryptFinalResponse_default_instance_;
class EncryptSingleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptSingleRequest> _instance;
} _EncryptSingleRequest_default_instance_;
class EncryptSingleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptSingleResponse> _instance;
} _EncryptSingleResponse_default_instance_;
class DecryptSingleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptSingleRequest> _instance;
} _DecryptSingleRequest_default_instance_;
class DecryptSingleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptSingleResponse> _instance;
} _DecryptSingleResponse_default_instance_;
class SignInitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignInitRequest> _instance;
} _SignInitRequest_default_instance_;
class SignInitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignInitResponse> _instance;
} _SignInitResponse_default_instance_;
class VerifyInitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyInitRequest> _instance;
} _VerifyInitRequest_default_instance_;
class VerifyInitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyInitResponse> _instance;
} _VerifyInitResponse_default_instance_;
class SignUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignUpdateRequest> _instance;
} _SignUpdateRequest_default_instance_;
class SignUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignUpdateResponse> _instance;
} _SignUpdateResponse_default_instance_;
class VerifyUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyUpdateRequest> _instance;
} _VerifyUpdateRequest_default_instance_;
class VerifyUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyUpdateResponse> _instance;
} _VerifyUpdateResponse_default_instance_;
class SignFinalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignFinalRequest> _instance;
} _SignFinalRequest_default_instance_;
class SignFinalResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignFinalResponse> _instance;
} _SignFinalResponse_default_instance_;
class VerifyFinalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyFinalRequest> _instance;
} _VerifyFinalRequest_default_instance_;
class VerifyFinalResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyFinalResponse> _instance;
} _VerifyFinalResponse_default_instance_;
class SignRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignRequest> _instance;
} _SignRequest_default_instance_;
class SignResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignResponse> _instance;
} _SignResponse_default_instance_;
class VerifyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyRequest> _instance;
} _VerifyRequest_default_instance_;
class VerifyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyResponse> _instance;
} _VerifyResponse_default_instance_;
class SignSingleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignSingleRequest> _instance;
} _SignSingleRequest_default_instance_;
class SignSingleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignSingleResponse> _instance;
} _SignSingleResponse_default_instance_;
class VerifySingleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifySingleRequest> _instance;
} _VerifySingleRequest_default_instance_;
class VerifySingleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifySingleResponse> _instance;
} _VerifySingleResponse_default_instance_;
class GenerateKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateKeyRequest_TemplateEntry_DoNotUse> _instance;
} _GenerateKeyRequest_TemplateEntry_DoNotUse_default_instance_;
class GenerateKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateKeyRequest> _instance;
} _GenerateKeyRequest_default_instance_;
class GenerateKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateKeyResponse> _instance;
} _GenerateKeyResponse_default_instance_;
class GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse> _instance;
} _GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_default_instance_;
class GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse> _instance;
} _GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_default_instance_;
class GenerateKeyPairRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateKeyPairRequest> _instance;
} _GenerateKeyPairRequest_default_instance_;
class GenerateKeyPairResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerateKeyPairResponse> _instance;
} _GenerateKeyPairResponse_default_instance_;
class WrapKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WrapKeyRequest> _instance;
} _WrapKeyRequest_default_instance_;
class WrapKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WrapKeyResponse> _instance;
} _WrapKeyResponse_default_instance_;
class UnwrapKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnwrapKeyRequest_TemplateEntry_DoNotUse> _instance;
} _UnwrapKeyRequest_TemplateEntry_DoNotUse_default_instance_;
class UnwrapKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnwrapKeyRequest> _instance;
} _UnwrapKeyRequest_default_instance_;
class UnwrapKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnwrapKeyResponse> _instance;
} _UnwrapKeyResponse_default_instance_;
class DeriveKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeriveKeyRequest_TemplateEntry_DoNotUse> _instance;
} _DeriveKeyRequest_TemplateEntry_DoNotUse_default_instance_;
class DeriveKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeriveKeyRequest> _instance;
} _DeriveKeyRequest_default_instance_;
class DeriveKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeriveKeyResponse> _instance;
} _DeriveKeyResponse_default_instance_;
class GetMechanismListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMechanismListRequest> _instance;
} _GetMechanismListRequest_default_instance_;
class GetMechanismListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMechanismListResponse> _instance;
} _GetMechanismListResponse_default_instance_;
class GetMechanismInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMechanismInfoRequest> _instance;
} _GetMechanismInfoRequest_default_instance_;
class GetMechanismInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMechanismInfoResponse> _instance;
} _GetMechanismInfoResponse_default_instance_;
class GetAttributeValueRequest_AttributesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttributeValueRequest_AttributesEntry_DoNotUse> _instance;
} _GetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_;
class GetAttributeValueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttributeValueRequest> _instance;
} _GetAttributeValueRequest_default_instance_;
class GetAttributeValueResponse_AttributesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttributeValueResponse_AttributesEntry_DoNotUse> _instance;
} _GetAttributeValueResponse_AttributesEntry_DoNotUse_default_instance_;
class GetAttributeValueResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttributeValueResponse> _instance;
} _GetAttributeValueResponse_default_instance_;
class SetAttributeValueRequest_AttributesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetAttributeValueRequest_AttributesEntry_DoNotUse> _instance;
} _SetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_;
class SetAttributeValueRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetAttributeValueRequest> _instance;
} _SetAttributeValueRequest_default_instance_;
class SetAttributeValueResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetAttributeValueResponse> _instance;
} _SetAttributeValueResponse_default_instance_;
class MechanismDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mechanism> _instance;
} _Mechanism_default_instance_;
class MechanismInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MechanismInfo> _instance;
} _MechanismInfo_default_instance_;
class Grep11ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Grep11Error> _instance;
} _Grep11Error_default_instance_;
}  // namespace grep11
static void InitDefaultsGenerateRandomRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateRandomRequest_default_instance_;
    new (ptr) ::grep11::GenerateRandomRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GenerateRandomRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateRandomRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateRandomRequest_server_2eproto}, {}};

static void InitDefaultsGenerateRandomResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateRandomResponse_default_instance_;
    new (ptr) ::grep11::GenerateRandomResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GenerateRandomResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateRandomResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateRandomResponse_server_2eproto}, {}};

static void InitDefaultsDigestInitRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestInitRequest_default_instance_;
    new (ptr) ::grep11::DigestInitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestInitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DigestInitRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDigestInitRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsDigestInitResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestInitResponse_default_instance_;
    new (ptr) ::grep11::DigestInitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestInitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestInitResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestInitResponse_server_2eproto}, {}};

static void InitDefaultsDigestRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestRequest_default_instance_;
    new (ptr) ::grep11::DigestRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestRequest_server_2eproto}, {}};

static void InitDefaultsDigestResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestResponse_default_instance_;
    new (ptr) ::grep11::DigestResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestResponse_server_2eproto}, {}};

static void InitDefaultsDigestUpdateRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestUpdateRequest_default_instance_;
    new (ptr) ::grep11::DigestUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestUpdateRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestUpdateRequest_server_2eproto}, {}};

static void InitDefaultsDigestUpdateResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestUpdateResponse_default_instance_;
    new (ptr) ::grep11::DigestUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestUpdateResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestUpdateResponse_server_2eproto}, {}};

static void InitDefaultsDigestKeyRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestKeyRequest_default_instance_;
    new (ptr) ::grep11::DigestKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestKeyRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestKeyRequest_server_2eproto}, {}};

static void InitDefaultsDigestKeyResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestKeyResponse_default_instance_;
    new (ptr) ::grep11::DigestKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestKeyResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestKeyResponse_server_2eproto}, {}};

static void InitDefaultsDigestFinalRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestFinalRequest_default_instance_;
    new (ptr) ::grep11::DigestFinalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestFinalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestFinalRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestFinalRequest_server_2eproto}, {}};

static void InitDefaultsDigestFinalResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestFinalResponse_default_instance_;
    new (ptr) ::grep11::DigestFinalResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestFinalResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestFinalResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestFinalResponse_server_2eproto}, {}};

static void InitDefaultsDigestSingleRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestSingleRequest_default_instance_;
    new (ptr) ::grep11::DigestSingleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestSingleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DigestSingleRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDigestSingleRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsDigestSingleResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DigestSingleResponse_default_instance_;
    new (ptr) ::grep11::DigestSingleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DigestSingleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestSingleResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestSingleResponse_server_2eproto}, {}};

static void InitDefaultsEncryptInitRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptInitRequest_default_instance_;
    new (ptr) ::grep11::EncryptInitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptInitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EncryptInitRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEncryptInitRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsEncryptInitResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptInitResponse_default_instance_;
    new (ptr) ::grep11::EncryptInitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptInitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptInitResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptInitResponse_server_2eproto}, {}};

static void InitDefaultsDecryptInitRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptInitRequest_default_instance_;
    new (ptr) ::grep11::DecryptInitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptInitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DecryptInitRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDecryptInitRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsDecryptInitResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptInitResponse_default_instance_;
    new (ptr) ::grep11::DecryptInitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptInitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptInitResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptInitResponse_server_2eproto}, {}};

static void InitDefaultsEncryptUpdateRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptUpdateRequest_default_instance_;
    new (ptr) ::grep11::EncryptUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptUpdateRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptUpdateRequest_server_2eproto}, {}};

static void InitDefaultsEncryptUpdateResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptUpdateResponse_default_instance_;
    new (ptr) ::grep11::EncryptUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptUpdateResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptUpdateResponse_server_2eproto}, {}};

static void InitDefaultsDecryptUpdateRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptUpdateRequest_default_instance_;
    new (ptr) ::grep11::DecryptUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptUpdateRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptUpdateRequest_server_2eproto}, {}};

static void InitDefaultsDecryptUpdateResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptUpdateResponse_default_instance_;
    new (ptr) ::grep11::DecryptUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptUpdateResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptUpdateResponse_server_2eproto}, {}};

static void InitDefaultsEncryptRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptRequest_default_instance_;
    new (ptr) ::grep11::EncryptRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptRequest_server_2eproto}, {}};

static void InitDefaultsEncryptResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptResponse_default_instance_;
    new (ptr) ::grep11::EncryptResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptResponse_server_2eproto}, {}};

static void InitDefaultsDecryptRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptRequest_default_instance_;
    new (ptr) ::grep11::DecryptRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptRequest_server_2eproto}, {}};

static void InitDefaultsDecryptResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptResponse_default_instance_;
    new (ptr) ::grep11::DecryptResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptResponse_server_2eproto}, {}};

static void InitDefaultsEncryptFinalRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptFinalRequest_default_instance_;
    new (ptr) ::grep11::EncryptFinalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptFinalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptFinalRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptFinalRequest_server_2eproto}, {}};

static void InitDefaultsEncryptFinalResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptFinalResponse_default_instance_;
    new (ptr) ::grep11::EncryptFinalResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptFinalResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptFinalResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptFinalResponse_server_2eproto}, {}};

static void InitDefaultsDecryptFinalRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptFinalRequest_default_instance_;
    new (ptr) ::grep11::DecryptFinalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptFinalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptFinalRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptFinalRequest_server_2eproto}, {}};

static void InitDefaultsDecryptFinalResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptFinalResponse_default_instance_;
    new (ptr) ::grep11::DecryptFinalResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptFinalResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptFinalResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptFinalResponse_server_2eproto}, {}};

static void InitDefaultsEncryptSingleRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptSingleRequest_default_instance_;
    new (ptr) ::grep11::EncryptSingleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptSingleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EncryptSingleRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEncryptSingleRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsEncryptSingleResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_EncryptSingleResponse_default_instance_;
    new (ptr) ::grep11::EncryptSingleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::EncryptSingleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptSingleResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptSingleResponse_server_2eproto}, {}};

static void InitDefaultsDecryptSingleRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptSingleRequest_default_instance_;
    new (ptr) ::grep11::DecryptSingleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptSingleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DecryptSingleRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDecryptSingleRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsDecryptSingleResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DecryptSingleResponse_default_instance_;
    new (ptr) ::grep11::DecryptSingleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DecryptSingleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptSingleResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptSingleResponse_server_2eproto}, {}};

static void InitDefaultsSignInitRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignInitRequest_default_instance_;
    new (ptr) ::grep11::SignInitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignInitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SignInitRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSignInitRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsSignInitResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignInitResponse_default_instance_;
    new (ptr) ::grep11::SignInitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignInitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignInitResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignInitResponse_server_2eproto}, {}};

static void InitDefaultsVerifyInitRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifyInitRequest_default_instance_;
    new (ptr) ::grep11::VerifyInitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifyInitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VerifyInitRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVerifyInitRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsVerifyInitResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifyInitResponse_default_instance_;
    new (ptr) ::grep11::VerifyInitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifyInitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyInitResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyInitResponse_server_2eproto}, {}};

static void InitDefaultsSignUpdateRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignUpdateRequest_default_instance_;
    new (ptr) ::grep11::SignUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignUpdateRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignUpdateRequest_server_2eproto}, {}};

static void InitDefaultsSignUpdateResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignUpdateResponse_default_instance_;
    new (ptr) ::grep11::SignUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignUpdateResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignUpdateResponse_server_2eproto}, {}};

static void InitDefaultsVerifyUpdateRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifyUpdateRequest_default_instance_;
    new (ptr) ::grep11::VerifyUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifyUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyUpdateRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyUpdateRequest_server_2eproto}, {}};

static void InitDefaultsVerifyUpdateResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifyUpdateResponse_default_instance_;
    new (ptr) ::grep11::VerifyUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifyUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyUpdateResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyUpdateResponse_server_2eproto}, {}};

static void InitDefaultsSignFinalRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignFinalRequest_default_instance_;
    new (ptr) ::grep11::SignFinalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignFinalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignFinalRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignFinalRequest_server_2eproto}, {}};

static void InitDefaultsSignFinalResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignFinalResponse_default_instance_;
    new (ptr) ::grep11::SignFinalResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignFinalResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignFinalResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignFinalResponse_server_2eproto}, {}};

static void InitDefaultsVerifyFinalRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifyFinalRequest_default_instance_;
    new (ptr) ::grep11::VerifyFinalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifyFinalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyFinalRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyFinalRequest_server_2eproto}, {}};

static void InitDefaultsVerifyFinalResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifyFinalResponse_default_instance_;
    new (ptr) ::grep11::VerifyFinalResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifyFinalResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyFinalResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyFinalResponse_server_2eproto}, {}};

static void InitDefaultsSignRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignRequest_default_instance_;
    new (ptr) ::grep11::SignRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignRequest_server_2eproto}, {}};

static void InitDefaultsSignResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignResponse_default_instance_;
    new (ptr) ::grep11::SignResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignResponse_server_2eproto}, {}};

static void InitDefaultsVerifyRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifyRequest_default_instance_;
    new (ptr) ::grep11::VerifyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyRequest_server_2eproto}, {}};

static void InitDefaultsVerifyResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifyResponse_default_instance_;
    new (ptr) ::grep11::VerifyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyResponse_server_2eproto}, {}};

static void InitDefaultsSignSingleRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignSingleRequest_default_instance_;
    new (ptr) ::grep11::SignSingleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignSingleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SignSingleRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSignSingleRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsSignSingleResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SignSingleResponse_default_instance_;
    new (ptr) ::grep11::SignSingleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SignSingleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignSingleResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignSingleResponse_server_2eproto}, {}};

static void InitDefaultsVerifySingleRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifySingleRequest_default_instance_;
    new (ptr) ::grep11::VerifySingleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifySingleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VerifySingleRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVerifySingleRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsVerifySingleResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_VerifySingleResponse_default_instance_;
    new (ptr) ::grep11::VerifySingleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::VerifySingleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifySingleResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifySingleResponse_server_2eproto}, {}};

static void InitDefaultsGenerateKeyRequest_TemplateEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateKeyRequest_TemplateEntry_DoNotUse_default_instance_;
    new (ptr) ::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse();
  }
  ::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateKeyRequest_TemplateEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateKeyRequest_TemplateEntry_DoNotUse_server_2eproto}, {}};

static void InitDefaultsGenerateKeyRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateKeyRequest_default_instance_;
    new (ptr) ::grep11::GenerateKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GenerateKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GenerateKeyRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGenerateKeyRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,
      &scc_info_GenerateKeyRequest_TemplateEntry_DoNotUse_server_2eproto.base,}};

static void InitDefaultsGenerateKeyResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateKeyResponse_default_instance_;
    new (ptr) ::grep11::GenerateKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GenerateKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateKeyResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateKeyResponse_server_2eproto}, {}};

static void InitDefaultsGenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_default_instance_;
    new (ptr) ::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse();
  }
  ::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_server_2eproto}, {}};

static void InitDefaultsGenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_default_instance_;
    new (ptr) ::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse();
  }
  ::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_server_2eproto}, {}};

static void InitDefaultsGenerateKeyPairRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateKeyPairRequest_default_instance_;
    new (ptr) ::grep11::GenerateKeyPairRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GenerateKeyPairRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_GenerateKeyPairRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsGenerateKeyPairRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,
      &scc_info_GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_server_2eproto.base,
      &scc_info_GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_server_2eproto.base,}};

static void InitDefaultsGenerateKeyPairResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GenerateKeyPairResponse_default_instance_;
    new (ptr) ::grep11::GenerateKeyPairResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GenerateKeyPairResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenerateKeyPairResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenerateKeyPairResponse_server_2eproto}, {}};

static void InitDefaultsWrapKeyRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_WrapKeyRequest_default_instance_;
    new (ptr) ::grep11::WrapKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::WrapKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WrapKeyRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWrapKeyRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,}};

static void InitDefaultsWrapKeyResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_WrapKeyResponse_default_instance_;
    new (ptr) ::grep11::WrapKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::WrapKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WrapKeyResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWrapKeyResponse_server_2eproto}, {}};

static void InitDefaultsUnwrapKeyRequest_TemplateEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_UnwrapKeyRequest_TemplateEntry_DoNotUse_default_instance_;
    new (ptr) ::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse();
  }
  ::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnwrapKeyRequest_TemplateEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnwrapKeyRequest_TemplateEntry_DoNotUse_server_2eproto}, {}};

static void InitDefaultsUnwrapKeyRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_UnwrapKeyRequest_default_instance_;
    new (ptr) ::grep11::UnwrapKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::UnwrapKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UnwrapKeyRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUnwrapKeyRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,
      &scc_info_UnwrapKeyRequest_TemplateEntry_DoNotUse_server_2eproto.base,}};

static void InitDefaultsUnwrapKeyResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_UnwrapKeyResponse_default_instance_;
    new (ptr) ::grep11::UnwrapKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::UnwrapKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnwrapKeyResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnwrapKeyResponse_server_2eproto}, {}};

static void InitDefaultsDeriveKeyRequest_TemplateEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DeriveKeyRequest_TemplateEntry_DoNotUse_default_instance_;
    new (ptr) ::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse();
  }
  ::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeriveKeyRequest_TemplateEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeriveKeyRequest_TemplateEntry_DoNotUse_server_2eproto}, {}};

static void InitDefaultsDeriveKeyRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DeriveKeyRequest_default_instance_;
    new (ptr) ::grep11::DeriveKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DeriveKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DeriveKeyRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDeriveKeyRequest_server_2eproto}, {
      &scc_info_Mechanism_server_2eproto.base,
      &scc_info_DeriveKeyRequest_TemplateEntry_DoNotUse_server_2eproto.base,}};

static void InitDefaultsDeriveKeyResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_DeriveKeyResponse_default_instance_;
    new (ptr) ::grep11::DeriveKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::DeriveKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeriveKeyResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeriveKeyResponse_server_2eproto}, {}};

static void InitDefaultsGetMechanismListRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GetMechanismListRequest_default_instance_;
    new (ptr) ::grep11::GetMechanismListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GetMechanismListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMechanismListRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMechanismListRequest_server_2eproto}, {}};

static void InitDefaultsGetMechanismListResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GetMechanismListResponse_default_instance_;
    new (ptr) ::grep11::GetMechanismListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GetMechanismListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMechanismListResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMechanismListResponse_server_2eproto}, {}};

static void InitDefaultsGetMechanismInfoRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GetMechanismInfoRequest_default_instance_;
    new (ptr) ::grep11::GetMechanismInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GetMechanismInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMechanismInfoRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMechanismInfoRequest_server_2eproto}, {}};

static void InitDefaultsGetMechanismInfoResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GetMechanismInfoResponse_default_instance_;
    new (ptr) ::grep11::GetMechanismInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GetMechanismInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetMechanismInfoResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetMechanismInfoResponse_server_2eproto}, {
      &scc_info_MechanismInfo_server_2eproto.base,}};

static void InitDefaultsGetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_;
    new (ptr) ::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse();
  }
  ::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto}, {}};

static void InitDefaultsGetAttributeValueRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GetAttributeValueRequest_default_instance_;
    new (ptr) ::grep11::GetAttributeValueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GetAttributeValueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetAttributeValueRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetAttributeValueRequest_server_2eproto}, {
      &scc_info_GetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto.base,}};

static void InitDefaultsGetAttributeValueResponse_AttributesEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GetAttributeValueResponse_AttributesEntry_DoNotUse_default_instance_;
    new (ptr) ::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse();
  }
  ::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttributeValueResponse_AttributesEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttributeValueResponse_AttributesEntry_DoNotUse_server_2eproto}, {}};

static void InitDefaultsGetAttributeValueResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_GetAttributeValueResponse_default_instance_;
    new (ptr) ::grep11::GetAttributeValueResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::GetAttributeValueResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetAttributeValueResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetAttributeValueResponse_server_2eproto}, {
      &scc_info_GetAttributeValueResponse_AttributesEntry_DoNotUse_server_2eproto.base,}};

static void InitDefaultsSetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_;
    new (ptr) ::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse();
  }
  ::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto}, {}};

static void InitDefaultsSetAttributeValueRequest_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SetAttributeValueRequest_default_instance_;
    new (ptr) ::grep11::SetAttributeValueRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SetAttributeValueRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetAttributeValueRequest_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetAttributeValueRequest_server_2eproto}, {
      &scc_info_SetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto.base,}};

static void InitDefaultsSetAttributeValueResponse_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_SetAttributeValueResponse_default_instance_;
    new (ptr) ::grep11::SetAttributeValueResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::SetAttributeValueResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetAttributeValueResponse_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetAttributeValueResponse_server_2eproto}, {}};

static void InitDefaultsMechanism_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_Mechanism_default_instance_;
    new (ptr) ::grep11::Mechanism();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::Mechanism::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Mechanism_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMechanism_server_2eproto}, {}};

static void InitDefaultsMechanismInfo_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_MechanismInfo_default_instance_;
    new (ptr) ::grep11::MechanismInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::MechanismInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MechanismInfo_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMechanismInfo_server_2eproto}, {}};

static void InitDefaultsGrep11Error_server_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grep11::_Grep11Error_default_instance_;
    new (ptr) ::grep11::Grep11Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grep11::Grep11Error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Grep11Error_server_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGrep11Error_server_2eproto}, {}};

void InitDefaults_server_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateRandomRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateRandomResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestInitRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestInitResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestUpdateRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestUpdateResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestKeyRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestKeyResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestFinalRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestFinalResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestSingleRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestSingleResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptInitRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptInitResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptInitRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptInitResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptUpdateRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptUpdateResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptUpdateRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptUpdateResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptFinalRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptFinalResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptFinalRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptFinalResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptSingleRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptSingleResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptSingleRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptSingleResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignInitRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignInitResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyInitRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyInitResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignUpdateRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignUpdateResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyUpdateRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyUpdateResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignFinalRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignFinalResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyFinalRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyFinalResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignSingleRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignSingleResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifySingleRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifySingleResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateKeyRequest_TemplateEntry_DoNotUse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateKeyRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateKeyResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateKeyPairRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerateKeyPairResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WrapKeyRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WrapKeyResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnwrapKeyRequest_TemplateEntry_DoNotUse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnwrapKeyRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnwrapKeyResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeriveKeyRequest_TemplateEntry_DoNotUse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeriveKeyRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeriveKeyResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMechanismListRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMechanismListResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMechanismInfoRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMechanismInfoResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttributeValueRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttributeValueResponse_AttributesEntry_DoNotUse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttributeValueResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetAttributeValueRequest_AttributesEntry_DoNotUse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetAttributeValueRequest_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetAttributeValueResponse_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mechanism_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MechanismInfo_server_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Grep11Error_server_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_server_2eproto[83];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_server_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_server_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_server_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateRandomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateRandomRequest, len_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateRandomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateRandomResponse, rnd_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestInitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestInitRequest, mech_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestInitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestInitResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::DigestRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestResponse, digest_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestUpdateRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::DigestUpdateRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestUpdateResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestKeyRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::DigestKeyRequest, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestKeyResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestFinalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestFinalRequest, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestFinalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestFinalResponse, digest_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestSingleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestSingleRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::DigestSingleRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestSingleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DigestSingleResponse, digest_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptInitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptInitRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptInitRequest, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptInitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptInitResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptInitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptInitRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptInitRequest, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptInitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptInitResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptUpdateRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptUpdateRequest, plain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptUpdateResponse, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptUpdateResponse, ciphered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptUpdateRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptUpdateRequest, ciphered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptUpdateResponse, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptUpdateResponse, plain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptRequest, plain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptResponse, ciphered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptRequest, ciphered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptResponse, plain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptFinalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptFinalRequest, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptFinalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptFinalResponse, ciphered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptFinalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptFinalRequest, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptFinalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptFinalResponse, plain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptSingleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptSingleRequest, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptSingleRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptSingleRequest, plain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptSingleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::EncryptSingleResponse, ciphered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptSingleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptSingleRequest, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptSingleRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptSingleRequest, ciphered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptSingleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DecryptSingleResponse, plain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignInitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignInitRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::SignInitRequest, privkey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignInitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignInitResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyInitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyInitRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyInitRequest, pubkey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyInitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyInitResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignUpdateRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::SignUpdateRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignUpdateResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyUpdateRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyUpdateRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyUpdateResponse, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignFinalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignFinalRequest, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignFinalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignFinalResponse, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyFinalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyFinalRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyFinalRequest, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyFinalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::SignRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignResponse, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyRequest, state_),
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyRequest, data_),
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyRequest, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignSingleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignSingleRequest, privkey_),
  PROTOBUF_FIELD_OFFSET(::grep11::SignSingleRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::SignSingleRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SignSingleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SignSingleResponse, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifySingleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifySingleRequest, pubkey_),
  PROTOBUF_FIELD_OFFSET(::grep11::VerifySingleRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::VerifySingleRequest, data_),
  PROTOBUF_FIELD_OFFSET(::grep11::VerifySingleRequest, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::VerifySingleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyRequest, template__),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyRequest, keyid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyResponse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyResponse, checksum_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest, pubkeytemplate_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest, privkeytemplate_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest, privkeyid_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairRequest, pubkeyid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairResponse, privkey_),
  PROTOBUF_FIELD_OFFSET(::grep11::GenerateKeyPairResponse, pubkey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::WrapKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::WrapKeyRequest, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::WrapKeyRequest, kek_),
  PROTOBUF_FIELD_OFFSET(::grep11::WrapKeyRequest, mackey_),
  PROTOBUF_FIELD_OFFSET(::grep11::WrapKeyRequest, mech_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::WrapKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::WrapKeyResponse, wrapped_),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest, wrapped_),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest, kek_),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest, mackey_),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest, template__),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyRequest, unwrappedid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyResponse, unwrapped_),
  PROTOBUF_FIELD_OFFSET(::grep11::UnwrapKeyResponse, checksum_),
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest, mech_),
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest, template__),
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest, basekey_),
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest, data_),
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyRequest, newkeyid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyResponse, newkey_),
  PROTOBUF_FIELD_OFFSET(::grep11::DeriveKeyResponse, checksum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GetMechanismListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GetMechanismListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GetMechanismListResponse, mechs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GetMechanismInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GetMechanismInfoRequest, mech_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GetMechanismInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GetMechanismInfoResponse, mechinfo_),
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueRequest, object_),
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueRequest, attributes_),
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::GetAttributeValueResponse, attributes_),
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueRequest, object_),
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueRequest, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::SetAttributeValueResponse, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::Mechanism, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::Mechanism, mechanism_),
  PROTOBUF_FIELD_OFFSET(::grep11::Mechanism, parameter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::MechanismInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::MechanismInfo, minkeysize_),
  PROTOBUF_FIELD_OFFSET(::grep11::MechanismInfo, maxkeysize_),
  PROTOBUF_FIELD_OFFSET(::grep11::MechanismInfo, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grep11::Grep11Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grep11::Grep11Error, code_),
  PROTOBUF_FIELD_OFFSET(::grep11::Grep11Error, detail_),
  PROTOBUF_FIELD_OFFSET(::grep11::Grep11Error, retry_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grep11::GenerateRandomRequest)},
  { 6, -1, sizeof(::grep11::GenerateRandomResponse)},
  { 12, -1, sizeof(::grep11::DigestInitRequest)},
  { 18, -1, sizeof(::grep11::DigestInitResponse)},
  { 24, -1, sizeof(::grep11::DigestRequest)},
  { 31, -1, sizeof(::grep11::DigestResponse)},
  { 37, -1, sizeof(::grep11::DigestUpdateRequest)},
  { 44, -1, sizeof(::grep11::DigestUpdateResponse)},
  { 50, -1, sizeof(::grep11::DigestKeyRequest)},
  { 57, -1, sizeof(::grep11::DigestKeyResponse)},
  { 63, -1, sizeof(::grep11::DigestFinalRequest)},
  { 69, -1, sizeof(::grep11::DigestFinalResponse)},
  { 75, -1, sizeof(::grep11::DigestSingleRequest)},
  { 82, -1, sizeof(::grep11::DigestSingleResponse)},
  { 88, -1, sizeof(::grep11::EncryptInitRequest)},
  { 95, -1, sizeof(::grep11::EncryptInitResponse)},
  { 101, -1, sizeof(::grep11::DecryptInitRequest)},
  { 108, -1, sizeof(::grep11::DecryptInitResponse)},
  { 114, -1, sizeof(::grep11::EncryptUpdateRequest)},
  { 121, -1, sizeof(::grep11::EncryptUpdateResponse)},
  { 128, -1, sizeof(::grep11::DecryptUpdateRequest)},
  { 135, -1, sizeof(::grep11::DecryptUpdateResponse)},
  { 142, -1, sizeof(::grep11::EncryptRequest)},
  { 149, -1, sizeof(::grep11::EncryptResponse)},
  { 155, -1, sizeof(::grep11::DecryptRequest)},
  { 162, -1, sizeof(::grep11::DecryptResponse)},
  { 168, -1, sizeof(::grep11::EncryptFinalRequest)},
  { 174, -1, sizeof(::grep11::EncryptFinalResponse)},
  { 180, -1, sizeof(::grep11::DecryptFinalRequest)},
  { 186, -1, sizeof(::grep11::DecryptFinalResponse)},
  { 192, -1, sizeof(::grep11::EncryptSingleRequest)},
  { 200, -1, sizeof(::grep11::EncryptSingleResponse)},
  { 206, -1, sizeof(::grep11::DecryptSingleRequest)},
  { 214, -1, sizeof(::grep11::DecryptSingleResponse)},
  { 220, -1, sizeof(::grep11::SignInitRequest)},
  { 227, -1, sizeof(::grep11::SignInitResponse)},
  { 233, -1, sizeof(::grep11::VerifyInitRequest)},
  { 240, -1, sizeof(::grep11::VerifyInitResponse)},
  { 246, -1, sizeof(::grep11::SignUpdateRequest)},
  { 253, -1, sizeof(::grep11::SignUpdateResponse)},
  { 259, -1, sizeof(::grep11::VerifyUpdateRequest)},
  { 266, -1, sizeof(::grep11::VerifyUpdateResponse)},
  { 272, -1, sizeof(::grep11::SignFinalRequest)},
  { 278, -1, sizeof(::grep11::SignFinalResponse)},
  { 284, -1, sizeof(::grep11::VerifyFinalRequest)},
  { 291, -1, sizeof(::grep11::VerifyFinalResponse)},
  { 296, -1, sizeof(::grep11::SignRequest)},
  { 303, -1, sizeof(::grep11::SignResponse)},
  { 309, -1, sizeof(::grep11::VerifyRequest)},
  { 317, -1, sizeof(::grep11::VerifyResponse)},
  { 322, -1, sizeof(::grep11::SignSingleRequest)},
  { 330, -1, sizeof(::grep11::SignSingleResponse)},
  { 336, -1, sizeof(::grep11::VerifySingleRequest)},
  { 345, -1, sizeof(::grep11::VerifySingleResponse)},
  { 350, 357, sizeof(::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse)},
  { 359, -1, sizeof(::grep11::GenerateKeyRequest)},
  { 367, -1, sizeof(::grep11::GenerateKeyResponse)},
  { 374, 381, sizeof(::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse)},
  { 383, 390, sizeof(::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse)},
  { 392, -1, sizeof(::grep11::GenerateKeyPairRequest)},
  { 402, -1, sizeof(::grep11::GenerateKeyPairResponse)},
  { 409, -1, sizeof(::grep11::WrapKeyRequest)},
  { 418, -1, sizeof(::grep11::WrapKeyResponse)},
  { 424, 431, sizeof(::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse)},
  { 433, -1, sizeof(::grep11::UnwrapKeyRequest)},
  { 444, -1, sizeof(::grep11::UnwrapKeyResponse)},
  { 451, 458, sizeof(::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse)},
  { 460, -1, sizeof(::grep11::DeriveKeyRequest)},
  { 470, -1, sizeof(::grep11::DeriveKeyResponse)},
  { 477, -1, sizeof(::grep11::GetMechanismListRequest)},
  { 482, -1, sizeof(::grep11::GetMechanismListResponse)},
  { 488, -1, sizeof(::grep11::GetMechanismInfoRequest)},
  { 494, -1, sizeof(::grep11::GetMechanismInfoResponse)},
  { 500, 507, sizeof(::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse)},
  { 509, -1, sizeof(::grep11::GetAttributeValueRequest)},
  { 516, 523, sizeof(::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse)},
  { 525, -1, sizeof(::grep11::GetAttributeValueResponse)},
  { 531, 538, sizeof(::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse)},
  { 540, -1, sizeof(::grep11::SetAttributeValueRequest)},
  { 547, -1, sizeof(::grep11::SetAttributeValueResponse)},
  { 553, -1, sizeof(::grep11::Mechanism)},
  { 560, -1, sizeof(::grep11::MechanismInfo)},
  { 568, -1, sizeof(::grep11::Grep11Error)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateRandomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateRandomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestInitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestInitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestFinalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestFinalResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestSingleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DigestSingleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptInitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptInitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptInitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptInitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptFinalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptFinalResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptFinalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptFinalResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptSingleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_EncryptSingleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptSingleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DecryptSingleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignInitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignInitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifyInitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifyInitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifyUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifyUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignFinalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignFinalResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifyFinalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifyFinalResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignSingleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SignSingleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifySingleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_VerifySingleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateKeyRequest_TemplateEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateKeyPairRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GenerateKeyPairResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_WrapKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_WrapKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_UnwrapKeyRequest_TemplateEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_UnwrapKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_UnwrapKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DeriveKeyRequest_TemplateEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DeriveKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_DeriveKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GetMechanismListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GetMechanismListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GetMechanismInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GetMechanismInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GetAttributeValueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GetAttributeValueResponse_AttributesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_GetAttributeValueResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SetAttributeValueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_SetAttributeValueResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_Mechanism_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_MechanismInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grep11::_Grep11Error_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_server_2eproto = {
  {}, AddDescriptors_server_2eproto, "server.proto", schemas,
  file_default_instances, TableStruct_server_2eproto::offsets,
  file_level_metadata_server_2eproto, 83, file_level_enum_descriptors_server_2eproto, file_level_service_descriptors_server_2eproto,
};

const char descriptor_table_protodef_server_2eproto[] =
  "\n\014server.proto\022\006grep11\032\ngogo.proto\"$\n\025Ge"
  "nerateRandomRequest\022\013\n\003Len\030\001 \001(\004\"%\n\026Gene"
  "rateRandomResponse\022\013\n\003Rnd\030\001 \001(\014\"4\n\021Diges"
  "tInitRequest\022\037\n\004Mech\030\002 \001(\0132\021.grep11.Mech"
  "anism\"#\n\022DigestInitResponse\022\r\n\005State\030\001 \001"
  "(\014\",\n\rDigestRequest\022\r\n\005State\030\001 \001(\014\022\014\n\004Da"
  "ta\030\002 \001(\014\" \n\016DigestResponse\022\016\n\006Digest\030\003 \001"
  "(\014\"2\n\023DigestUpdateRequest\022\r\n\005State\030\001 \001(\014"
  "\022\014\n\004Data\030\002 \001(\014\"%\n\024DigestUpdateResponse\022\r"
  "\n\005State\030\001 \001(\014\".\n\020DigestKeyRequest\022\r\n\005Sta"
  "te\030\001 \001(\014\022\013\n\003Key\030\002 \001(\014\"\"\n\021DigestKeyRespon"
  "se\022\r\n\005State\030\001 \001(\014\"#\n\022DigestFinalRequest\022"
  "\r\n\005State\030\001 \001(\014\"%\n\023DigestFinalResponse\022\016\n"
  "\006Digest\030\002 \001(\014\"D\n\023DigestSingleRequest\022\037\n\004"
  "Mech\030\001 \001(\0132\021.grep11.Mechanism\022\014\n\004Data\030\002 "
  "\001(\014\"&\n\024DigestSingleResponse\022\016\n\006Digest\030\003 "
  "\001(\014\"B\n\022EncryptInitRequest\022\037\n\004Mech\030\002 \001(\0132"
  "\021.grep11.Mechanism\022\013\n\003Key\030\003 \001(\014\"$\n\023Encry"
  "ptInitResponse\022\r\n\005State\030\001 \001(\014\"B\n\022Decrypt"
  "InitRequest\022\037\n\004Mech\030\002 \001(\0132\021.grep11.Mecha"
  "nism\022\013\n\003Key\030\003 \001(\014\"$\n\023DecryptInitResponse"
  "\022\r\n\005State\030\001 \001(\014\"4\n\024EncryptUpdateRequest\022"
  "\r\n\005State\030\001 \001(\014\022\r\n\005Plain\030\002 \001(\014\"8\n\025Encrypt"
  "UpdateResponse\022\r\n\005State\030\001 \001(\014\022\020\n\010Ciphere"
  "d\030\003 \001(\014\"7\n\024DecryptUpdateRequest\022\r\n\005State"
  "\030\001 \001(\014\022\020\n\010Ciphered\030\002 \001(\014\"5\n\025DecryptUpdat"
  "eResponse\022\r\n\005State\030\001 \001(\014\022\r\n\005Plain\030\003 \001(\014\""
  ".\n\016EncryptRequest\022\r\n\005State\030\001 \001(\014\022\r\n\005Plai"
  "n\030\002 \001(\014\"#\n\017EncryptResponse\022\020\n\010Ciphered\030\003"
  " \001(\014\"1\n\016DecryptRequest\022\r\n\005State\030\001 \001(\014\022\020\n"
  "\010Ciphered\030\002 \001(\014\" \n\017DecryptResponse\022\r\n\005Pl"
  "ain\030\003 \001(\014\"$\n\023EncryptFinalRequest\022\r\n\005Stat"
  "e\030\001 \001(\014\"(\n\024EncryptFinalResponse\022\020\n\010Ciphe"
  "red\030\002 \001(\014\"$\n\023DecryptFinalRequest\022\r\n\005Stat"
  "e\030\001 \001(\014\"%\n\024DecryptFinalResponse\022\r\n\005Plain"
  "\030\002 \001(\014\"S\n\024EncryptSingleRequest\022\013\n\003Key\030\001 "
  "\001(\014\022\037\n\004Mech\030\002 \001(\0132\021.grep11.Mechanism\022\r\n\005"
  "Plain\030\003 \001(\014\")\n\025EncryptSingleResponse\022\020\n\010"
  "Ciphered\030\004 \001(\014\"V\n\024DecryptSingleRequest\022\013"
  "\n\003Key\030\001 \001(\014\022\037\n\004Mech\030\002 \001(\0132\021.grep11.Mecha"
  "nism\022\020\n\010Ciphered\030\003 \001(\014\"&\n\025DecryptSingleR"
  "esponse\022\r\n\005Plain\030\004 \001(\014\"C\n\017SignInitReques"
  "t\022\037\n\004Mech\030\002 \001(\0132\021.grep11.Mechanism\022\017\n\007Pr"
  "ivKey\030\003 \001(\014\"!\n\020SignInitResponse\022\r\n\005State"
  "\030\001 \001(\014\"D\n\021VerifyInitRequest\022\037\n\004Mech\030\002 \001("
  "\0132\021.grep11.Mechanism\022\016\n\006PubKey\030\003 \001(\014\"#\n\022"
  "VerifyInitResponse\022\r\n\005State\030\001 \001(\014\"0\n\021Sig"
  "nUpdateRequest\022\r\n\005State\030\001 \001(\014\022\014\n\004Data\030\002 "
  "\001(\014\"#\n\022SignUpdateResponse\022\r\n\005State\030\001 \001(\014"
  "\"2\n\023VerifyUpdateRequest\022\r\n\005State\030\001 \001(\014\022\014"
  "\n\004Data\030\002 \001(\014\"%\n\024VerifyUpdateResponse\022\r\n\005"
  "State\030\001 \001(\014\"!\n\020SignFinalRequest\022\r\n\005State"
  "\030\001 \001(\014\"&\n\021SignFinalResponse\022\021\n\tSignature"
  "\030\002 \001(\014\"6\n\022VerifyFinalRequest\022\r\n\005State\030\001 "
  "\001(\014\022\021\n\tSignature\030\002 \001(\014\"\025\n\023VerifyFinalRes"
  "ponse\"*\n\013SignRequest\022\r\n\005State\030\001 \001(\014\022\014\n\004D"
  "ata\030\002 \001(\014\"!\n\014SignResponse\022\021\n\tSignature\030\003"
  " \001(\014\"\?\n\rVerifyRequest\022\r\n\005State\030\001 \001(\014\022\014\n\004"
  "Data\030\002 \001(\014\022\021\n\tSignature\030\003 \001(\014\"\020\n\016VerifyR"
  "esponse\"S\n\021SignSingleRequest\022\017\n\007PrivKey\030"
  "\001 \001(\014\022\037\n\004Mech\030\002 \001(\0132\021.grep11.Mechanism\022\014"
  "\n\004Data\030\003 \001(\014\"\'\n\022SignSingleResponse\022\021\n\tSi"
  "gnature\030\004 \001(\014\"g\n\023VerifySingleRequest\022\016\n\006"
  "PubKey\030\001 \001(\014\022\037\n\004Mech\030\002 \001(\0132\021.grep11.Mech"
  "anism\022\014\n\004Data\030\003 \001(\014\022\021\n\tSignature\030\004 \001(\014\"\026"
  "\n\024VerifySingleResponse\"\203\002\n\022GenerateKeyRe"
  "quest\022\037\n\004Mech\030\001 \001(\0132\021.grep11.Mechanism\022\213"
  "\001\n\010Template\030\002 \003(\0132(.grep11.GenerateKeyRe"
  "quest.TemplateEntryBO\202\337\037Kgithub.com/ibm-"
  "developer/ibm-cloud-hyperprotectcrypto/g"
  "olang/ep11.Attribute\022\r\n\005KeyId\030\004 \001(\t\032/\n\rT"
  "emplateEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\014"
  ":\0028\001\"4\n\023GenerateKeyResponse\022\013\n\003Key\030\004 \001(\014"
  "\022\020\n\010CheckSum\030\005 \001(\014\"\213\004\n\026GenerateKeyPairRe"
  "quest\022\037\n\004Mech\030\001 \001(\0132\021.grep11.Mechanism\022\233"
  "\001\n\016PubKeyTemplate\030\002 \003(\01322.grep11.Generat"
  "eKeyPairRequest.PubKeyTemplateEntryBO\202\337\037"
  "Kgithub.com/ibm-developer/ibm-cloud-hype"
  "rprotectcrypto/golang/ep11.Attribute\022\235\001\n"
  "\017PrivKeyTemplate\030\003 \003(\01323.grep11.Generate"
  "KeyPairRequest.PrivKeyTemplateEntryBO\202\337\037"
  "Kgithub.com/ibm-developer/ibm-cloud-hype"
  "rprotectcrypto/golang/ep11.Attribute\022\021\n\t"
  "PrivKeyId\030\005 \001(\t\022\020\n\010PubKeyId\030\006 \001(\t\0325\n\023Pub"
  "KeyTemplateEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002"
  " \001(\014:\0028\001\0326\n\024PrivKeyTemplateEntry\022\013\n\003key\030"
  "\001 \001(\004\022\r\n\005value\030\002 \001(\014:\0028\001\":\n\027GenerateKeyP"
  "airResponse\022\017\n\007PrivKey\030\005 \001(\014\022\016\n\006PubKey\030\006"
  " \001(\014\"[\n\016WrapKeyRequest\022\013\n\003Key\030\001 \001(\014\022\013\n\003K"
  "eK\030\002 \001(\014\022\016\n\006MacKey\030\003 \001(\014\022\037\n\004Mech\030\004 \001(\0132\021"
  ".grep11.Mechanism\"\"\n\017WrapKeyResponse\022\017\n\007"
  "Wrapped\030\005 \001(\014\"\263\002\n\020UnwrapKeyRequest\022\017\n\007Wr"
  "apped\030\001 \001(\014\022\013\n\003KeK\030\002 \001(\014\022\016\n\006MacKey\030\003 \001(\014"
  "\022\037\n\004Mech\030\005 \001(\0132\021.grep11.Mechanism\022\211\001\n\010Te"
  "mplate\030\006 \003(\0132&.grep11.UnwrapKeyRequest.T"
  "emplateEntryBO\202\337\037Kgithub.com/ibm-develop"
  "er/ibm-cloud-hyperprotectcrypto/golang/e"
  "p11.Attribute\022\023\n\013UnwrappedId\030\007 \001(\t\032/\n\rTe"
  "mplateEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\014:"
  "\0028\001\"8\n\021UnwrapKeyResponse\022\021\n\tUnwrapped\030\007 "
  "\001(\014\022\020\n\010CheckSum\030\010 \001(\014\"\241\002\n\020DeriveKeyReque"
  "st\022\037\n\004Mech\030\001 \001(\0132\021.grep11.Mechanism\022\211\001\n\010"
  "Template\030\002 \003(\0132&.grep11.DeriveKeyRequest"
  ".TemplateEntryBO\202\337\037Kgithub.com/ibm-devel"
  "oper/ibm-cloud-hyperprotectcrypto/golang"
  "/ep11.Attribute\022\017\n\007BaseKey\030\003 \001(\014\022\014\n\004Data"
  "\030\004 \001(\014\022\020\n\010NewKeyId\030\006 \001(\t\032/\n\rTemplateEntr"
  "y\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\014:\0028\001\"5\n\021Der"
  "iveKeyResponse\022\016\n\006NewKey\030\006 \001(\014\022\020\n\010CheckS"
  "um\030\007 \001(\014\"\031\n\027GetMechanismListRequest\"z\n\030G"
  "etMechanismListResponse\022^\n\005Mechs\030\002 \003(\004BO"
  "\372\336\037Kgithub.com/ibm-developer/ibm-cloud-h"
  "yperprotectcrypto/golang/ep11.Mechanism\""
  "x\n\027GetMechanismInfoRequest\022]\n\004Mech\030\002 \001(\004"
  "BO\372\336\037Kgithub.com/ibm-developer/ibm-cloud"
  "-hyperprotectcrypto/golang/ep11.Mechanis"
  "m\"C\n\030GetMechanismInfoResponse\022\'\n\010MechInf"
  "o\030\003 \001(\0132\025.grep11.MechanismInfo\"\365\001\n\030GetAt"
  "tributeValueRequest\022\016\n\006Object\030\001 \001(\014\022\225\001\n\n"
  "Attributes\030\002 \003(\01320.grep11.GetAttributeVa"
  "lueRequest.AttributesEntryBO\202\337\037Kgithub.c"
  "om/ibm-developer/ibm-cloud-hyperprotectc"
  "rypto/golang/ep11.Attribute\0321\n\017Attribute"
  "sEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\014:\0028\001\"\347"
  "\001\n\031GetAttributeValueResponse\022\226\001\n\nAttribu"
  "tes\030\002 \003(\01321.grep11.GetAttributeValueResp"
  "onse.AttributesEntryBO\202\337\037Kgithub.com/ibm"
  "-developer/ibm-cloud-hyperprotectcrypto/"
  "golang/ep11.Attribute\0321\n\017AttributesEntry"
  "\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\014:\0028\001\"\365\001\n\030Set"
  "AttributeValueRequest\022\016\n\006Object\030\001 \001(\014\022\225\001"
  "\n\nAttributes\030\002 \003(\01320.grep11.SetAttribute"
  "ValueRequest.AttributesEntryBO\202\337\037Kgithub"
  ".com/ibm-developer/ibm-cloud-hyperprotec"
  "tcrypto/golang/ep11.Attribute\0321\n\017Attribu"
  "tesEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\014:\0028\001"
  "\"+\n\031SetAttributeValueResponse\022\016\n\006Object\030"
  "\001 \001(\014\"\202\001\n\tMechanism\022b\n\tMechanism\030\001 \001(\004BO"
  "\372\336\037Kgithub.com/ibm-developer/ibm-cloud-h"
  "yperprotectcrypto/golang/ep11.Mechanism\022"
  "\021\n\tParameter\030\002 \001(\014\"F\n\rMechanismInfo\022\022\n\nM"
  "inKeySize\030\001 \001(\004\022\022\n\nMaxKeySize\030\002 \001(\004\022\r\n\005F"
  "lags\030\003 \001(\004\"\210\001\n\013Grep11Error\022Z\n\004Code\030\001 \001(\004"
  "BL\372\336\037Hgithub.com/ibm-developer/ibm-cloud"
  "-hyperprotectcrypto/golang/ep11.Return\022\016"
  "\n\006Detail\030\002 \001(\t\022\r\n\005Retry\030\003 \001(\0102\355\024\n\006Crypto"
  "\022Q\n\016GenerateRandom\022\035.grep11.GenerateRand"
  "omRequest\032\036.grep11.GenerateRandomRespons"
  "e\"\000\022E\n\nDigestInit\022\031.grep11.DigestInitReq"
  "uest\032\032.grep11.DigestInitResponse\"\000\0229\n\006Di"
  "gest\022\025.grep11.DigestRequest\032\026.grep11.Dig"
  "estResponse\"\000\022K\n\014DigestUpdate\022\033.grep11.D"
  "igestUpdateRequest\032\034.grep11.DigestUpdate"
  "Response\"\000\022B\n\tDigestKey\022\030.grep11.DigestK"
  "eyRequest\032\031.grep11.DigestKeyResponse\"\000\022H"
  "\n\013DigestFinal\022\032.grep11.DigestFinalReques"
  "t\032\033.grep11.DigestFinalResponse\"\000\022K\n\014Dige"
  "stSingle\022\033.grep11.DigestSingleRequest\032\034."
  "grep11.DigestSingleResponse\"\000\022H\n\013Encrypt"
  "Init\022\032.grep11.EncryptInitRequest\032\033.grep1"
  "1.EncryptInitResponse\"\000\022H\n\013DecryptInit\022\032"
  ".grep11.DecryptInitRequest\032\033.grep11.Decr"
  "yptInitResponse\"\000\022N\n\rEncryptUpdate\022\034.gre"
  "p11.EncryptUpdateRequest\032\035.grep11.Encryp"
  "tUpdateResponse\"\000\022N\n\rDecryptUpdate\022\034.gre"
  "p11.DecryptUpdateRequest\032\035.grep11.Decryp"
  "tUpdateResponse\"\000\022<\n\007Encrypt\022\026.grep11.En"
  "cryptRequest\032\027.grep11.EncryptResponse\"\000\022"
  "<\n\007Decrypt\022\026.grep11.DecryptRequest\032\027.gre"
  "p11.DecryptResponse\"\000\022K\n\014EncryptFinal\022\033."
  "grep11.EncryptFinalRequest\032\034.grep11.Encr"
  "yptFinalResponse\"\000\022K\n\014DecryptFinal\022\033.gre"
  "p11.DecryptFinalRequest\032\034.grep11.Decrypt"
  "FinalResponse\"\000\022N\n\rEncryptSingle\022\034.grep1"
  "1.EncryptSingleRequest\032\035.grep11.EncryptS"
  "ingleResponse\"\000\022N\n\rDecryptSingle\022\034.grep1"
  "1.DecryptSingleRequest\032\035.grep11.DecryptS"
  "ingleResponse\"\000\022\?\n\010SignInit\022\027.grep11.Sig"
  "nInitRequest\032\030.grep11.SignInitResponse\"\000"
  "\022E\n\nVerifyInit\022\031.grep11.VerifyInitReques"
  "t\032\032.grep11.VerifyInitResponse\"\000\022E\n\nSignU"
  "pdate\022\031.grep11.SignUpdateRequest\032\032.grep1"
  "1.SignUpdateResponse\"\000\022K\n\014VerifyUpdate\022\033"
  ".grep11.VerifyUpdateRequest\032\034.grep11.Ver"
  "ifyUpdateResponse\"\000\022B\n\tSignFinal\022\030.grep1"
  "1.SignFinalRequest\032\031.grep11.SignFinalRes"
  "ponse\"\000\022H\n\013VerifyFinal\022\032.grep11.VerifyFi"
  "nalRequest\032\033.grep11.VerifyFinalResponse\""
  "\000\0223\n\004Sign\022\023.grep11.SignRequest\032\024.grep11."
  "SignResponse\"\000\0229\n\006Verify\022\025.grep11.Verify"
  "Request\032\026.grep11.VerifyResponse\"\000\022E\n\nSig"
  "nSingle\022\031.grep11.SignSingleRequest\032\032.gre"
  "p11.SignSingleResponse\"\000\022K\n\014VerifySingle"
  "\022\033.grep11.VerifySingleRequest\032\034.grep11.V"
  "erifySingleResponse\"\000\022H\n\013GenerateKey\022\032.g"
  "rep11.GenerateKeyRequest\032\033.grep11.Genera"
  "teKeyResponse\"\000\022T\n\017GenerateKeyPair\022\036.gre"
  "p11.GenerateKeyPairRequest\032\037.grep11.Gene"
  "rateKeyPairResponse\"\000\022<\n\007WrapKey\022\026.grep1"
  "1.WrapKeyRequest\032\027.grep11.WrapKeyRespons"
  "e\"\000\022B\n\tUnwrapKey\022\030.grep11.UnwrapKeyReque"
  "st\032\031.grep11.UnwrapKeyResponse\"\000\022B\n\tDeriv"
  "eKey\022\030.grep11.DeriveKeyRequest\032\031.grep11."
  "DeriveKeyResponse\"\000\022W\n\020GetMechanismList\022"
  "\037.grep11.GetMechanismListRequest\032 .grep1"
  "1.GetMechanismListResponse\"\000\022W\n\020GetMecha"
  "nismInfo\022\037.grep11.GetMechanismInfoReques"
  "t\032 .grep11.GetMechanismInfoResponse\"\000\022Z\n"
  "\021GetAttributeValue\022 .grep11.GetAttribute"
  "ValueRequest\032!.grep11.GetAttributeValueR"
  "esponse\"\000\022Z\n\021SetAttributeValue\022 .grep11."
  "SetAttributeValueRequest\032!.grep11.SetAtt"
  "ributeValueResponse\"\000B\036\n\032com.ibm.crypto."
  "grep11.grpcP\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_server_2eproto = {
  false, InitDefaults_server_2eproto, 
  descriptor_table_protodef_server_2eproto,
  "server.proto", &assign_descriptors_table_server_2eproto, 8541,
};

void AddDescriptors_server_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_gogo_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_server_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_server_2eproto = []() { AddDescriptors_server_2eproto(); return true; }();
namespace grep11 {

// ===================================================================

void GenerateRandomRequest::InitAsDefaultInstance() {
}
class GenerateRandomRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateRandomRequest::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateRandomRequest::GenerateRandomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GenerateRandomRequest)
}
GenerateRandomRequest::GenerateRandomRequest(const GenerateRandomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  len_ = from.len_;
  // @@protoc_insertion_point(copy_constructor:grep11.GenerateRandomRequest)
}

void GenerateRandomRequest::SharedCtor() {
  len_ = PROTOBUF_ULONGLONG(0);
}

GenerateRandomRequest::~GenerateRandomRequest() {
  // @@protoc_insertion_point(destructor:grep11.GenerateRandomRequest)
  SharedDtor();
}

void GenerateRandomRequest::SharedDtor() {
}

void GenerateRandomRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateRandomRequest& GenerateRandomRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GenerateRandomRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GenerateRandomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GenerateRandomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  len_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GenerateRandomRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GenerateRandomRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 Len = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_len(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateRandomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GenerateRandomRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Len = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GenerateRandomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GenerateRandomRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GenerateRandomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GenerateRandomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Len = 1;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->len(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GenerateRandomRequest)
}

::google::protobuf::uint8* GenerateRandomRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GenerateRandomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Len = 1;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->len(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GenerateRandomRequest)
  return target;
}

size_t GenerateRandomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GenerateRandomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Len = 1;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateRandomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GenerateRandomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateRandomRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GenerateRandomRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GenerateRandomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GenerateRandomRequest)
    MergeFrom(*source);
  }
}

void GenerateRandomRequest::MergeFrom(const GenerateRandomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GenerateRandomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.len() != 0) {
    set_len(from.len());
  }
}

void GenerateRandomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GenerateRandomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateRandomRequest::CopyFrom(const GenerateRandomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GenerateRandomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateRandomRequest::IsInitialized() const {
  return true;
}

void GenerateRandomRequest::Swap(GenerateRandomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateRandomRequest::InternalSwap(GenerateRandomRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(len_, other->len_);
}

::google::protobuf::Metadata GenerateRandomRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GenerateRandomResponse::InitAsDefaultInstance() {
}
class GenerateRandomResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateRandomResponse::kRndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateRandomResponse::GenerateRandomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GenerateRandomResponse)
}
GenerateRandomResponse::GenerateRandomResponse(const GenerateRandomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rnd().size() > 0) {
    rnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rnd_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.GenerateRandomResponse)
}

void GenerateRandomResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GenerateRandomResponse_server_2eproto.base);
  rnd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenerateRandomResponse::~GenerateRandomResponse() {
  // @@protoc_insertion_point(destructor:grep11.GenerateRandomResponse)
  SharedDtor();
}

void GenerateRandomResponse::SharedDtor() {
  rnd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateRandomResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateRandomResponse& GenerateRandomResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GenerateRandomResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GenerateRandomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GenerateRandomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GenerateRandomResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GenerateRandomResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Rnd = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_rnd();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateRandomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GenerateRandomResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Rnd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rnd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GenerateRandomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GenerateRandomResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GenerateRandomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GenerateRandomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Rnd = 1;
  if (this->rnd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->rnd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GenerateRandomResponse)
}

::google::protobuf::uint8* GenerateRandomResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GenerateRandomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Rnd = 1;
  if (this->rnd().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->rnd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GenerateRandomResponse)
  return target;
}

size_t GenerateRandomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GenerateRandomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Rnd = 1;
  if (this->rnd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rnd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateRandomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GenerateRandomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateRandomResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GenerateRandomResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GenerateRandomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GenerateRandomResponse)
    MergeFrom(*source);
  }
}

void GenerateRandomResponse::MergeFrom(const GenerateRandomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GenerateRandomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rnd().size() > 0) {

    rnd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rnd_);
  }
}

void GenerateRandomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GenerateRandomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateRandomResponse::CopyFrom(const GenerateRandomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GenerateRandomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateRandomResponse::IsInitialized() const {
  return true;
}

void GenerateRandomResponse::Swap(GenerateRandomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateRandomResponse::InternalSwap(GenerateRandomResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rnd_.Swap(&other->rnd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GenerateRandomResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestInitRequest::InitAsDefaultInstance() {
  ::grep11::_DigestInitRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class DigestInitRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const DigestInitRequest* msg);
};

const ::grep11::Mechanism&
DigestInitRequest::HasBitSetters::mech(const DigestInitRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestInitRequest::kMechFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestInitRequest::DigestInitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestInitRequest)
}
DigestInitRequest::DigestInitRequest(const DigestInitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestInitRequest)
}

void DigestInitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestInitRequest_server_2eproto.base);
  mech_ = nullptr;
}

DigestInitRequest::~DigestInitRequest() {
  // @@protoc_insertion_point(destructor:grep11.DigestInitRequest)
  SharedDtor();
}

void DigestInitRequest::SharedDtor() {
  if (this != internal_default_instance()) delete mech_;
}

void DigestInitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestInitRequest& DigestInitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestInitRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DigestInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestInitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestInitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestInitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestInitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestInitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestInitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestInitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestInitRequest)
}

::google::protobuf::uint8* DigestInitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestInitRequest)
  return target;
}

size_t DigestInitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestInitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestInitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestInitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DigestInitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestInitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestInitRequest)
    MergeFrom(*source);
  }
}

void DigestInitRequest::MergeFrom(const DigestInitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void DigestInitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestInitRequest::CopyFrom(const DigestInitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestInitRequest::IsInitialized() const {
  return true;
}

void DigestInitRequest::Swap(DigestInitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestInitRequest::InternalSwap(DigestInitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata DigestInitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestInitResponse::InitAsDefaultInstance() {
}
class DigestInitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestInitResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestInitResponse::DigestInitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestInitResponse)
}
DigestInitResponse::DigestInitResponse(const DigestInitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestInitResponse)
}

void DigestInitResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestInitResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestInitResponse::~DigestInitResponse() {
  // @@protoc_insertion_point(destructor:grep11.DigestInitResponse)
  SharedDtor();
}

void DigestInitResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestInitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestInitResponse& DigestInitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestInitResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DigestInitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestInitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestInitResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestInitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestInitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestInitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestInitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestInitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestInitResponse)
}

::google::protobuf::uint8* DigestInitResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestInitResponse)
  return target;
}

size_t DigestInitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestInitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestInitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestInitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DigestInitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestInitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestInitResponse)
    MergeFrom(*source);
  }
}

void DigestInitResponse::MergeFrom(const DigestInitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void DigestInitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestInitResponse::CopyFrom(const DigestInitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestInitResponse::IsInitialized() const {
  return true;
}

void DigestInitResponse::Swap(DigestInitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestInitResponse::InternalSwap(DigestInitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestInitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestRequest::InitAsDefaultInstance() {
}
class DigestRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestRequest::kStateFieldNumber;
const int DigestRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestRequest::DigestRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestRequest)
}
DigestRequest::DigestRequest(const DigestRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestRequest)
}

void DigestRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestRequest::~DigestRequest() {
  // @@protoc_insertion_point(destructor:grep11.DigestRequest)
  SharedDtor();
}

void DigestRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestRequest& DigestRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DigestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestRequest)
}

::google::protobuf::uint8* DigestRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestRequest)
  return target;
}

size_t DigestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DigestRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestRequest)
    MergeFrom(*source);
  }
}

void DigestRequest::MergeFrom(const DigestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void DigestRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestRequest::CopyFrom(const DigestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestRequest::IsInitialized() const {
  return true;
}

void DigestRequest::Swap(DigestRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestRequest::InternalSwap(DigestRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestResponse::InitAsDefaultInstance() {
}
class DigestResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestResponse::kDigestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestResponse::DigestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestResponse)
}
DigestResponse::DigestResponse(const DigestResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.digest().size() > 0) {
    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestResponse)
}

void DigestResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestResponse_server_2eproto.base);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestResponse::~DigestResponse() {
  // @@protoc_insertion_point(destructor:grep11.DigestResponse)
  SharedDtor();
}

void DigestResponse::SharedDtor() {
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestResponse& DigestResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DigestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Digest = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_digest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Digest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_digest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Digest = 3;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->digest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestResponse)
}

::google::protobuf::uint8* DigestResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Digest = 3;
  if (this->digest().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->digest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestResponse)
  return target;
}

size_t DigestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Digest = 3;
  if (this->digest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->digest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DigestResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestResponse)
    MergeFrom(*source);
  }
}

void DigestResponse::MergeFrom(const DigestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.digest().size() > 0) {

    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
}

void DigestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestResponse::CopyFrom(const DigestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestResponse::IsInitialized() const {
  return true;
}

void DigestResponse::Swap(DigestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestResponse::InternalSwap(DigestResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  digest_.Swap(&other->digest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestUpdateRequest::InitAsDefaultInstance() {
}
class DigestUpdateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestUpdateRequest::kStateFieldNumber;
const int DigestUpdateRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestUpdateRequest::DigestUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestUpdateRequest)
}
DigestUpdateRequest::DigestUpdateRequest(const DigestUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestUpdateRequest)
}

void DigestUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestUpdateRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestUpdateRequest::~DigestUpdateRequest() {
  // @@protoc_insertion_point(destructor:grep11.DigestUpdateRequest)
  SharedDtor();
}

void DigestUpdateRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestUpdateRequest& DigestUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestUpdateRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DigestUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestUpdateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestUpdateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestUpdateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestUpdateRequest)
}

::google::protobuf::uint8* DigestUpdateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestUpdateRequest)
  return target;
}

size_t DigestUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestUpdateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DigestUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestUpdateRequest)
    MergeFrom(*source);
  }
}

void DigestUpdateRequest::MergeFrom(const DigestUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void DigestUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestUpdateRequest::CopyFrom(const DigestUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestUpdateRequest::IsInitialized() const {
  return true;
}

void DigestUpdateRequest::Swap(DigestUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestUpdateRequest::InternalSwap(DigestUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestUpdateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestUpdateResponse::InitAsDefaultInstance() {
}
class DigestUpdateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestUpdateResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestUpdateResponse::DigestUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestUpdateResponse)
}
DigestUpdateResponse::DigestUpdateResponse(const DigestUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestUpdateResponse)
}

void DigestUpdateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestUpdateResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestUpdateResponse::~DigestUpdateResponse() {
  // @@protoc_insertion_point(destructor:grep11.DigestUpdateResponse)
  SharedDtor();
}

void DigestUpdateResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestUpdateResponse& DigestUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestUpdateResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DigestUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestUpdateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestUpdateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestUpdateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestUpdateResponse)
}

::google::protobuf::uint8* DigestUpdateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestUpdateResponse)
  return target;
}

size_t DigestUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestUpdateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestUpdateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DigestUpdateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestUpdateResponse)
    MergeFrom(*source);
  }
}

void DigestUpdateResponse::MergeFrom(const DigestUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void DigestUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestUpdateResponse::CopyFrom(const DigestUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestUpdateResponse::IsInitialized() const {
  return true;
}

void DigestUpdateResponse::Swap(DigestUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestUpdateResponse::InternalSwap(DigestUpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestUpdateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestKeyRequest::InitAsDefaultInstance() {
}
class DigestKeyRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestKeyRequest::kStateFieldNumber;
const int DigestKeyRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestKeyRequest::DigestKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestKeyRequest)
}
DigestKeyRequest::DigestKeyRequest(const DigestKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestKeyRequest)
}

void DigestKeyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestKeyRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestKeyRequest::~DigestKeyRequest() {
  // @@protoc_insertion_point(destructor:grep11.DigestKeyRequest)
  SharedDtor();
}

void DigestKeyRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestKeyRequest& DigestKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestKeyRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DigestKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestKeyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestKeyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestKeyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestKeyRequest)
}

::google::protobuf::uint8* DigestKeyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestKeyRequest)
  return target;
}

size_t DigestKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestKeyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestKeyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DigestKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestKeyRequest)
    MergeFrom(*source);
  }
}

void DigestKeyRequest::MergeFrom(const DigestKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void DigestKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestKeyRequest::CopyFrom(const DigestKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestKeyRequest::IsInitialized() const {
  return true;
}

void DigestKeyRequest::Swap(DigestKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestKeyRequest::InternalSwap(DigestKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestKeyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestKeyResponse::InitAsDefaultInstance() {
}
class DigestKeyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestKeyResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestKeyResponse::DigestKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestKeyResponse)
}
DigestKeyResponse::DigestKeyResponse(const DigestKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestKeyResponse)
}

void DigestKeyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestKeyResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestKeyResponse::~DigestKeyResponse() {
  // @@protoc_insertion_point(destructor:grep11.DigestKeyResponse)
  SharedDtor();
}

void DigestKeyResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestKeyResponse& DigestKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestKeyResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DigestKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestKeyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestKeyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestKeyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestKeyResponse)
}

::google::protobuf::uint8* DigestKeyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestKeyResponse)
  return target;
}

size_t DigestKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestKeyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestKeyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DigestKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestKeyResponse)
    MergeFrom(*source);
  }
}

void DigestKeyResponse::MergeFrom(const DigestKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void DigestKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestKeyResponse::CopyFrom(const DigestKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestKeyResponse::IsInitialized() const {
  return true;
}

void DigestKeyResponse::Swap(DigestKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestKeyResponse::InternalSwap(DigestKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestKeyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestFinalRequest::InitAsDefaultInstance() {
}
class DigestFinalRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestFinalRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestFinalRequest::DigestFinalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestFinalRequest)
}
DigestFinalRequest::DigestFinalRequest(const DigestFinalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestFinalRequest)
}

void DigestFinalRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestFinalRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestFinalRequest::~DigestFinalRequest() {
  // @@protoc_insertion_point(destructor:grep11.DigestFinalRequest)
  SharedDtor();
}

void DigestFinalRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestFinalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestFinalRequest& DigestFinalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestFinalRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DigestFinalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestFinalRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestFinalRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestFinalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestFinalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestFinalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestFinalRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestFinalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestFinalRequest)
}

::google::protobuf::uint8* DigestFinalRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestFinalRequest)
  return target;
}

size_t DigestFinalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestFinalRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestFinalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestFinalRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DigestFinalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestFinalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestFinalRequest)
    MergeFrom(*source);
  }
}

void DigestFinalRequest::MergeFrom(const DigestFinalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void DigestFinalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestFinalRequest::CopyFrom(const DigestFinalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestFinalRequest::IsInitialized() const {
  return true;
}

void DigestFinalRequest::Swap(DigestFinalRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestFinalRequest::InternalSwap(DigestFinalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestFinalRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestFinalResponse::InitAsDefaultInstance() {
}
class DigestFinalResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestFinalResponse::kDigestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestFinalResponse::DigestFinalResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestFinalResponse)
}
DigestFinalResponse::DigestFinalResponse(const DigestFinalResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.digest().size() > 0) {
    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestFinalResponse)
}

void DigestFinalResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestFinalResponse_server_2eproto.base);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestFinalResponse::~DigestFinalResponse() {
  // @@protoc_insertion_point(destructor:grep11.DigestFinalResponse)
  SharedDtor();
}

void DigestFinalResponse::SharedDtor() {
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestFinalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestFinalResponse& DigestFinalResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestFinalResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DigestFinalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestFinalResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestFinalResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Digest = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_digest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestFinalResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestFinalResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Digest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_digest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestFinalResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestFinalResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestFinalResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Digest = 2;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->digest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestFinalResponse)
}

::google::protobuf::uint8* DigestFinalResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Digest = 2;
  if (this->digest().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->digest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestFinalResponse)
  return target;
}

size_t DigestFinalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestFinalResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Digest = 2;
  if (this->digest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->digest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestFinalResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestFinalResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DigestFinalResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestFinalResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestFinalResponse)
    MergeFrom(*source);
  }
}

void DigestFinalResponse::MergeFrom(const DigestFinalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.digest().size() > 0) {

    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
}

void DigestFinalResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestFinalResponse::CopyFrom(const DigestFinalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestFinalResponse::IsInitialized() const {
  return true;
}

void DigestFinalResponse::Swap(DigestFinalResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestFinalResponse::InternalSwap(DigestFinalResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  digest_.Swap(&other->digest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestFinalResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestSingleRequest::InitAsDefaultInstance() {
  ::grep11::_DigestSingleRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class DigestSingleRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const DigestSingleRequest* msg);
};

const ::grep11::Mechanism&
DigestSingleRequest::HasBitSetters::mech(const DigestSingleRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestSingleRequest::kMechFieldNumber;
const int DigestSingleRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestSingleRequest::DigestSingleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestSingleRequest)
}
DigestSingleRequest::DigestSingleRequest(const DigestSingleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestSingleRequest)
}

void DigestSingleRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestSingleRequest_server_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

DigestSingleRequest::~DigestSingleRequest() {
  // @@protoc_insertion_point(destructor:grep11.DigestSingleRequest)
  SharedDtor();
}

void DigestSingleRequest::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void DigestSingleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestSingleRequest& DigestSingleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestSingleRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DigestSingleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestSingleRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestSingleRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes Data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestSingleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestSingleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestSingleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestSingleRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestSingleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::mech(this), output);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestSingleRequest)
}

::google::protobuf::uint8* DigestSingleRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::mech(this), target);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestSingleRequest)
  return target;
}

size_t DigestSingleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestSingleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestSingleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestSingleRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DigestSingleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestSingleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestSingleRequest)
    MergeFrom(*source);
  }
}

void DigestSingleRequest::MergeFrom(const DigestSingleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void DigestSingleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestSingleRequest::CopyFrom(const DigestSingleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestSingleRequest::IsInitialized() const {
  return true;
}

void DigestSingleRequest::Swap(DigestSingleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestSingleRequest::InternalSwap(DigestSingleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata DigestSingleRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestSingleResponse::InitAsDefaultInstance() {
}
class DigestSingleResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestSingleResponse::kDigestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestSingleResponse::DigestSingleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DigestSingleResponse)
}
DigestSingleResponse::DigestSingleResponse(const DigestSingleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.digest().size() > 0) {
    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DigestSingleResponse)
}

void DigestSingleResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestSingleResponse_server_2eproto.base);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestSingleResponse::~DigestSingleResponse() {
  // @@protoc_insertion_point(destructor:grep11.DigestSingleResponse)
  SharedDtor();
}

void DigestSingleResponse::SharedDtor() {
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestSingleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestSingleResponse& DigestSingleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestSingleResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DigestSingleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DigestSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestSingleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestSingleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Digest = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_digest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestSingleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DigestSingleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Digest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_digest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DigestSingleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DigestSingleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestSingleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DigestSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Digest = 3;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->digest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DigestSingleResponse)
}

::google::protobuf::uint8* DigestSingleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DigestSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Digest = 3;
  if (this->digest().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->digest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DigestSingleResponse)
  return target;
}

size_t DigestSingleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DigestSingleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Digest = 3;
  if (this->digest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->digest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestSingleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DigestSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestSingleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DigestSingleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DigestSingleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DigestSingleResponse)
    MergeFrom(*source);
  }
}

void DigestSingleResponse::MergeFrom(const DigestSingleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DigestSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.digest().size() > 0) {

    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
}

void DigestSingleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DigestSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestSingleResponse::CopyFrom(const DigestSingleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DigestSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestSingleResponse::IsInitialized() const {
  return true;
}

void DigestSingleResponse::Swap(DigestSingleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestSingleResponse::InternalSwap(DigestSingleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  digest_.Swap(&other->digest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestSingleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptInitRequest::InitAsDefaultInstance() {
  ::grep11::_EncryptInitRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class EncryptInitRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const EncryptInitRequest* msg);
};

const ::grep11::Mechanism&
EncryptInitRequest::HasBitSetters::mech(const EncryptInitRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptInitRequest::kMechFieldNumber;
const int EncryptInitRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptInitRequest::EncryptInitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptInitRequest)
}
EncryptInitRequest::EncryptInitRequest(const EncryptInitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptInitRequest)
}

void EncryptInitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptInitRequest_server_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

EncryptInitRequest::~EncryptInitRequest() {
  // @@protoc_insertion_point(destructor:grep11.EncryptInitRequest)
  SharedDtor();
}

void EncryptInitRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void EncryptInitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptInitRequest& EncryptInitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptInitRequest_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptInitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptInitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes Key = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptInitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptInitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptInitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptInitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptInitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  // bytes Key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptInitRequest)
}

::google::protobuf::uint8* EncryptInitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  // bytes Key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptInitRequest)
  return target;
}

size_t EncryptInitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptInitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptInitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptInitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptInitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptInitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptInitRequest)
    MergeFrom(*source);
  }
}

void EncryptInitRequest::MergeFrom(const EncryptInitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void EncryptInitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptInitRequest::CopyFrom(const EncryptInitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptInitRequest::IsInitialized() const {
  return true;
}

void EncryptInitRequest::Swap(EncryptInitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptInitRequest::InternalSwap(EncryptInitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata EncryptInitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptInitResponse::InitAsDefaultInstance() {
}
class EncryptInitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptInitResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptInitResponse::EncryptInitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptInitResponse)
}
EncryptInitResponse::EncryptInitResponse(const EncryptInitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptInitResponse)
}

void EncryptInitResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptInitResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptInitResponse::~EncryptInitResponse() {
  // @@protoc_insertion_point(destructor:grep11.EncryptInitResponse)
  SharedDtor();
}

void EncryptInitResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptInitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptInitResponse& EncryptInitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptInitResponse_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptInitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptInitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptInitResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptInitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptInitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptInitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptInitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptInitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptInitResponse)
}

::google::protobuf::uint8* EncryptInitResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptInitResponse)
  return target;
}

size_t EncryptInitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptInitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptInitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptInitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptInitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptInitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptInitResponse)
    MergeFrom(*source);
  }
}

void EncryptInitResponse::MergeFrom(const EncryptInitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void EncryptInitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptInitResponse::CopyFrom(const EncryptInitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptInitResponse::IsInitialized() const {
  return true;
}

void EncryptInitResponse::Swap(EncryptInitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptInitResponse::InternalSwap(EncryptInitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EncryptInitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptInitRequest::InitAsDefaultInstance() {
  ::grep11::_DecryptInitRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class DecryptInitRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const DecryptInitRequest* msg);
};

const ::grep11::Mechanism&
DecryptInitRequest::HasBitSetters::mech(const DecryptInitRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptInitRequest::kMechFieldNumber;
const int DecryptInitRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptInitRequest::DecryptInitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptInitRequest)
}
DecryptInitRequest::DecryptInitRequest(const DecryptInitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptInitRequest)
}

void DecryptInitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptInitRequest_server_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

DecryptInitRequest::~DecryptInitRequest() {
  // @@protoc_insertion_point(destructor:grep11.DecryptInitRequest)
  SharedDtor();
}

void DecryptInitRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void DecryptInitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptInitRequest& DecryptInitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptInitRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptInitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptInitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes Key = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptInitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptInitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptInitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptInitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptInitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  // bytes Key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptInitRequest)
}

::google::protobuf::uint8* DecryptInitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  // bytes Key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptInitRequest)
  return target;
}

size_t DecryptInitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptInitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptInitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptInitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptInitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptInitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptInitRequest)
    MergeFrom(*source);
  }
}

void DecryptInitRequest::MergeFrom(const DecryptInitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void DecryptInitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptInitRequest::CopyFrom(const DecryptInitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptInitRequest::IsInitialized() const {
  return true;
}

void DecryptInitRequest::Swap(DecryptInitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptInitRequest::InternalSwap(DecryptInitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata DecryptInitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptInitResponse::InitAsDefaultInstance() {
}
class DecryptInitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptInitResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptInitResponse::DecryptInitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptInitResponse)
}
DecryptInitResponse::DecryptInitResponse(const DecryptInitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptInitResponse)
}

void DecryptInitResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptInitResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptInitResponse::~DecryptInitResponse() {
  // @@protoc_insertion_point(destructor:grep11.DecryptInitResponse)
  SharedDtor();
}

void DecryptInitResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptInitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptInitResponse& DecryptInitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptInitResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptInitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptInitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptInitResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptInitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptInitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptInitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptInitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptInitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptInitResponse)
}

::google::protobuf::uint8* DecryptInitResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptInitResponse)
  return target;
}

size_t DecryptInitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptInitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptInitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptInitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptInitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptInitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptInitResponse)
    MergeFrom(*source);
  }
}

void DecryptInitResponse::MergeFrom(const DecryptInitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void DecryptInitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptInitResponse::CopyFrom(const DecryptInitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptInitResponse::IsInitialized() const {
  return true;
}

void DecryptInitResponse::Swap(DecryptInitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptInitResponse::InternalSwap(DecryptInitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DecryptInitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptUpdateRequest::InitAsDefaultInstance() {
}
class EncryptUpdateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptUpdateRequest::kStateFieldNumber;
const int EncryptUpdateRequest::kPlainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptUpdateRequest::EncryptUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptUpdateRequest)
}
EncryptUpdateRequest::EncryptUpdateRequest(const EncryptUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptUpdateRequest)
}

void EncryptUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptUpdateRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptUpdateRequest::~EncryptUpdateRequest() {
  // @@protoc_insertion_point(destructor:grep11.EncryptUpdateRequest)
  SharedDtor();
}

void EncryptUpdateRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptUpdateRequest& EncryptUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptUpdateRequest_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptUpdateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptUpdateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Plain = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Plain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptUpdateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->plain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptUpdateRequest)
}

::google::protobuf::uint8* EncryptUpdateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->plain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptUpdateRequest)
  return target;
}

size_t EncryptUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptUpdateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptUpdateRequest)
    MergeFrom(*source);
  }
}

void EncryptUpdateRequest::MergeFrom(const EncryptUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
}

void EncryptUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptUpdateRequest::CopyFrom(const EncryptUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptUpdateRequest::IsInitialized() const {
  return true;
}

void EncryptUpdateRequest::Swap(EncryptUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptUpdateRequest::InternalSwap(EncryptUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EncryptUpdateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptUpdateResponse::InitAsDefaultInstance() {
}
class EncryptUpdateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptUpdateResponse::kStateFieldNumber;
const int EncryptUpdateResponse::kCipheredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptUpdateResponse::EncryptUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptUpdateResponse)
}
EncryptUpdateResponse::EncryptUpdateResponse(const EncryptUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphered().size() > 0) {
    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptUpdateResponse)
}

void EncryptUpdateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptUpdateResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptUpdateResponse::~EncryptUpdateResponse() {
  // @@protoc_insertion_point(destructor:grep11.EncryptUpdateResponse)
  SharedDtor();
}

void EncryptUpdateResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptUpdateResponse& EncryptUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptUpdateResponse_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptUpdateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptUpdateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Ciphered = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ciphered();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Ciphered = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptUpdateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ciphered(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptUpdateResponse)
}

::google::protobuf::uint8* EncryptUpdateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ciphered(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptUpdateResponse)
  return target;
}

size_t EncryptUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptUpdateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphered());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptUpdateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptUpdateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptUpdateResponse)
    MergeFrom(*source);
  }
}

void EncryptUpdateResponse::MergeFrom(const EncryptUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.ciphered().size() > 0) {

    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
}

void EncryptUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptUpdateResponse::CopyFrom(const EncryptUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptUpdateResponse::IsInitialized() const {
  return true;
}

void EncryptUpdateResponse::Swap(EncryptUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptUpdateResponse::InternalSwap(EncryptUpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ciphered_.Swap(&other->ciphered_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EncryptUpdateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptUpdateRequest::InitAsDefaultInstance() {
}
class DecryptUpdateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptUpdateRequest::kStateFieldNumber;
const int DecryptUpdateRequest::kCipheredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptUpdateRequest::DecryptUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptUpdateRequest)
}
DecryptUpdateRequest::DecryptUpdateRequest(const DecryptUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphered().size() > 0) {
    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptUpdateRequest)
}

void DecryptUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptUpdateRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptUpdateRequest::~DecryptUpdateRequest() {
  // @@protoc_insertion_point(destructor:grep11.DecryptUpdateRequest)
  SharedDtor();
}

void DecryptUpdateRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptUpdateRequest& DecryptUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptUpdateRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptUpdateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptUpdateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Ciphered = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ciphered();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Ciphered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptUpdateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ciphered(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptUpdateRequest)
}

::google::protobuf::uint8* DecryptUpdateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ciphered(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptUpdateRequest)
  return target;
}

size_t DecryptUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphered());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptUpdateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptUpdateRequest)
    MergeFrom(*source);
  }
}

void DecryptUpdateRequest::MergeFrom(const DecryptUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.ciphered().size() > 0) {

    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
}

void DecryptUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptUpdateRequest::CopyFrom(const DecryptUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptUpdateRequest::IsInitialized() const {
  return true;
}

void DecryptUpdateRequest::Swap(DecryptUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptUpdateRequest::InternalSwap(DecryptUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ciphered_.Swap(&other->ciphered_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DecryptUpdateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptUpdateResponse::InitAsDefaultInstance() {
}
class DecryptUpdateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptUpdateResponse::kStateFieldNumber;
const int DecryptUpdateResponse::kPlainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptUpdateResponse::DecryptUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptUpdateResponse)
}
DecryptUpdateResponse::DecryptUpdateResponse(const DecryptUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptUpdateResponse)
}

void DecryptUpdateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptUpdateResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptUpdateResponse::~DecryptUpdateResponse() {
  // @@protoc_insertion_point(destructor:grep11.DecryptUpdateResponse)
  SharedDtor();
}

void DecryptUpdateResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptUpdateResponse& DecryptUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptUpdateResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptUpdateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptUpdateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Plain = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Plain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptUpdateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->plain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptUpdateResponse)
}

::google::protobuf::uint8* DecryptUpdateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->plain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptUpdateResponse)
  return target;
}

size_t DecryptUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptUpdateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptUpdateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptUpdateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptUpdateResponse)
    MergeFrom(*source);
  }
}

void DecryptUpdateResponse::MergeFrom(const DecryptUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
}

void DecryptUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptUpdateResponse::CopyFrom(const DecryptUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptUpdateResponse::IsInitialized() const {
  return true;
}

void DecryptUpdateResponse::Swap(DecryptUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptUpdateResponse::InternalSwap(DecryptUpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DecryptUpdateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptRequest::InitAsDefaultInstance() {
}
class EncryptRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptRequest::kStateFieldNumber;
const int EncryptRequest::kPlainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptRequest::EncryptRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptRequest)
}
EncryptRequest::EncryptRequest(const EncryptRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptRequest)
}

void EncryptRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptRequest::~EncryptRequest() {
  // @@protoc_insertion_point(destructor:grep11.EncryptRequest)
  SharedDtor();
}

void EncryptRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptRequest& EncryptRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptRequest_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Plain = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Plain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->plain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptRequest)
}

::google::protobuf::uint8* EncryptRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->plain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptRequest)
  return target;
}

size_t EncryptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptRequest)
    MergeFrom(*source);
  }
}

void EncryptRequest::MergeFrom(const EncryptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
}

void EncryptRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptRequest::CopyFrom(const EncryptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptRequest::IsInitialized() const {
  return true;
}

void EncryptRequest::Swap(EncryptRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptRequest::InternalSwap(EncryptRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EncryptRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptResponse::InitAsDefaultInstance() {
}
class EncryptResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptResponse::kCipheredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptResponse::EncryptResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptResponse)
}
EncryptResponse::EncryptResponse(const EncryptResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphered().size() > 0) {
    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptResponse)
}

void EncryptResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptResponse_server_2eproto.base);
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptResponse::~EncryptResponse() {
  // @@protoc_insertion_point(destructor:grep11.EncryptResponse)
  SharedDtor();
}

void EncryptResponse::SharedDtor() {
  ciphered_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptResponse& EncryptResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptResponse_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Ciphered = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ciphered();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Ciphered = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ciphered(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptResponse)
}

::google::protobuf::uint8* EncryptResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ciphered(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptResponse)
  return target;
}

size_t EncryptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphered());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptResponse)
    MergeFrom(*source);
  }
}

void EncryptResponse::MergeFrom(const EncryptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ciphered().size() > 0) {

    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
}

void EncryptResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptResponse::CopyFrom(const EncryptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptResponse::IsInitialized() const {
  return true;
}

void EncryptResponse::Swap(EncryptResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptResponse::InternalSwap(EncryptResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ciphered_.Swap(&other->ciphered_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EncryptResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptRequest::InitAsDefaultInstance() {
}
class DecryptRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptRequest::kStateFieldNumber;
const int DecryptRequest::kCipheredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptRequest::DecryptRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptRequest)
}
DecryptRequest::DecryptRequest(const DecryptRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphered().size() > 0) {
    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptRequest)
}

void DecryptRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptRequest::~DecryptRequest() {
  // @@protoc_insertion_point(destructor:grep11.DecryptRequest)
  SharedDtor();
}

void DecryptRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptRequest& DecryptRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Ciphered = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ciphered();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Ciphered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ciphered(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptRequest)
}

::google::protobuf::uint8* DecryptRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ciphered(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptRequest)
  return target;
}

size_t DecryptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphered());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptRequest)
    MergeFrom(*source);
  }
}

void DecryptRequest::MergeFrom(const DecryptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.ciphered().size() > 0) {

    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
}

void DecryptRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptRequest::CopyFrom(const DecryptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptRequest::IsInitialized() const {
  return true;
}

void DecryptRequest::Swap(DecryptRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptRequest::InternalSwap(DecryptRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ciphered_.Swap(&other->ciphered_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DecryptRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptResponse::InitAsDefaultInstance() {
}
class DecryptResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptResponse::kPlainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptResponse::DecryptResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptResponse)
}
DecryptResponse::DecryptResponse(const DecryptResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptResponse)
}

void DecryptResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptResponse_server_2eproto.base);
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptResponse::~DecryptResponse() {
  // @@protoc_insertion_point(destructor:grep11.DecryptResponse)
  SharedDtor();
}

void DecryptResponse::SharedDtor() {
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptResponse& DecryptResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Plain = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Plain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->plain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptResponse)
}

::google::protobuf::uint8* DecryptResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->plain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptResponse)
  return target;
}

size_t DecryptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptResponse)
    MergeFrom(*source);
  }
}

void DecryptResponse::MergeFrom(const DecryptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
}

void DecryptResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptResponse::CopyFrom(const DecryptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptResponse::IsInitialized() const {
  return true;
}

void DecryptResponse::Swap(DecryptResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptResponse::InternalSwap(DecryptResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DecryptResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptFinalRequest::InitAsDefaultInstance() {
}
class EncryptFinalRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptFinalRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptFinalRequest::EncryptFinalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptFinalRequest)
}
EncryptFinalRequest::EncryptFinalRequest(const EncryptFinalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptFinalRequest)
}

void EncryptFinalRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptFinalRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptFinalRequest::~EncryptFinalRequest() {
  // @@protoc_insertion_point(destructor:grep11.EncryptFinalRequest)
  SharedDtor();
}

void EncryptFinalRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptFinalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptFinalRequest& EncryptFinalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptFinalRequest_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptFinalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptFinalRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptFinalRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptFinalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptFinalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptFinalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptFinalRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptFinalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptFinalRequest)
}

::google::protobuf::uint8* EncryptFinalRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptFinalRequest)
  return target;
}

size_t EncryptFinalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptFinalRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptFinalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptFinalRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptFinalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptFinalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptFinalRequest)
    MergeFrom(*source);
  }
}

void EncryptFinalRequest::MergeFrom(const EncryptFinalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void EncryptFinalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptFinalRequest::CopyFrom(const EncryptFinalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptFinalRequest::IsInitialized() const {
  return true;
}

void EncryptFinalRequest::Swap(EncryptFinalRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptFinalRequest::InternalSwap(EncryptFinalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EncryptFinalRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptFinalResponse::InitAsDefaultInstance() {
}
class EncryptFinalResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptFinalResponse::kCipheredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptFinalResponse::EncryptFinalResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptFinalResponse)
}
EncryptFinalResponse::EncryptFinalResponse(const EncryptFinalResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphered().size() > 0) {
    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptFinalResponse)
}

void EncryptFinalResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptFinalResponse_server_2eproto.base);
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptFinalResponse::~EncryptFinalResponse() {
  // @@protoc_insertion_point(destructor:grep11.EncryptFinalResponse)
  SharedDtor();
}

void EncryptFinalResponse::SharedDtor() {
  ciphered_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptFinalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptFinalResponse& EncryptFinalResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptFinalResponse_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptFinalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptFinalResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptFinalResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Ciphered = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ciphered();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptFinalResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptFinalResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Ciphered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptFinalResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptFinalResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptFinalResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ciphered(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptFinalResponse)
}

::google::protobuf::uint8* EncryptFinalResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ciphered(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptFinalResponse)
  return target;
}

size_t EncryptFinalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptFinalResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Ciphered = 2;
  if (this->ciphered().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphered());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptFinalResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptFinalResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptFinalResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptFinalResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptFinalResponse)
    MergeFrom(*source);
  }
}

void EncryptFinalResponse::MergeFrom(const EncryptFinalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ciphered().size() > 0) {

    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
}

void EncryptFinalResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptFinalResponse::CopyFrom(const EncryptFinalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptFinalResponse::IsInitialized() const {
  return true;
}

void EncryptFinalResponse::Swap(EncryptFinalResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptFinalResponse::InternalSwap(EncryptFinalResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ciphered_.Swap(&other->ciphered_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EncryptFinalResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptFinalRequest::InitAsDefaultInstance() {
}
class DecryptFinalRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptFinalRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptFinalRequest::DecryptFinalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptFinalRequest)
}
DecryptFinalRequest::DecryptFinalRequest(const DecryptFinalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptFinalRequest)
}

void DecryptFinalRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptFinalRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptFinalRequest::~DecryptFinalRequest() {
  // @@protoc_insertion_point(destructor:grep11.DecryptFinalRequest)
  SharedDtor();
}

void DecryptFinalRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptFinalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptFinalRequest& DecryptFinalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptFinalRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptFinalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptFinalRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptFinalRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptFinalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptFinalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptFinalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptFinalRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptFinalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptFinalRequest)
}

::google::protobuf::uint8* DecryptFinalRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptFinalRequest)
  return target;
}

size_t DecryptFinalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptFinalRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptFinalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptFinalRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptFinalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptFinalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptFinalRequest)
    MergeFrom(*source);
  }
}

void DecryptFinalRequest::MergeFrom(const DecryptFinalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void DecryptFinalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptFinalRequest::CopyFrom(const DecryptFinalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptFinalRequest::IsInitialized() const {
  return true;
}

void DecryptFinalRequest::Swap(DecryptFinalRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptFinalRequest::InternalSwap(DecryptFinalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DecryptFinalRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptFinalResponse::InitAsDefaultInstance() {
}
class DecryptFinalResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptFinalResponse::kPlainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptFinalResponse::DecryptFinalResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptFinalResponse)
}
DecryptFinalResponse::DecryptFinalResponse(const DecryptFinalResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptFinalResponse)
}

void DecryptFinalResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptFinalResponse_server_2eproto.base);
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptFinalResponse::~DecryptFinalResponse() {
  // @@protoc_insertion_point(destructor:grep11.DecryptFinalResponse)
  SharedDtor();
}

void DecryptFinalResponse::SharedDtor() {
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptFinalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptFinalResponse& DecryptFinalResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptFinalResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptFinalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptFinalResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptFinalResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Plain = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptFinalResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptFinalResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Plain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptFinalResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptFinalResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptFinalResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->plain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptFinalResponse)
}

::google::protobuf::uint8* DecryptFinalResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->plain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptFinalResponse)
  return target;
}

size_t DecryptFinalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptFinalResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Plain = 2;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptFinalResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptFinalResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptFinalResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptFinalResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptFinalResponse)
    MergeFrom(*source);
  }
}

void DecryptFinalResponse::MergeFrom(const DecryptFinalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
}

void DecryptFinalResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptFinalResponse::CopyFrom(const DecryptFinalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptFinalResponse::IsInitialized() const {
  return true;
}

void DecryptFinalResponse::Swap(DecryptFinalResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptFinalResponse::InternalSwap(DecryptFinalResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DecryptFinalResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptSingleRequest::InitAsDefaultInstance() {
  ::grep11::_EncryptSingleRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class EncryptSingleRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const EncryptSingleRequest* msg);
};

const ::grep11::Mechanism&
EncryptSingleRequest::HasBitSetters::mech(const EncryptSingleRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptSingleRequest::kKeyFieldNumber;
const int EncryptSingleRequest::kMechFieldNumber;
const int EncryptSingleRequest::kPlainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptSingleRequest::EncryptSingleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptSingleRequest)
}
EncryptSingleRequest::EncryptSingleRequest(const EncryptSingleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptSingleRequest)
}

void EncryptSingleRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptSingleRequest_server_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

EncryptSingleRequest::~EncryptSingleRequest() {
  // @@protoc_insertion_point(destructor:grep11.EncryptSingleRequest)
  SharedDtor();
}

void EncryptSingleRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void EncryptSingleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptSingleRequest& EncryptSingleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptSingleRequest_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptSingleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptSingleRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptSingleRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes Plain = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptSingleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptSingleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Plain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptSingleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptSingleRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptSingleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->plain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptSingleRequest)
}

::google::protobuf::uint8* EncryptSingleRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->plain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptSingleRequest)
  return target;
}

size_t EncryptSingleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptSingleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes Plain = 3;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plain());
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptSingleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptSingleRequest* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptSingleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptSingleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptSingleRequest)
    MergeFrom(*source);
  }
}

void EncryptSingleRequest::MergeFrom(const EncryptSingleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void EncryptSingleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptSingleRequest::CopyFrom(const EncryptSingleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptSingleRequest::IsInitialized() const {
  return true;
}

void EncryptSingleRequest::Swap(EncryptSingleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptSingleRequest::InternalSwap(EncryptSingleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata EncryptSingleRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EncryptSingleResponse::InitAsDefaultInstance() {
}
class EncryptSingleResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptSingleResponse::kCipheredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptSingleResponse::EncryptSingleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.EncryptSingleResponse)
}
EncryptSingleResponse::EncryptSingleResponse(const EncryptSingleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphered().size() > 0) {
    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.EncryptSingleResponse)
}

void EncryptSingleResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EncryptSingleResponse_server_2eproto.base);
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptSingleResponse::~EncryptSingleResponse() {
  // @@protoc_insertion_point(destructor:grep11.EncryptSingleResponse)
  SharedDtor();
}

void EncryptSingleResponse::SharedDtor() {
  ciphered_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptSingleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EncryptSingleResponse& EncryptSingleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EncryptSingleResponse_server_2eproto.base);
  return *internal_default_instance();
}


void EncryptSingleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.EncryptSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EncryptSingleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EncryptSingleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Ciphered = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ciphered();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EncryptSingleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.EncryptSingleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Ciphered = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.EncryptSingleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.EncryptSingleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EncryptSingleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.EncryptSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Ciphered = 4;
  if (this->ciphered().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ciphered(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.EncryptSingleResponse)
}

::google::protobuf::uint8* EncryptSingleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.EncryptSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Ciphered = 4;
  if (this->ciphered().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ciphered(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.EncryptSingleResponse)
  return target;
}

size_t EncryptSingleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.EncryptSingleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Ciphered = 4;
  if (this->ciphered().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphered());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptSingleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.EncryptSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptSingleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<EncryptSingleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.EncryptSingleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.EncryptSingleResponse)
    MergeFrom(*source);
  }
}

void EncryptSingleResponse::MergeFrom(const EncryptSingleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.EncryptSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ciphered().size() > 0) {

    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
}

void EncryptSingleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.EncryptSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptSingleResponse::CopyFrom(const EncryptSingleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.EncryptSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptSingleResponse::IsInitialized() const {
  return true;
}

void EncryptSingleResponse::Swap(EncryptSingleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptSingleResponse::InternalSwap(EncryptSingleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ciphered_.Swap(&other->ciphered_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata EncryptSingleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptSingleRequest::InitAsDefaultInstance() {
  ::grep11::_DecryptSingleRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class DecryptSingleRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const DecryptSingleRequest* msg);
};

const ::grep11::Mechanism&
DecryptSingleRequest::HasBitSetters::mech(const DecryptSingleRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptSingleRequest::kKeyFieldNumber;
const int DecryptSingleRequest::kMechFieldNumber;
const int DecryptSingleRequest::kCipheredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptSingleRequest::DecryptSingleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptSingleRequest)
}
DecryptSingleRequest::DecryptSingleRequest(const DecryptSingleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphered().size() > 0) {
    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptSingleRequest)
}

void DecryptSingleRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptSingleRequest_server_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

DecryptSingleRequest::~DecryptSingleRequest() {
  // @@protoc_insertion_point(destructor:grep11.DecryptSingleRequest)
  SharedDtor();
}

void DecryptSingleRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void DecryptSingleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptSingleRequest& DecryptSingleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptSingleRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptSingleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptSingleRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptSingleRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes Ciphered = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ciphered();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptSingleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptSingleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Ciphered = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptSingleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptSingleRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptSingleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ciphered(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptSingleRequest)
}

::google::protobuf::uint8* DecryptSingleRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ciphered(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptSingleRequest)
  return target;
}

size_t DecryptSingleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptSingleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes Ciphered = 3;
  if (this->ciphered().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphered());
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptSingleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptSingleRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptSingleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptSingleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptSingleRequest)
    MergeFrom(*source);
  }
}

void DecryptSingleRequest::MergeFrom(const DecryptSingleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.ciphered().size() > 0) {

    ciphered_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphered_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void DecryptSingleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptSingleRequest::CopyFrom(const DecryptSingleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptSingleRequest::IsInitialized() const {
  return true;
}

void DecryptSingleRequest::Swap(DecryptSingleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptSingleRequest::InternalSwap(DecryptSingleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ciphered_.Swap(&other->ciphered_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata DecryptSingleRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DecryptSingleResponse::InitAsDefaultInstance() {
}
class DecryptSingleResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptSingleResponse::kPlainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptSingleResponse::DecryptSingleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DecryptSingleResponse)
}
DecryptSingleResponse::DecryptSingleResponse(const DecryptSingleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DecryptSingleResponse)
}

void DecryptSingleResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DecryptSingleResponse_server_2eproto.base);
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptSingleResponse::~DecryptSingleResponse() {
  // @@protoc_insertion_point(destructor:grep11.DecryptSingleResponse)
  SharedDtor();
}

void DecryptSingleResponse::SharedDtor() {
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptSingleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecryptSingleResponse& DecryptSingleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DecryptSingleResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DecryptSingleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DecryptSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DecryptSingleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DecryptSingleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Plain = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DecryptSingleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DecryptSingleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Plain = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DecryptSingleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DecryptSingleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DecryptSingleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DecryptSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Plain = 4;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->plain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DecryptSingleResponse)
}

::google::protobuf::uint8* DecryptSingleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DecryptSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Plain = 4;
  if (this->plain().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->plain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DecryptSingleResponse)
  return target;
}

size_t DecryptSingleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DecryptSingleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Plain = 4;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptSingleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DecryptSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptSingleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DecryptSingleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DecryptSingleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DecryptSingleResponse)
    MergeFrom(*source);
  }
}

void DecryptSingleResponse::MergeFrom(const DecryptSingleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DecryptSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
}

void DecryptSingleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DecryptSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptSingleResponse::CopyFrom(const DecryptSingleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DecryptSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptSingleResponse::IsInitialized() const {
  return true;
}

void DecryptSingleResponse::Swap(DecryptSingleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecryptSingleResponse::InternalSwap(DecryptSingleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DecryptSingleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignInitRequest::InitAsDefaultInstance() {
  ::grep11::_SignInitRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class SignInitRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const SignInitRequest* msg);
};

const ::grep11::Mechanism&
SignInitRequest::HasBitSetters::mech(const SignInitRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignInitRequest::kMechFieldNumber;
const int SignInitRequest::kPrivKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignInitRequest::SignInitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignInitRequest)
}
SignInitRequest::SignInitRequest(const SignInitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  privkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.privkey().size() > 0) {
    privkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privkey_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignInitRequest)
}

void SignInitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignInitRequest_server_2eproto.base);
  privkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

SignInitRequest::~SignInitRequest() {
  // @@protoc_insertion_point(destructor:grep11.SignInitRequest)
  SharedDtor();
}

void SignInitRequest::SharedDtor() {
  privkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void SignInitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignInitRequest& SignInitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignInitRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SignInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  privkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignInitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignInitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes PrivKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_privkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignInitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignInitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes PrivKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_privkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignInitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignInitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignInitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  // bytes PrivKey = 3;
  if (this->privkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->privkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignInitRequest)
}

::google::protobuf::uint8* SignInitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  // bytes PrivKey = 3;
  if (this->privkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->privkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignInitRequest)
  return target;
}

size_t SignInitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignInitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes PrivKey = 3;
  if (this->privkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->privkey());
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignInitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignInitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SignInitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignInitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignInitRequest)
    MergeFrom(*source);
  }
}

void SignInitRequest::MergeFrom(const SignInitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.privkey().size() > 0) {

    privkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privkey_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void SignInitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInitRequest::CopyFrom(const SignInitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInitRequest::IsInitialized() const {
  return true;
}

void SignInitRequest::Swap(SignInitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignInitRequest::InternalSwap(SignInitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  privkey_.Swap(&other->privkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata SignInitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignInitResponse::InitAsDefaultInstance() {
}
class SignInitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignInitResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignInitResponse::SignInitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignInitResponse)
}
SignInitResponse::SignInitResponse(const SignInitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignInitResponse)
}

void SignInitResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignInitResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignInitResponse::~SignInitResponse() {
  // @@protoc_insertion_point(destructor:grep11.SignInitResponse)
  SharedDtor();
}

void SignInitResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignInitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignInitResponse& SignInitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignInitResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SignInitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignInitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignInitResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignInitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignInitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignInitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignInitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignInitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignInitResponse)
}

::google::protobuf::uint8* SignInitResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignInitResponse)
  return target;
}

size_t SignInitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignInitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignInitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignInitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SignInitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignInitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignInitResponse)
    MergeFrom(*source);
  }
}

void SignInitResponse::MergeFrom(const SignInitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void SignInitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInitResponse::CopyFrom(const SignInitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInitResponse::IsInitialized() const {
  return true;
}

void SignInitResponse::Swap(SignInitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignInitResponse::InternalSwap(SignInitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SignInitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifyInitRequest::InitAsDefaultInstance() {
  ::grep11::_VerifyInitRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class VerifyInitRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const VerifyInitRequest* msg);
};

const ::grep11::Mechanism&
VerifyInitRequest::HasBitSetters::mech(const VerifyInitRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyInitRequest::kMechFieldNumber;
const int VerifyInitRequest::kPubKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyInitRequest::VerifyInitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifyInitRequest)
}
VerifyInitRequest::VerifyInitRequest(const VerifyInitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkey().size() > 0) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.VerifyInitRequest)
}

void VerifyInitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VerifyInitRequest_server_2eproto.base);
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

VerifyInitRequest::~VerifyInitRequest() {
  // @@protoc_insertion_point(destructor:grep11.VerifyInitRequest)
  SharedDtor();
}

void VerifyInitRequest::SharedDtor() {
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void VerifyInitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyInitRequest& VerifyInitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifyInitRequest_server_2eproto.base);
  return *internal_default_instance();
}


void VerifyInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifyInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifyInitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifyInitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes PubKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pubkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifyInitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifyInitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes PubKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifyInitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifyInitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifyInitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifyInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  // bytes PubKey = 3;
  if (this->pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pubkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifyInitRequest)
}

::google::protobuf::uint8* VerifyInitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifyInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  // bytes PubKey = 3;
  if (this->pubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pubkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifyInitRequest)
  return target;
}

size_t VerifyInitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifyInitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes PubKey = 3;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkey());
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyInitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifyInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyInitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<VerifyInitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifyInitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifyInitRequest)
    MergeFrom(*source);
  }
}

void VerifyInitRequest::MergeFrom(const VerifyInitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifyInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void VerifyInitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifyInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyInitRequest::CopyFrom(const VerifyInitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifyInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyInitRequest::IsInitialized() const {
  return true;
}

void VerifyInitRequest::Swap(VerifyInitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyInitRequest::InternalSwap(VerifyInitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata VerifyInitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifyInitResponse::InitAsDefaultInstance() {
}
class VerifyInitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyInitResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyInitResponse::VerifyInitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifyInitResponse)
}
VerifyInitResponse::VerifyInitResponse(const VerifyInitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.VerifyInitResponse)
}

void VerifyInitResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VerifyInitResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyInitResponse::~VerifyInitResponse() {
  // @@protoc_insertion_point(destructor:grep11.VerifyInitResponse)
  SharedDtor();
}

void VerifyInitResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyInitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyInitResponse& VerifyInitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifyInitResponse_server_2eproto.base);
  return *internal_default_instance();
}


void VerifyInitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifyInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifyInitResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifyInitResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifyInitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifyInitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifyInitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifyInitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifyInitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifyInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifyInitResponse)
}

::google::protobuf::uint8* VerifyInitResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifyInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifyInitResponse)
  return target;
}

size_t VerifyInitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifyInitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyInitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifyInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyInitResponse* source =
      ::google::protobuf::DynamicCastToGenerated<VerifyInitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifyInitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifyInitResponse)
    MergeFrom(*source);
  }
}

void VerifyInitResponse::MergeFrom(const VerifyInitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifyInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void VerifyInitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifyInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyInitResponse::CopyFrom(const VerifyInitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifyInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyInitResponse::IsInitialized() const {
  return true;
}

void VerifyInitResponse::Swap(VerifyInitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyInitResponse::InternalSwap(VerifyInitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata VerifyInitResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignUpdateRequest::InitAsDefaultInstance() {
}
class SignUpdateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignUpdateRequest::kStateFieldNumber;
const int SignUpdateRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignUpdateRequest::SignUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignUpdateRequest)
}
SignUpdateRequest::SignUpdateRequest(const SignUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignUpdateRequest)
}

void SignUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignUpdateRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignUpdateRequest::~SignUpdateRequest() {
  // @@protoc_insertion_point(destructor:grep11.SignUpdateRequest)
  SharedDtor();
}

void SignUpdateRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignUpdateRequest& SignUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignUpdateRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SignUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignUpdateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignUpdateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignUpdateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignUpdateRequest)
}

::google::protobuf::uint8* SignUpdateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignUpdateRequest)
  return target;
}

size_t SignUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignUpdateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SignUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignUpdateRequest)
    MergeFrom(*source);
  }
}

void SignUpdateRequest::MergeFrom(const SignUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void SignUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignUpdateRequest::CopyFrom(const SignUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignUpdateRequest::IsInitialized() const {
  return true;
}

void SignUpdateRequest::Swap(SignUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignUpdateRequest::InternalSwap(SignUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SignUpdateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignUpdateResponse::InitAsDefaultInstance() {
}
class SignUpdateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignUpdateResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignUpdateResponse::SignUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignUpdateResponse)
}
SignUpdateResponse::SignUpdateResponse(const SignUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignUpdateResponse)
}

void SignUpdateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignUpdateResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignUpdateResponse::~SignUpdateResponse() {
  // @@protoc_insertion_point(destructor:grep11.SignUpdateResponse)
  SharedDtor();
}

void SignUpdateResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignUpdateResponse& SignUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignUpdateResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SignUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignUpdateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignUpdateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignUpdateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignUpdateResponse)
}

::google::protobuf::uint8* SignUpdateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignUpdateResponse)
  return target;
}

size_t SignUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignUpdateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignUpdateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SignUpdateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignUpdateResponse)
    MergeFrom(*source);
  }
}

void SignUpdateResponse::MergeFrom(const SignUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void SignUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignUpdateResponse::CopyFrom(const SignUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignUpdateResponse::IsInitialized() const {
  return true;
}

void SignUpdateResponse::Swap(SignUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignUpdateResponse::InternalSwap(SignUpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SignUpdateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifyUpdateRequest::InitAsDefaultInstance() {
}
class VerifyUpdateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyUpdateRequest::kStateFieldNumber;
const int VerifyUpdateRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyUpdateRequest::VerifyUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifyUpdateRequest)
}
VerifyUpdateRequest::VerifyUpdateRequest(const VerifyUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.VerifyUpdateRequest)
}

void VerifyUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VerifyUpdateRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyUpdateRequest::~VerifyUpdateRequest() {
  // @@protoc_insertion_point(destructor:grep11.VerifyUpdateRequest)
  SharedDtor();
}

void VerifyUpdateRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyUpdateRequest& VerifyUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifyUpdateRequest_server_2eproto.base);
  return *internal_default_instance();
}


void VerifyUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifyUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifyUpdateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifyUpdateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifyUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifyUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifyUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifyUpdateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifyUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifyUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifyUpdateRequest)
}

::google::protobuf::uint8* VerifyUpdateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifyUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifyUpdateRequest)
  return target;
}

size_t VerifyUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifyUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifyUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyUpdateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<VerifyUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifyUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifyUpdateRequest)
    MergeFrom(*source);
  }
}

void VerifyUpdateRequest::MergeFrom(const VerifyUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifyUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void VerifyUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifyUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyUpdateRequest::CopyFrom(const VerifyUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifyUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyUpdateRequest::IsInitialized() const {
  return true;
}

void VerifyUpdateRequest::Swap(VerifyUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyUpdateRequest::InternalSwap(VerifyUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata VerifyUpdateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifyUpdateResponse::InitAsDefaultInstance() {
}
class VerifyUpdateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyUpdateResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyUpdateResponse::VerifyUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifyUpdateResponse)
}
VerifyUpdateResponse::VerifyUpdateResponse(const VerifyUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.VerifyUpdateResponse)
}

void VerifyUpdateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VerifyUpdateResponse_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyUpdateResponse::~VerifyUpdateResponse() {
  // @@protoc_insertion_point(destructor:grep11.VerifyUpdateResponse)
  SharedDtor();
}

void VerifyUpdateResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyUpdateResponse& VerifyUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifyUpdateResponse_server_2eproto.base);
  return *internal_default_instance();
}


void VerifyUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifyUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifyUpdateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifyUpdateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifyUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifyUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifyUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifyUpdateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifyUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifyUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifyUpdateResponse)
}

::google::protobuf::uint8* VerifyUpdateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifyUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifyUpdateResponse)
  return target;
}

size_t VerifyUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifyUpdateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifyUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyUpdateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<VerifyUpdateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifyUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifyUpdateResponse)
    MergeFrom(*source);
  }
}

void VerifyUpdateResponse::MergeFrom(const VerifyUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifyUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void VerifyUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifyUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyUpdateResponse::CopyFrom(const VerifyUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifyUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyUpdateResponse::IsInitialized() const {
  return true;
}

void VerifyUpdateResponse::Swap(VerifyUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyUpdateResponse::InternalSwap(VerifyUpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata VerifyUpdateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignFinalRequest::InitAsDefaultInstance() {
}
class SignFinalRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignFinalRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignFinalRequest::SignFinalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignFinalRequest)
}
SignFinalRequest::SignFinalRequest(const SignFinalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignFinalRequest)
}

void SignFinalRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignFinalRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignFinalRequest::~SignFinalRequest() {
  // @@protoc_insertion_point(destructor:grep11.SignFinalRequest)
  SharedDtor();
}

void SignFinalRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignFinalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignFinalRequest& SignFinalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignFinalRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SignFinalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignFinalRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignFinalRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignFinalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignFinalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignFinalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignFinalRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignFinalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignFinalRequest)
}

::google::protobuf::uint8* SignFinalRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignFinalRequest)
  return target;
}

size_t SignFinalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignFinalRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignFinalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignFinalRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SignFinalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignFinalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignFinalRequest)
    MergeFrom(*source);
  }
}

void SignFinalRequest::MergeFrom(const SignFinalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void SignFinalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignFinalRequest::CopyFrom(const SignFinalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignFinalRequest::IsInitialized() const {
  return true;
}

void SignFinalRequest::Swap(SignFinalRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignFinalRequest::InternalSwap(SignFinalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SignFinalRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignFinalResponse::InitAsDefaultInstance() {
}
class SignFinalResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignFinalResponse::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignFinalResponse::SignFinalResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignFinalResponse)
}
SignFinalResponse::SignFinalResponse(const SignFinalResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignFinalResponse)
}

void SignFinalResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignFinalResponse_server_2eproto.base);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignFinalResponse::~SignFinalResponse() {
  // @@protoc_insertion_point(destructor:grep11.SignFinalResponse)
  SharedDtor();
}

void SignFinalResponse::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignFinalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignFinalResponse& SignFinalResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignFinalResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SignFinalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignFinalResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignFinalResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Signature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignFinalResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignFinalResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignFinalResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignFinalResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignFinalResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Signature = 2;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignFinalResponse)
}

::google::protobuf::uint8* SignFinalResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Signature = 2;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignFinalResponse)
  return target;
}

size_t SignFinalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignFinalResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Signature = 2;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignFinalResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignFinalResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SignFinalResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignFinalResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignFinalResponse)
    MergeFrom(*source);
  }
}

void SignFinalResponse::MergeFrom(const SignFinalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void SignFinalResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignFinalResponse::CopyFrom(const SignFinalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignFinalResponse::IsInitialized() const {
  return true;
}

void SignFinalResponse::Swap(SignFinalResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignFinalResponse::InternalSwap(SignFinalResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SignFinalResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifyFinalRequest::InitAsDefaultInstance() {
}
class VerifyFinalRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyFinalRequest::kStateFieldNumber;
const int VerifyFinalRequest::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyFinalRequest::VerifyFinalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifyFinalRequest)
}
VerifyFinalRequest::VerifyFinalRequest(const VerifyFinalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.VerifyFinalRequest)
}

void VerifyFinalRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VerifyFinalRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyFinalRequest::~VerifyFinalRequest() {
  // @@protoc_insertion_point(destructor:grep11.VerifyFinalRequest)
  SharedDtor();
}

void VerifyFinalRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyFinalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyFinalRequest& VerifyFinalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifyFinalRequest_server_2eproto.base);
  return *internal_default_instance();
}


void VerifyFinalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifyFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifyFinalRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifyFinalRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Signature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifyFinalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifyFinalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifyFinalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifyFinalRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifyFinalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifyFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Signature = 2;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifyFinalRequest)
}

::google::protobuf::uint8* VerifyFinalRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifyFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Signature = 2;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifyFinalRequest)
  return target;
}

size_t VerifyFinalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifyFinalRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Signature = 2;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyFinalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifyFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyFinalRequest* source =
      ::google::protobuf::DynamicCastToGenerated<VerifyFinalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifyFinalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifyFinalRequest)
    MergeFrom(*source);
  }
}

void VerifyFinalRequest::MergeFrom(const VerifyFinalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifyFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void VerifyFinalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifyFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyFinalRequest::CopyFrom(const VerifyFinalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifyFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyFinalRequest::IsInitialized() const {
  return true;
}

void VerifyFinalRequest::Swap(VerifyFinalRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyFinalRequest::InternalSwap(VerifyFinalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata VerifyFinalRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifyFinalResponse::InitAsDefaultInstance() {
}
class VerifyFinalResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyFinalResponse::VerifyFinalResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifyFinalResponse)
}
VerifyFinalResponse::VerifyFinalResponse(const VerifyFinalResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grep11.VerifyFinalResponse)
}

void VerifyFinalResponse::SharedCtor() {
}

VerifyFinalResponse::~VerifyFinalResponse() {
  // @@protoc_insertion_point(destructor:grep11.VerifyFinalResponse)
  SharedDtor();
}

void VerifyFinalResponse::SharedDtor() {
}

void VerifyFinalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyFinalResponse& VerifyFinalResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifyFinalResponse_server_2eproto.base);
  return *internal_default_instance();
}


void VerifyFinalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifyFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifyFinalResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifyFinalResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifyFinalResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifyFinalResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifyFinalResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifyFinalResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifyFinalResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifyFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifyFinalResponse)
}

::google::protobuf::uint8* VerifyFinalResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifyFinalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifyFinalResponse)
  return target;
}

size_t VerifyFinalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifyFinalResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyFinalResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifyFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyFinalResponse* source =
      ::google::protobuf::DynamicCastToGenerated<VerifyFinalResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifyFinalResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifyFinalResponse)
    MergeFrom(*source);
  }
}

void VerifyFinalResponse::MergeFrom(const VerifyFinalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifyFinalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VerifyFinalResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifyFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyFinalResponse::CopyFrom(const VerifyFinalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifyFinalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyFinalResponse::IsInitialized() const {
  return true;
}

void VerifyFinalResponse::Swap(VerifyFinalResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyFinalResponse::InternalSwap(VerifyFinalResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyFinalResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignRequest::InitAsDefaultInstance() {
}
class SignRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignRequest::kStateFieldNumber;
const int SignRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignRequest::SignRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignRequest)
}
SignRequest::SignRequest(const SignRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignRequest)
}

void SignRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignRequest::~SignRequest() {
  // @@protoc_insertion_point(destructor:grep11.SignRequest)
  SharedDtor();
}

void SignRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignRequest& SignRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignRequest)
}

::google::protobuf::uint8* SignRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignRequest)
  return target;
}

size_t SignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignRequest)
    MergeFrom(*source);
  }
}

void SignRequest::MergeFrom(const SignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void SignRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignRequest::CopyFrom(const SignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignRequest::IsInitialized() const {
  return true;
}

void SignRequest::Swap(SignRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignRequest::InternalSwap(SignRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SignRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignResponse::InitAsDefaultInstance() {
}
class SignResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignResponse::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignResponse::SignResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignResponse)
}
SignResponse::SignResponse(const SignResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignResponse)
}

void SignResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignResponse_server_2eproto.base);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignResponse::~SignResponse() {
  // @@protoc_insertion_point(destructor:grep11.SignResponse)
  SharedDtor();
}

void SignResponse::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignResponse& SignResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Signature = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Signature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Signature = 3;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignResponse)
}

::google::protobuf::uint8* SignResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Signature = 3;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignResponse)
  return target;
}

size_t SignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Signature = 3;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignResponse)
    MergeFrom(*source);
  }
}

void SignResponse::MergeFrom(const SignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void SignResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignResponse::CopyFrom(const SignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignResponse::IsInitialized() const {
  return true;
}

void SignResponse::Swap(SignResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignResponse::InternalSwap(SignResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SignResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifyRequest::InitAsDefaultInstance() {
}
class VerifyRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyRequest::kStateFieldNumber;
const int VerifyRequest::kDataFieldNumber;
const int VerifyRequest::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyRequest::VerifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifyRequest)
}
VerifyRequest::VerifyRequest(const VerifyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.VerifyRequest)
}

void VerifyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VerifyRequest_server_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyRequest::~VerifyRequest() {
  // @@protoc_insertion_point(destructor:grep11.VerifyRequest)
  SharedDtor();
}

void VerifyRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyRequest& VerifyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifyRequest_server_2eproto.base);
  return *internal_default_instance();
}


void VerifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Signature = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Signature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // bytes Signature = 3;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifyRequest)
}

::google::protobuf::uint8* VerifyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // bytes Signature = 3;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifyRequest)
  return target;
}

size_t VerifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes State = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // bytes Signature = 3;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<VerifyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifyRequest)
    MergeFrom(*source);
  }
}

void VerifyRequest::MergeFrom(const VerifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void VerifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyRequest::CopyFrom(const VerifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyRequest::IsInitialized() const {
  return true;
}

void VerifyRequest::Swap(VerifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyRequest::InternalSwap(VerifyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata VerifyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifyResponse::InitAsDefaultInstance() {
}
class VerifyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyResponse::VerifyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifyResponse)
}
VerifyResponse::VerifyResponse(const VerifyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grep11.VerifyResponse)
}

void VerifyResponse::SharedCtor() {
}

VerifyResponse::~VerifyResponse() {
  // @@protoc_insertion_point(destructor:grep11.VerifyResponse)
  SharedDtor();
}

void VerifyResponse::SharedDtor() {
}

void VerifyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifyResponse& VerifyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifyResponse_server_2eproto.base);
  return *internal_default_instance();
}


void VerifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifyResponse)
}

::google::protobuf::uint8* VerifyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifyResponse)
  return target;
}

size_t VerifyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<VerifyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifyResponse)
    MergeFrom(*source);
  }
}

void VerifyResponse::MergeFrom(const VerifyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VerifyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyResponse::CopyFrom(const VerifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyResponse::IsInitialized() const {
  return true;
}

void VerifyResponse::Swap(VerifyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyResponse::InternalSwap(VerifyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignSingleRequest::InitAsDefaultInstance() {
  ::grep11::_SignSingleRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class SignSingleRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const SignSingleRequest* msg);
};

const ::grep11::Mechanism&
SignSingleRequest::HasBitSetters::mech(const SignSingleRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignSingleRequest::kPrivKeyFieldNumber;
const int SignSingleRequest::kMechFieldNumber;
const int SignSingleRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignSingleRequest::SignSingleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignSingleRequest)
}
SignSingleRequest::SignSingleRequest(const SignSingleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  privkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.privkey().size() > 0) {
    privkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privkey_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignSingleRequest)
}

void SignSingleRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignSingleRequest_server_2eproto.base);
  privkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

SignSingleRequest::~SignSingleRequest() {
  // @@protoc_insertion_point(destructor:grep11.SignSingleRequest)
  SharedDtor();
}

void SignSingleRequest::SharedDtor() {
  privkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void SignSingleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignSingleRequest& SignSingleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignSingleRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SignSingleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  privkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignSingleRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignSingleRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes PrivKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_privkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes Data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignSingleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignSingleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes PrivKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_privkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignSingleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignSingleRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignSingleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PrivKey = 1;
  if (this->privkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->privkey(), output);
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  // bytes Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignSingleRequest)
}

::google::protobuf::uint8* SignSingleRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignSingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PrivKey = 1;
  if (this->privkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->privkey(), target);
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  // bytes Data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignSingleRequest)
  return target;
}

size_t SignSingleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignSingleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes PrivKey = 1;
  if (this->privkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->privkey());
  }

  // bytes Data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignSingleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignSingleRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SignSingleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignSingleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignSingleRequest)
    MergeFrom(*source);
  }
}

void SignSingleRequest::MergeFrom(const SignSingleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.privkey().size() > 0) {

    privkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privkey_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void SignSingleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignSingleRequest::CopyFrom(const SignSingleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignSingleRequest::IsInitialized() const {
  return true;
}

void SignSingleRequest::Swap(SignSingleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignSingleRequest::InternalSwap(SignSingleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  privkey_.Swap(&other->privkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata SignSingleRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SignSingleResponse::InitAsDefaultInstance() {
}
class SignSingleResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignSingleResponse::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignSingleResponse::SignSingleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SignSingleResponse)
}
SignSingleResponse::SignSingleResponse(const SignSingleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SignSingleResponse)
}

void SignSingleResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SignSingleResponse_server_2eproto.base);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignSingleResponse::~SignSingleResponse() {
  // @@protoc_insertion_point(destructor:grep11.SignSingleResponse)
  SharedDtor();
}

void SignSingleResponse::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignSingleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignSingleResponse& SignSingleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SignSingleResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SignSingleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SignSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SignSingleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SignSingleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Signature = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SignSingleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SignSingleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Signature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SignSingleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SignSingleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SignSingleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SignSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Signature = 4;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SignSingleResponse)
}

::google::protobuf::uint8* SignSingleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SignSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Signature = 4;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SignSingleResponse)
  return target;
}

size_t SignSingleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SignSingleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Signature = 4;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignSingleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SignSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignSingleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SignSingleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SignSingleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SignSingleResponse)
    MergeFrom(*source);
  }
}

void SignSingleResponse::MergeFrom(const SignSingleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SignSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void SignSingleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SignSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignSingleResponse::CopyFrom(const SignSingleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SignSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignSingleResponse::IsInitialized() const {
  return true;
}

void SignSingleResponse::Swap(SignSingleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignSingleResponse::InternalSwap(SignSingleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SignSingleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifySingleRequest::InitAsDefaultInstance() {
  ::grep11::_VerifySingleRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class VerifySingleRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const VerifySingleRequest* msg);
};

const ::grep11::Mechanism&
VerifySingleRequest::HasBitSetters::mech(const VerifySingleRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifySingleRequest::kPubKeyFieldNumber;
const int VerifySingleRequest::kMechFieldNumber;
const int VerifySingleRequest::kDataFieldNumber;
const int VerifySingleRequest::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifySingleRequest::VerifySingleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifySingleRequest)
}
VerifySingleRequest::VerifySingleRequest(const VerifySingleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkey().size() > 0) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.VerifySingleRequest)
}

void VerifySingleRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VerifySingleRequest_server_2eproto.base);
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

VerifySingleRequest::~VerifySingleRequest() {
  // @@protoc_insertion_point(destructor:grep11.VerifySingleRequest)
  SharedDtor();
}

void VerifySingleRequest::SharedDtor() {
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void VerifySingleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifySingleRequest& VerifySingleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifySingleRequest_server_2eproto.base);
  return *internal_default_instance();
}


void VerifySingleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifySingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifySingleRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifySingleRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes PubKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pubkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes Data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Signature = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifySingleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifySingleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes PubKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grep11.Mechanism Mech = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Signature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifySingleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifySingleRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifySingleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifySingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pubkey(), output);
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mech(this), output);
  }

  // bytes Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // bytes Signature = 4;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifySingleRequest)
}

::google::protobuf::uint8* VerifySingleRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifySingleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pubkey(), target);
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mech(this), target);
  }

  // bytes Data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // bytes Signature = 4;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifySingleRequest)
  return target;
}

size_t VerifySingleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifySingleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes PubKey = 1;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkey());
  }

  // bytes Data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // bytes Signature = 4;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // .grep11.Mechanism Mech = 2;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifySingleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifySingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifySingleRequest* source =
      ::google::protobuf::DynamicCastToGenerated<VerifySingleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifySingleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifySingleRequest)
    MergeFrom(*source);
  }
}

void VerifySingleRequest::MergeFrom(const VerifySingleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifySingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void VerifySingleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifySingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifySingleRequest::CopyFrom(const VerifySingleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifySingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifySingleRequest::IsInitialized() const {
  return true;
}

void VerifySingleRequest::Swap(VerifySingleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifySingleRequest::InternalSwap(VerifySingleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata VerifySingleRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerifySingleResponse::InitAsDefaultInstance() {
}
class VerifySingleResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifySingleResponse::VerifySingleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.VerifySingleResponse)
}
VerifySingleResponse::VerifySingleResponse(const VerifySingleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grep11.VerifySingleResponse)
}

void VerifySingleResponse::SharedCtor() {
}

VerifySingleResponse::~VerifySingleResponse() {
  // @@protoc_insertion_point(destructor:grep11.VerifySingleResponse)
  SharedDtor();
}

void VerifySingleResponse::SharedDtor() {
}

void VerifySingleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerifySingleResponse& VerifySingleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerifySingleResponse_server_2eproto.base);
  return *internal_default_instance();
}


void VerifySingleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.VerifySingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerifySingleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerifySingleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerifySingleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.VerifySingleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.VerifySingleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.VerifySingleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerifySingleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.VerifySingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.VerifySingleResponse)
}

::google::protobuf::uint8* VerifySingleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.VerifySingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.VerifySingleResponse)
  return target;
}

size_t VerifySingleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.VerifySingleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifySingleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.VerifySingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifySingleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<VerifySingleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.VerifySingleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.VerifySingleResponse)
    MergeFrom(*source);
  }
}

void VerifySingleResponse::MergeFrom(const VerifySingleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.VerifySingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VerifySingleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.VerifySingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifySingleResponse::CopyFrom(const VerifySingleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.VerifySingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifySingleResponse::IsInitialized() const {
  return true;
}

void VerifySingleResponse::Swap(VerifySingleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifySingleResponse::InternalSwap(VerifySingleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifySingleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

GenerateKeyRequest_TemplateEntry_DoNotUse::GenerateKeyRequest_TemplateEntry_DoNotUse() {}
GenerateKeyRequest_TemplateEntry_DoNotUse::GenerateKeyRequest_TemplateEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GenerateKeyRequest_TemplateEntry_DoNotUse::MergeFrom(const GenerateKeyRequest_TemplateEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GenerateKeyRequest_TemplateEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[54];
}
void GenerateKeyRequest_TemplateEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateKeyRequest_TemplateEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      GenerateKeyRequest_TemplateEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void GenerateKeyRequest::InitAsDefaultInstance() {
  ::grep11::_GenerateKeyRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class GenerateKeyRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const GenerateKeyRequest* msg);
};

const ::grep11::Mechanism&
GenerateKeyRequest::HasBitSetters::mech(const GenerateKeyRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateKeyRequest::kMechFieldNumber;
const int GenerateKeyRequest::kTemplateFieldNumber;
const int GenerateKeyRequest::kKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateKeyRequest::GenerateKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GenerateKeyRequest)
}
GenerateKeyRequest::GenerateKeyRequest(const GenerateKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  template__.MergeFrom(from.template__);
  keyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keyid().size() > 0) {
    keyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyid_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.GenerateKeyRequest)
}

void GenerateKeyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GenerateKeyRequest_server_2eproto.base);
  keyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

GenerateKeyRequest::~GenerateKeyRequest() {
  // @@protoc_insertion_point(destructor:grep11.GenerateKeyRequest)
  SharedDtor();
}

void GenerateKeyRequest::SharedDtor() {
  keyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void GenerateKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateKeyRequest& GenerateKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GenerateKeyRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GenerateKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GenerateKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  template__.Clear();
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GenerateKeyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GenerateKeyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->template__;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // string KeyId = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("grep11.GenerateKeyRequest.KeyId");
        object = msg->mutable_keyid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GenerateKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          GenerateKeyRequest_TemplateEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GenerateKeyRequest_TemplateEntry_DoNotUse,
              ::google::protobuf::uint64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string > > parser(&template__);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string KeyId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyid().data(), static_cast<int>(this->keyid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grep11.GenerateKeyRequest.KeyId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GenerateKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GenerateKeyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GenerateKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GenerateKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::mech(this), output);
  }

  // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->template_().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->template_().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->template_().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GenerateKeyRequest_TemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(template__.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    } else {
      ::std::unique_ptr<GenerateKeyRequest_TemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it) {
        entry.reset(template__.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    }
  }

  // string KeyId = 4;
  if (this->keyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyid().data(), static_cast<int>(this->keyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.GenerateKeyRequest.KeyId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keyid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GenerateKeyRequest)
}

::google::protobuf::uint8* GenerateKeyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GenerateKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::mech(this), target);
  }

  // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->template_().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->template_().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->template_().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GenerateKeyRequest_TemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(template__.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    } else {
      ::std::unique_ptr<GenerateKeyRequest_TemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it) {
        entry.reset(template__.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    }
  }

  // string KeyId = 4;
  if (this->keyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyid().data(), static_cast<int>(this->keyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.GenerateKeyRequest.KeyId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keyid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GenerateKeyRequest)
  return target;
}

size_t GenerateKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GenerateKeyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->template__size());
  {
    ::std::unique_ptr<GenerateKeyRequest_TemplateEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
        it = this->template_().begin();
        it != this->template_().end(); ++it) {
      entry.reset(template__.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string KeyId = 4;
  if (this->keyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyid());
  }

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GenerateKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateKeyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GenerateKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GenerateKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GenerateKeyRequest)
    MergeFrom(*source);
  }
}

void GenerateKeyRequest::MergeFrom(const GenerateKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GenerateKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  template__.MergeFrom(from.template__);
  if (from.keyid().size() > 0) {

    keyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyid_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void GenerateKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GenerateKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateKeyRequest::CopyFrom(const GenerateKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GenerateKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateKeyRequest::IsInitialized() const {
  return true;
}

void GenerateKeyRequest::Swap(GenerateKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateKeyRequest::InternalSwap(GenerateKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  template__.Swap(&other->template__);
  keyid_.Swap(&other->keyid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata GenerateKeyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GenerateKeyResponse::InitAsDefaultInstance() {
}
class GenerateKeyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateKeyResponse::kKeyFieldNumber;
const int GenerateKeyResponse::kCheckSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateKeyResponse::GenerateKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GenerateKeyResponse)
}
GenerateKeyResponse::GenerateKeyResponse(const GenerateKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.GenerateKeyResponse)
}

void GenerateKeyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GenerateKeyResponse_server_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenerateKeyResponse::~GenerateKeyResponse() {
  // @@protoc_insertion_point(destructor:grep11.GenerateKeyResponse)
  SharedDtor();
}

void GenerateKeyResponse::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateKeyResponse& GenerateKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GenerateKeyResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GenerateKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GenerateKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GenerateKeyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GenerateKeyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Key = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes CheckSum = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_checksum();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GenerateKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes CheckSum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_checksum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GenerateKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GenerateKeyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GenerateKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GenerateKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Key = 4;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->key(), output);
  }

  // bytes CheckSum = 5;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GenerateKeyResponse)
}

::google::protobuf::uint8* GenerateKeyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GenerateKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Key = 4;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->key(), target);
  }

  // bytes CheckSum = 5;
  if (this->checksum().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GenerateKeyResponse)
  return target;
}

size_t GenerateKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GenerateKeyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Key = 4;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes CheckSum = 5;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GenerateKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateKeyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GenerateKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GenerateKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GenerateKeyResponse)
    MergeFrom(*source);
  }
}

void GenerateKeyResponse::MergeFrom(const GenerateKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GenerateKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
}

void GenerateKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GenerateKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateKeyResponse::CopyFrom(const GenerateKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GenerateKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateKeyResponse::IsInitialized() const {
  return true;
}

void GenerateKeyResponse::Swap(GenerateKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateKeyResponse::InternalSwap(GenerateKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  checksum_.Swap(&other->checksum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GenerateKeyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse() {}
GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::MergeFrom(const GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[57];
}
void GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse() {}
GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::MergeFrom(const GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[58];
}
void GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void GenerateKeyPairRequest::InitAsDefaultInstance() {
  ::grep11::_GenerateKeyPairRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class GenerateKeyPairRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const GenerateKeyPairRequest* msg);
};

const ::grep11::Mechanism&
GenerateKeyPairRequest::HasBitSetters::mech(const GenerateKeyPairRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateKeyPairRequest::kMechFieldNumber;
const int GenerateKeyPairRequest::kPubKeyTemplateFieldNumber;
const int GenerateKeyPairRequest::kPrivKeyTemplateFieldNumber;
const int GenerateKeyPairRequest::kPrivKeyIdFieldNumber;
const int GenerateKeyPairRequest::kPubKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateKeyPairRequest::GenerateKeyPairRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GenerateKeyPairRequest)
}
GenerateKeyPairRequest::GenerateKeyPairRequest(const GenerateKeyPairRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkeytemplate_.MergeFrom(from.pubkeytemplate_);
  privkeytemplate_.MergeFrom(from.privkeytemplate_);
  privkeyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.privkeyid().size() > 0) {
    privkeyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privkeyid_);
  }
  pubkeyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkeyid().size() > 0) {
    pubkeyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkeyid_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.GenerateKeyPairRequest)
}

void GenerateKeyPairRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GenerateKeyPairRequest_server_2eproto.base);
  privkeyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkeyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

GenerateKeyPairRequest::~GenerateKeyPairRequest() {
  // @@protoc_insertion_point(destructor:grep11.GenerateKeyPairRequest)
  SharedDtor();
}

void GenerateKeyPairRequest::SharedDtor() {
  privkeyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkeyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void GenerateKeyPairRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateKeyPairRequest& GenerateKeyPairRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GenerateKeyPairRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GenerateKeyPairRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GenerateKeyPairRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubkeytemplate_.Clear();
  privkeytemplate_.Clear();
  privkeyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkeyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GenerateKeyPairRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GenerateKeyPairRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<uint64, bytes> PubKeyTemplate = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->pubkeytemplate_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // map<uint64, bytes> PrivKeyTemplate = 3 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->privkeytemplate_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // string PrivKeyId = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("grep11.GenerateKeyPairRequest.PrivKeyId");
        object = msg->mutable_privkeyid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string PubKeyId = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("grep11.GenerateKeyPairRequest.PubKeyId");
        object = msg->mutable_pubkeyid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateKeyPairRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GenerateKeyPairRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, bytes> PubKeyTemplate = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse,
              ::google::protobuf::uint64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string > > parser(&pubkeytemplate_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, bytes> PrivKeyTemplate = 3 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse,
              ::google::protobuf::uint64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string > > parser(&privkeytemplate_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PrivKeyId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_privkeyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->privkeyid().data(), static_cast<int>(this->privkeyid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grep11.GenerateKeyPairRequest.PrivKeyId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PubKeyId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pubkeyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pubkeyid().data(), static_cast<int>(this->pubkeyid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grep11.GenerateKeyPairRequest.PubKeyId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GenerateKeyPairRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GenerateKeyPairRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GenerateKeyPairRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GenerateKeyPairRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::mech(this), output);
  }

  // map<uint64, bytes> PubKeyTemplate = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->pubkeytemplate().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->pubkeytemplate().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pubkeytemplate().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->pubkeytemplate().begin();
          it != this->pubkeytemplate().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pubkeytemplate_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    } else {
      ::std::unique_ptr<GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->pubkeytemplate().begin();
          it != this->pubkeytemplate().end(); ++it) {
        entry.reset(pubkeytemplate_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    }
  }

  // map<uint64, bytes> PrivKeyTemplate = 3 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->privkeytemplate().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->privkeytemplate().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->privkeytemplate().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->privkeytemplate().begin();
          it != this->privkeytemplate().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(privkeytemplate_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
      }
    } else {
      ::std::unique_ptr<GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->privkeytemplate().begin();
          it != this->privkeytemplate().end(); ++it) {
        entry.reset(privkeytemplate_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
      }
    }
  }

  // string PrivKeyId = 5;
  if (this->privkeyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->privkeyid().data(), static_cast<int>(this->privkeyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.GenerateKeyPairRequest.PrivKeyId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->privkeyid(), output);
  }

  // string PubKeyId = 6;
  if (this->pubkeyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubkeyid().data(), static_cast<int>(this->pubkeyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.GenerateKeyPairRequest.PubKeyId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pubkeyid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GenerateKeyPairRequest)
}

::google::protobuf::uint8* GenerateKeyPairRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GenerateKeyPairRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::mech(this), target);
  }

  // map<uint64, bytes> PubKeyTemplate = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->pubkeytemplate().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->pubkeytemplate().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pubkeytemplate().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->pubkeytemplate().begin();
          it != this->pubkeytemplate().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pubkeytemplate_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    } else {
      ::std::unique_ptr<GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->pubkeytemplate().begin();
          it != this->pubkeytemplate().end(); ++it) {
        entry.reset(pubkeytemplate_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    }
  }

  // map<uint64, bytes> PrivKeyTemplate = 3 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->privkeytemplate().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->privkeytemplate().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->privkeytemplate().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->privkeytemplate().begin();
          it != this->privkeytemplate().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(privkeytemplate_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
      }
    } else {
      ::std::unique_ptr<GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->privkeytemplate().begin();
          it != this->privkeytemplate().end(); ++it) {
        entry.reset(privkeytemplate_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
      }
    }
  }

  // string PrivKeyId = 5;
  if (this->privkeyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->privkeyid().data(), static_cast<int>(this->privkeyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.GenerateKeyPairRequest.PrivKeyId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->privkeyid(), target);
  }

  // string PubKeyId = 6;
  if (this->pubkeyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubkeyid().data(), static_cast<int>(this->pubkeyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.GenerateKeyPairRequest.PubKeyId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pubkeyid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GenerateKeyPairRequest)
  return target;
}

size_t GenerateKeyPairRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GenerateKeyPairRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, bytes> PubKeyTemplate = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pubkeytemplate_size());
  {
    ::std::unique_ptr<GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
        it = this->pubkeytemplate().begin();
        it != this->pubkeytemplate().end(); ++it) {
      entry.reset(pubkeytemplate_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint64, bytes> PrivKeyTemplate = 3 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->privkeytemplate_size());
  {
    ::std::unique_ptr<GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
        it = this->privkeytemplate().begin();
        it != this->privkeytemplate().end(); ++it) {
      entry.reset(privkeytemplate_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string PrivKeyId = 5;
  if (this->privkeyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->privkeyid());
  }

  // string PubKeyId = 6;
  if (this->pubkeyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pubkeyid());
  }

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateKeyPairRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GenerateKeyPairRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateKeyPairRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GenerateKeyPairRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GenerateKeyPairRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GenerateKeyPairRequest)
    MergeFrom(*source);
  }
}

void GenerateKeyPairRequest::MergeFrom(const GenerateKeyPairRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GenerateKeyPairRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pubkeytemplate_.MergeFrom(from.pubkeytemplate_);
  privkeytemplate_.MergeFrom(from.privkeytemplate_);
  if (from.privkeyid().size() > 0) {

    privkeyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privkeyid_);
  }
  if (from.pubkeyid().size() > 0) {

    pubkeyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkeyid_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void GenerateKeyPairRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GenerateKeyPairRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateKeyPairRequest::CopyFrom(const GenerateKeyPairRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GenerateKeyPairRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateKeyPairRequest::IsInitialized() const {
  return true;
}

void GenerateKeyPairRequest::Swap(GenerateKeyPairRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateKeyPairRequest::InternalSwap(GenerateKeyPairRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pubkeytemplate_.Swap(&other->pubkeytemplate_);
  privkeytemplate_.Swap(&other->privkeytemplate_);
  privkeyid_.Swap(&other->privkeyid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pubkeyid_.Swap(&other->pubkeyid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata GenerateKeyPairRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GenerateKeyPairResponse::InitAsDefaultInstance() {
}
class GenerateKeyPairResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerateKeyPairResponse::kPrivKeyFieldNumber;
const int GenerateKeyPairResponse::kPubKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerateKeyPairResponse::GenerateKeyPairResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GenerateKeyPairResponse)
}
GenerateKeyPairResponse::GenerateKeyPairResponse(const GenerateKeyPairResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  privkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.privkey().size() > 0) {
    privkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privkey_);
  }
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubkey().size() > 0) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.GenerateKeyPairResponse)
}

void GenerateKeyPairResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GenerateKeyPairResponse_server_2eproto.base);
  privkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenerateKeyPairResponse::~GenerateKeyPairResponse() {
  // @@protoc_insertion_point(destructor:grep11.GenerateKeyPairResponse)
  SharedDtor();
}

void GenerateKeyPairResponse::SharedDtor() {
  privkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenerateKeyPairResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateKeyPairResponse& GenerateKeyPairResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GenerateKeyPairResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GenerateKeyPairResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GenerateKeyPairResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  privkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GenerateKeyPairResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GenerateKeyPairResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes PrivKey = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_privkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes PubKey = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pubkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerateKeyPairResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GenerateKeyPairResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes PrivKey = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_privkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes PubKey = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GenerateKeyPairResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GenerateKeyPairResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GenerateKeyPairResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GenerateKeyPairResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PrivKey = 5;
  if (this->privkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->privkey(), output);
  }

  // bytes PubKey = 6;
  if (this->pubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->pubkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GenerateKeyPairResponse)
}

::google::protobuf::uint8* GenerateKeyPairResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GenerateKeyPairResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes PrivKey = 5;
  if (this->privkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->privkey(), target);
  }

  // bytes PubKey = 6;
  if (this->pubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->pubkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GenerateKeyPairResponse)
  return target;
}

size_t GenerateKeyPairResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GenerateKeyPairResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes PrivKey = 5;
  if (this->privkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->privkey());
  }

  // bytes PubKey = 6;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pubkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateKeyPairResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GenerateKeyPairResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateKeyPairResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GenerateKeyPairResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GenerateKeyPairResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GenerateKeyPairResponse)
    MergeFrom(*source);
  }
}

void GenerateKeyPairResponse::MergeFrom(const GenerateKeyPairResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GenerateKeyPairResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.privkey().size() > 0) {

    privkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privkey_);
  }
  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
}

void GenerateKeyPairResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GenerateKeyPairResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateKeyPairResponse::CopyFrom(const GenerateKeyPairResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GenerateKeyPairResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateKeyPairResponse::IsInitialized() const {
  return true;
}

void GenerateKeyPairResponse::Swap(GenerateKeyPairResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerateKeyPairResponse::InternalSwap(GenerateKeyPairResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  privkey_.Swap(&other->privkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GenerateKeyPairResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WrapKeyRequest::InitAsDefaultInstance() {
  ::grep11::_WrapKeyRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class WrapKeyRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const WrapKeyRequest* msg);
};

const ::grep11::Mechanism&
WrapKeyRequest::HasBitSetters::mech(const WrapKeyRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WrapKeyRequest::kKeyFieldNumber;
const int WrapKeyRequest::kKeKFieldNumber;
const int WrapKeyRequest::kMacKeyFieldNumber;
const int WrapKeyRequest::kMechFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WrapKeyRequest::WrapKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.WrapKeyRequest)
}
WrapKeyRequest::WrapKeyRequest(const WrapKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  kek_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kek().size() > 0) {
    kek_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kek_);
  }
  mackey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mackey().size() > 0) {
    mackey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mackey_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.WrapKeyRequest)
}

void WrapKeyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WrapKeyRequest_server_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kek_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mackey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

WrapKeyRequest::~WrapKeyRequest() {
  // @@protoc_insertion_point(destructor:grep11.WrapKeyRequest)
  SharedDtor();
}

void WrapKeyRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kek_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mackey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void WrapKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WrapKeyRequest& WrapKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WrapKeyRequest_server_2eproto.base);
  return *internal_default_instance();
}


void WrapKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.WrapKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kek_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mackey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WrapKeyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WrapKeyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes KeK = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_kek();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes MacKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_mackey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .grep11.Mechanism Mech = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WrapKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.WrapKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes KeK = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_kek()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes MacKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mackey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grep11.Mechanism Mech = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.WrapKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.WrapKeyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WrapKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.WrapKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes KeK = 2;
  if (this->kek().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->kek(), output);
  }

  // bytes MacKey = 3;
  if (this->mackey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->mackey(), output);
  }

  // .grep11.Mechanism Mech = 4;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::mech(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.WrapKeyRequest)
}

::google::protobuf::uint8* WrapKeyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.WrapKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes KeK = 2;
  if (this->kek().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->kek(), target);
  }

  // bytes MacKey = 3;
  if (this->mackey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->mackey(), target);
  }

  // .grep11.Mechanism Mech = 4;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::mech(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.WrapKeyRequest)
  return target;
}

size_t WrapKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.WrapKeyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes KeK = 2;
  if (this->kek().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->kek());
  }

  // bytes MacKey = 3;
  if (this->mackey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mackey());
  }

  // .grep11.Mechanism Mech = 4;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WrapKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.WrapKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WrapKeyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<WrapKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.WrapKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.WrapKeyRequest)
    MergeFrom(*source);
  }
}

void WrapKeyRequest::MergeFrom(const WrapKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.WrapKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.kek().size() > 0) {

    kek_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kek_);
  }
  if (from.mackey().size() > 0) {

    mackey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mackey_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void WrapKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.WrapKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WrapKeyRequest::CopyFrom(const WrapKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.WrapKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WrapKeyRequest::IsInitialized() const {
  return true;
}

void WrapKeyRequest::Swap(WrapKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WrapKeyRequest::InternalSwap(WrapKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kek_.Swap(&other->kek_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mackey_.Swap(&other->mackey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata WrapKeyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WrapKeyResponse::InitAsDefaultInstance() {
}
class WrapKeyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WrapKeyResponse::kWrappedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WrapKeyResponse::WrapKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.WrapKeyResponse)
}
WrapKeyResponse::WrapKeyResponse(const WrapKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wrapped_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wrapped().size() > 0) {
    wrapped_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wrapped_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.WrapKeyResponse)
}

void WrapKeyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WrapKeyResponse_server_2eproto.base);
  wrapped_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WrapKeyResponse::~WrapKeyResponse() {
  // @@protoc_insertion_point(destructor:grep11.WrapKeyResponse)
  SharedDtor();
}

void WrapKeyResponse::SharedDtor() {
  wrapped_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WrapKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WrapKeyResponse& WrapKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WrapKeyResponse_server_2eproto.base);
  return *internal_default_instance();
}


void WrapKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.WrapKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wrapped_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WrapKeyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WrapKeyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Wrapped = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_wrapped();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WrapKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.WrapKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Wrapped = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_wrapped()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.WrapKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.WrapKeyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WrapKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.WrapKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Wrapped = 5;
  if (this->wrapped().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->wrapped(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.WrapKeyResponse)
}

::google::protobuf::uint8* WrapKeyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.WrapKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Wrapped = 5;
  if (this->wrapped().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->wrapped(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.WrapKeyResponse)
  return target;
}

size_t WrapKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.WrapKeyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Wrapped = 5;
  if (this->wrapped().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->wrapped());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WrapKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.WrapKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WrapKeyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<WrapKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.WrapKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.WrapKeyResponse)
    MergeFrom(*source);
  }
}

void WrapKeyResponse::MergeFrom(const WrapKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.WrapKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wrapped().size() > 0) {

    wrapped_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wrapped_);
  }
}

void WrapKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.WrapKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WrapKeyResponse::CopyFrom(const WrapKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.WrapKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WrapKeyResponse::IsInitialized() const {
  return true;
}

void WrapKeyResponse::Swap(WrapKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WrapKeyResponse::InternalSwap(WrapKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  wrapped_.Swap(&other->wrapped_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata WrapKeyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

UnwrapKeyRequest_TemplateEntry_DoNotUse::UnwrapKeyRequest_TemplateEntry_DoNotUse() {}
UnwrapKeyRequest_TemplateEntry_DoNotUse::UnwrapKeyRequest_TemplateEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void UnwrapKeyRequest_TemplateEntry_DoNotUse::MergeFrom(const UnwrapKeyRequest_TemplateEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata UnwrapKeyRequest_TemplateEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[63];
}
void UnwrapKeyRequest_TemplateEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnwrapKeyRequest_TemplateEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      UnwrapKeyRequest_TemplateEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void UnwrapKeyRequest::InitAsDefaultInstance() {
  ::grep11::_UnwrapKeyRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class UnwrapKeyRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const UnwrapKeyRequest* msg);
};

const ::grep11::Mechanism&
UnwrapKeyRequest::HasBitSetters::mech(const UnwrapKeyRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnwrapKeyRequest::kWrappedFieldNumber;
const int UnwrapKeyRequest::kKeKFieldNumber;
const int UnwrapKeyRequest::kMacKeyFieldNumber;
const int UnwrapKeyRequest::kMechFieldNumber;
const int UnwrapKeyRequest::kTemplateFieldNumber;
const int UnwrapKeyRequest::kUnwrappedIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnwrapKeyRequest::UnwrapKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.UnwrapKeyRequest)
}
UnwrapKeyRequest::UnwrapKeyRequest(const UnwrapKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  template__.MergeFrom(from.template__);
  wrapped_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wrapped().size() > 0) {
    wrapped_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wrapped_);
  }
  kek_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kek().size() > 0) {
    kek_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kek_);
  }
  mackey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mackey().size() > 0) {
    mackey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mackey_);
  }
  unwrappedid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unwrappedid().size() > 0) {
    unwrappedid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unwrappedid_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.UnwrapKeyRequest)
}

void UnwrapKeyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UnwrapKeyRequest_server_2eproto.base);
  wrapped_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kek_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mackey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unwrappedid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

UnwrapKeyRequest::~UnwrapKeyRequest() {
  // @@protoc_insertion_point(destructor:grep11.UnwrapKeyRequest)
  SharedDtor();
}

void UnwrapKeyRequest::SharedDtor() {
  wrapped_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kek_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mackey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unwrappedid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void UnwrapKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnwrapKeyRequest& UnwrapKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnwrapKeyRequest_server_2eproto.base);
  return *internal_default_instance();
}


void UnwrapKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.UnwrapKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  template__.Clear();
  wrapped_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kek_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mackey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unwrappedid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnwrapKeyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnwrapKeyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Wrapped = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_wrapped();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes KeK = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_kek();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes MacKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_mackey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .grep11.Mechanism Mech = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<uint64, bytes> Template = 6 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->template__;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // string UnwrappedId = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("grep11.UnwrapKeyRequest.UnwrappedId");
        object = msg->mutable_unwrappedid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnwrapKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.UnwrapKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Wrapped = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_wrapped()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes KeK = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_kek()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes MacKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mackey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grep11.Mechanism Mech = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, bytes> Template = 6 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          UnwrapKeyRequest_TemplateEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              UnwrapKeyRequest_TemplateEntry_DoNotUse,
              ::google::protobuf::uint64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string > > parser(&template__);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UnwrappedId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unwrappedid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unwrappedid().data(), static_cast<int>(this->unwrappedid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grep11.UnwrapKeyRequest.UnwrappedId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.UnwrapKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.UnwrapKeyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnwrapKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.UnwrapKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Wrapped = 1;
  if (this->wrapped().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->wrapped(), output);
  }

  // bytes KeK = 2;
  if (this->kek().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->kek(), output);
  }

  // bytes MacKey = 3;
  if (this->mackey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->mackey(), output);
  }

  // .grep11.Mechanism Mech = 5;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::mech(this), output);
  }

  // map<uint64, bytes> Template = 6 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->template_().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->template_().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->template_().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<UnwrapKeyRequest_TemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(template__.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *entry, output);
      }
    } else {
      ::std::unique_ptr<UnwrapKeyRequest_TemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it) {
        entry.reset(template__.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *entry, output);
      }
    }
  }

  // string UnwrappedId = 7;
  if (this->unwrappedid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unwrappedid().data(), static_cast<int>(this->unwrappedid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.UnwrapKeyRequest.UnwrappedId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->unwrappedid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.UnwrapKeyRequest)
}

::google::protobuf::uint8* UnwrapKeyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.UnwrapKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Wrapped = 1;
  if (this->wrapped().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->wrapped(), target);
  }

  // bytes KeK = 2;
  if (this->kek().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->kek(), target);
  }

  // bytes MacKey = 3;
  if (this->mackey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->mackey(), target);
  }

  // .grep11.Mechanism Mech = 5;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::mech(this), target);
  }

  // map<uint64, bytes> Template = 6 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->template_().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->template_().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->template_().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<UnwrapKeyRequest_TemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(template__.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, *entry, target);
      }
    } else {
      ::std::unique_ptr<UnwrapKeyRequest_TemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it) {
        entry.reset(template__.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, *entry, target);
      }
    }
  }

  // string UnwrappedId = 7;
  if (this->unwrappedid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unwrappedid().data(), static_cast<int>(this->unwrappedid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.UnwrapKeyRequest.UnwrappedId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->unwrappedid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.UnwrapKeyRequest)
  return target;
}

size_t UnwrapKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.UnwrapKeyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, bytes> Template = 6 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->template__size());
  {
    ::std::unique_ptr<UnwrapKeyRequest_TemplateEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
        it = this->template_().begin();
        it != this->template_().end(); ++it) {
      entry.reset(template__.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes Wrapped = 1;
  if (this->wrapped().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->wrapped());
  }

  // bytes KeK = 2;
  if (this->kek().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->kek());
  }

  // bytes MacKey = 3;
  if (this->mackey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mackey());
  }

  // string UnwrappedId = 7;
  if (this->unwrappedid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unwrappedid());
  }

  // .grep11.Mechanism Mech = 5;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnwrapKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.UnwrapKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnwrapKeyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UnwrapKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.UnwrapKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.UnwrapKeyRequest)
    MergeFrom(*source);
  }
}

void UnwrapKeyRequest::MergeFrom(const UnwrapKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.UnwrapKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  template__.MergeFrom(from.template__);
  if (from.wrapped().size() > 0) {

    wrapped_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wrapped_);
  }
  if (from.kek().size() > 0) {

    kek_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kek_);
  }
  if (from.mackey().size() > 0) {

    mackey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mackey_);
  }
  if (from.unwrappedid().size() > 0) {

    unwrappedid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unwrappedid_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void UnwrapKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.UnwrapKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnwrapKeyRequest::CopyFrom(const UnwrapKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.UnwrapKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnwrapKeyRequest::IsInitialized() const {
  return true;
}

void UnwrapKeyRequest::Swap(UnwrapKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnwrapKeyRequest::InternalSwap(UnwrapKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  template__.Swap(&other->template__);
  wrapped_.Swap(&other->wrapped_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kek_.Swap(&other->kek_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mackey_.Swap(&other->mackey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unwrappedid_.Swap(&other->unwrappedid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata UnwrapKeyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UnwrapKeyResponse::InitAsDefaultInstance() {
}
class UnwrapKeyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnwrapKeyResponse::kUnwrappedFieldNumber;
const int UnwrapKeyResponse::kCheckSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnwrapKeyResponse::UnwrapKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.UnwrapKeyResponse)
}
UnwrapKeyResponse::UnwrapKeyResponse(const UnwrapKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unwrapped_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unwrapped().size() > 0) {
    unwrapped_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unwrapped_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.UnwrapKeyResponse)
}

void UnwrapKeyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UnwrapKeyResponse_server_2eproto.base);
  unwrapped_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UnwrapKeyResponse::~UnwrapKeyResponse() {
  // @@protoc_insertion_point(destructor:grep11.UnwrapKeyResponse)
  SharedDtor();
}

void UnwrapKeyResponse::SharedDtor() {
  unwrapped_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnwrapKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnwrapKeyResponse& UnwrapKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnwrapKeyResponse_server_2eproto.base);
  return *internal_default_instance();
}


void UnwrapKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.UnwrapKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unwrapped_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnwrapKeyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnwrapKeyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Unwrapped = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_unwrapped();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes CheckSum = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_checksum();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnwrapKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.UnwrapKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Unwrapped = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_unwrapped()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes CheckSum = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_checksum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.UnwrapKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.UnwrapKeyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnwrapKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.UnwrapKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Unwrapped = 7;
  if (this->unwrapped().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->unwrapped(), output);
  }

  // bytes CheckSum = 8;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.UnwrapKeyResponse)
}

::google::protobuf::uint8* UnwrapKeyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.UnwrapKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Unwrapped = 7;
  if (this->unwrapped().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->unwrapped(), target);
  }

  // bytes CheckSum = 8;
  if (this->checksum().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.UnwrapKeyResponse)
  return target;
}

size_t UnwrapKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.UnwrapKeyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Unwrapped = 7;
  if (this->unwrapped().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->unwrapped());
  }

  // bytes CheckSum = 8;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnwrapKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.UnwrapKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnwrapKeyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<UnwrapKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.UnwrapKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.UnwrapKeyResponse)
    MergeFrom(*source);
  }
}

void UnwrapKeyResponse::MergeFrom(const UnwrapKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.UnwrapKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.unwrapped().size() > 0) {

    unwrapped_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unwrapped_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
}

void UnwrapKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.UnwrapKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnwrapKeyResponse::CopyFrom(const UnwrapKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.UnwrapKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnwrapKeyResponse::IsInitialized() const {
  return true;
}

void UnwrapKeyResponse::Swap(UnwrapKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnwrapKeyResponse::InternalSwap(UnwrapKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  unwrapped_.Swap(&other->unwrapped_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  checksum_.Swap(&other->checksum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UnwrapKeyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

DeriveKeyRequest_TemplateEntry_DoNotUse::DeriveKeyRequest_TemplateEntry_DoNotUse() {}
DeriveKeyRequest_TemplateEntry_DoNotUse::DeriveKeyRequest_TemplateEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void DeriveKeyRequest_TemplateEntry_DoNotUse::MergeFrom(const DeriveKeyRequest_TemplateEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DeriveKeyRequest_TemplateEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[66];
}
void DeriveKeyRequest_TemplateEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeriveKeyRequest_TemplateEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      DeriveKeyRequest_TemplateEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void DeriveKeyRequest::InitAsDefaultInstance() {
  ::grep11::_DeriveKeyRequest_default_instance_._instance.get_mutable()->mech_ = const_cast< ::grep11::Mechanism*>(
      ::grep11::Mechanism::internal_default_instance());
}
class DeriveKeyRequest::HasBitSetters {
 public:
  static const ::grep11::Mechanism& mech(const DeriveKeyRequest* msg);
};

const ::grep11::Mechanism&
DeriveKeyRequest::HasBitSetters::mech(const DeriveKeyRequest* msg) {
  return *msg->mech_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeriveKeyRequest::kMechFieldNumber;
const int DeriveKeyRequest::kTemplateFieldNumber;
const int DeriveKeyRequest::kBaseKeyFieldNumber;
const int DeriveKeyRequest::kDataFieldNumber;
const int DeriveKeyRequest::kNewKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeriveKeyRequest::DeriveKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DeriveKeyRequest)
}
DeriveKeyRequest::DeriveKeyRequest(const DeriveKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  template__.MergeFrom(from.template__);
  basekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.basekey().size() > 0) {
    basekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.basekey_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  newkeyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newkeyid().size() > 0) {
    newkeyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newkeyid_);
  }
  if (from.has_mech()) {
    mech_ = new ::grep11::Mechanism(*from.mech_);
  } else {
    mech_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DeriveKeyRequest)
}

void DeriveKeyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeriveKeyRequest_server_2eproto.base);
  basekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newkeyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mech_ = nullptr;
}

DeriveKeyRequest::~DeriveKeyRequest() {
  // @@protoc_insertion_point(destructor:grep11.DeriveKeyRequest)
  SharedDtor();
}

void DeriveKeyRequest::SharedDtor() {
  basekey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newkeyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mech_;
}

void DeriveKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeriveKeyRequest& DeriveKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeriveKeyRequest_server_2eproto.base);
  return *internal_default_instance();
}


void DeriveKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DeriveKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  template__.Clear();
  basekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newkeyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeriveKeyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeriveKeyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.Mechanism Mech = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::Mechanism::_InternalParse;
        object = msg->mutable_mech();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->template__;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // bytes BaseKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_basekey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes Data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string NewKeyId = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("grep11.DeriveKeyRequest.NewKeyId");
        object = msg->mutable_newkeyid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeriveKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DeriveKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.Mechanism Mech = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DeriveKeyRequest_TemplateEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DeriveKeyRequest_TemplateEntry_DoNotUse,
              ::google::protobuf::uint64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string > > parser(&template__);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes BaseKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_basekey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NewKeyId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newkeyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newkeyid().data(), static_cast<int>(this->newkeyid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grep11.DeriveKeyRequest.NewKeyId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DeriveKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DeriveKeyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeriveKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DeriveKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::mech(this), output);
  }

  // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->template_().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->template_().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->template_().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DeriveKeyRequest_TemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(template__.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    } else {
      ::std::unique_ptr<DeriveKeyRequest_TemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it) {
        entry.reset(template__.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    }
  }

  // bytes BaseKey = 3;
  if (this->basekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->basekey(), output);
  }

  // bytes Data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // string NewKeyId = 6;
  if (this->newkeyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newkeyid().data(), static_cast<int>(this->newkeyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.DeriveKeyRequest.NewKeyId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->newkeyid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DeriveKeyRequest)
}

::google::protobuf::uint8* DeriveKeyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DeriveKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::mech(this), target);
  }

  // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->template_().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->template_().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->template_().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DeriveKeyRequest_TemplateEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(template__.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    } else {
      ::std::unique_ptr<DeriveKeyRequest_TemplateEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->template_().begin();
          it != this->template_().end(); ++it) {
        entry.reset(template__.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    }
  }

  // bytes BaseKey = 3;
  if (this->basekey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->basekey(), target);
  }

  // bytes Data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // string NewKeyId = 6;
  if (this->newkeyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newkeyid().data(), static_cast<int>(this->newkeyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.DeriveKeyRequest.NewKeyId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->newkeyid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DeriveKeyRequest)
  return target;
}

size_t DeriveKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DeriveKeyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->template__size());
  {
    ::std::unique_ptr<DeriveKeyRequest_TemplateEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
        it = this->template_().begin();
        it != this->template_().end(); ++it) {
      entry.reset(template__.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes BaseKey = 3;
  if (this->basekey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->basekey());
  }

  // bytes Data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string NewKeyId = 6;
  if (this->newkeyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newkeyid());
  }

  // .grep11.Mechanism Mech = 1;
  if (this->has_mech()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mech_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeriveKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DeriveKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeriveKeyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeriveKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DeriveKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DeriveKeyRequest)
    MergeFrom(*source);
  }
}

void DeriveKeyRequest::MergeFrom(const DeriveKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DeriveKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  template__.MergeFrom(from.template__);
  if (from.basekey().size() > 0) {

    basekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.basekey_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.newkeyid().size() > 0) {

    newkeyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newkeyid_);
  }
  if (from.has_mech()) {
    mutable_mech()->::grep11::Mechanism::MergeFrom(from.mech());
  }
}

void DeriveKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DeriveKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeriveKeyRequest::CopyFrom(const DeriveKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DeriveKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeriveKeyRequest::IsInitialized() const {
  return true;
}

void DeriveKeyRequest::Swap(DeriveKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeriveKeyRequest::InternalSwap(DeriveKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  template__.Swap(&other->template__);
  basekey_.Swap(&other->basekey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  newkeyid_.Swap(&other->newkeyid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata DeriveKeyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeriveKeyResponse::InitAsDefaultInstance() {
}
class DeriveKeyResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeriveKeyResponse::kNewKeyFieldNumber;
const int DeriveKeyResponse::kCheckSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeriveKeyResponse::DeriveKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.DeriveKeyResponse)
}
DeriveKeyResponse::DeriveKeyResponse(const DeriveKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newkey().size() > 0) {
    newkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newkey_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.DeriveKeyResponse)
}

void DeriveKeyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DeriveKeyResponse_server_2eproto.base);
  newkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeriveKeyResponse::~DeriveKeyResponse() {
  // @@protoc_insertion_point(destructor:grep11.DeriveKeyResponse)
  SharedDtor();
}

void DeriveKeyResponse::SharedDtor() {
  newkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeriveKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeriveKeyResponse& DeriveKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeriveKeyResponse_server_2eproto.base);
  return *internal_default_instance();
}


void DeriveKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.DeriveKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeriveKeyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeriveKeyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes NewKey = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_newkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes CheckSum = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_checksum();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeriveKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.DeriveKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes NewKey = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_newkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes CheckSum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_checksum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.DeriveKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.DeriveKeyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeriveKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.DeriveKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes NewKey = 6;
  if (this->newkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->newkey(), output);
  }

  // bytes CheckSum = 7;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.DeriveKeyResponse)
}

::google::protobuf::uint8* DeriveKeyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.DeriveKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes NewKey = 6;
  if (this->newkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->newkey(), target);
  }

  // bytes CheckSum = 7;
  if (this->checksum().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.DeriveKeyResponse)
  return target;
}

size_t DeriveKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.DeriveKeyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes NewKey = 6;
  if (this->newkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->newkey());
  }

  // bytes CheckSum = 7;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeriveKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.DeriveKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeriveKeyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DeriveKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.DeriveKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.DeriveKeyResponse)
    MergeFrom(*source);
  }
}

void DeriveKeyResponse::MergeFrom(const DeriveKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.DeriveKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newkey().size() > 0) {

    newkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newkey_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
}

void DeriveKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.DeriveKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeriveKeyResponse::CopyFrom(const DeriveKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.DeriveKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeriveKeyResponse::IsInitialized() const {
  return true;
}

void DeriveKeyResponse::Swap(DeriveKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeriveKeyResponse::InternalSwap(DeriveKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  newkey_.Swap(&other->newkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  checksum_.Swap(&other->checksum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DeriveKeyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetMechanismListRequest::InitAsDefaultInstance() {
}
class GetMechanismListRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMechanismListRequest::GetMechanismListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GetMechanismListRequest)
}
GetMechanismListRequest::GetMechanismListRequest(const GetMechanismListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grep11.GetMechanismListRequest)
}

void GetMechanismListRequest::SharedCtor() {
}

GetMechanismListRequest::~GetMechanismListRequest() {
  // @@protoc_insertion_point(destructor:grep11.GetMechanismListRequest)
  SharedDtor();
}

void GetMechanismListRequest::SharedDtor() {
}

void GetMechanismListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMechanismListRequest& GetMechanismListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetMechanismListRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetMechanismListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GetMechanismListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetMechanismListRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetMechanismListRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetMechanismListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GetMechanismListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GetMechanismListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GetMechanismListRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetMechanismListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GetMechanismListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GetMechanismListRequest)
}

::google::protobuf::uint8* GetMechanismListRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GetMechanismListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GetMechanismListRequest)
  return target;
}

size_t GetMechanismListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GetMechanismListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMechanismListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GetMechanismListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMechanismListRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetMechanismListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GetMechanismListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GetMechanismListRequest)
    MergeFrom(*source);
  }
}

void GetMechanismListRequest::MergeFrom(const GetMechanismListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GetMechanismListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetMechanismListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GetMechanismListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMechanismListRequest::CopyFrom(const GetMechanismListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GetMechanismListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMechanismListRequest::IsInitialized() const {
  return true;
}

void GetMechanismListRequest::Swap(GetMechanismListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMechanismListRequest::InternalSwap(GetMechanismListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMechanismListRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetMechanismListResponse::InitAsDefaultInstance() {
}
class GetMechanismListResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMechanismListResponse::kMechsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMechanismListResponse::GetMechanismListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GetMechanismListResponse)
}
GetMechanismListResponse::GetMechanismListResponse(const GetMechanismListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      mechs_(from.mechs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grep11.GetMechanismListResponse)
}

void GetMechanismListResponse::SharedCtor() {
}

GetMechanismListResponse::~GetMechanismListResponse() {
  // @@protoc_insertion_point(destructor:grep11.GetMechanismListResponse)
  SharedDtor();
}

void GetMechanismListResponse::SharedDtor() {
}

void GetMechanismListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMechanismListResponse& GetMechanismListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetMechanismListResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetMechanismListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GetMechanismListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mechs_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetMechanismListResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetMechanismListResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 Mechs = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
          object = msg->mutable_mechs();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_mechs(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetMechanismListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GetMechanismListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 Mechs = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mechs())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_mechs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GetMechanismListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GetMechanismListResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetMechanismListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GetMechanismListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 Mechs = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  if (this->mechs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mechs_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->mechs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->mechs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GetMechanismListResponse)
}

::google::protobuf::uint8* GetMechanismListResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GetMechanismListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 Mechs = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  if (this->mechs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _mechs_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->mechs_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GetMechanismListResponse)
  return target;
}

size_t GetMechanismListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GetMechanismListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 Mechs = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->mechs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _mechs_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMechanismListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GetMechanismListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMechanismListResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetMechanismListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GetMechanismListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GetMechanismListResponse)
    MergeFrom(*source);
  }
}

void GetMechanismListResponse::MergeFrom(const GetMechanismListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GetMechanismListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mechs_.MergeFrom(from.mechs_);
}

void GetMechanismListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GetMechanismListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMechanismListResponse::CopyFrom(const GetMechanismListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GetMechanismListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMechanismListResponse::IsInitialized() const {
  return true;
}

void GetMechanismListResponse::Swap(GetMechanismListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMechanismListResponse::InternalSwap(GetMechanismListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  mechs_.InternalSwap(&other->mechs_);
}

::google::protobuf::Metadata GetMechanismListResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetMechanismInfoRequest::InitAsDefaultInstance() {
}
class GetMechanismInfoRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMechanismInfoRequest::kMechFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMechanismInfoRequest::GetMechanismInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GetMechanismInfoRequest)
}
GetMechanismInfoRequest::GetMechanismInfoRequest(const GetMechanismInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mech_ = from.mech_;
  // @@protoc_insertion_point(copy_constructor:grep11.GetMechanismInfoRequest)
}

void GetMechanismInfoRequest::SharedCtor() {
  mech_ = PROTOBUF_ULONGLONG(0);
}

GetMechanismInfoRequest::~GetMechanismInfoRequest() {
  // @@protoc_insertion_point(destructor:grep11.GetMechanismInfoRequest)
  SharedDtor();
}

void GetMechanismInfoRequest::SharedDtor() {
}

void GetMechanismInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMechanismInfoRequest& GetMechanismInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetMechanismInfoRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetMechanismInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GetMechanismInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mech_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetMechanismInfoRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetMechanismInfoRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 Mech = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_mech(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetMechanismInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GetMechanismInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Mech = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mech_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GetMechanismInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GetMechanismInfoRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetMechanismInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GetMechanismInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Mech = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  if (this->mech() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mech(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GetMechanismInfoRequest)
}

::google::protobuf::uint8* GetMechanismInfoRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GetMechanismInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Mech = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  if (this->mech() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mech(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GetMechanismInfoRequest)
  return target;
}

size_t GetMechanismInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GetMechanismInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Mech = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  if (this->mech() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mech());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMechanismInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GetMechanismInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMechanismInfoRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetMechanismInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GetMechanismInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GetMechanismInfoRequest)
    MergeFrom(*source);
  }
}

void GetMechanismInfoRequest::MergeFrom(const GetMechanismInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GetMechanismInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mech() != 0) {
    set_mech(from.mech());
  }
}

void GetMechanismInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GetMechanismInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMechanismInfoRequest::CopyFrom(const GetMechanismInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GetMechanismInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMechanismInfoRequest::IsInitialized() const {
  return true;
}

void GetMechanismInfoRequest::Swap(GetMechanismInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMechanismInfoRequest::InternalSwap(GetMechanismInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mech_, other->mech_);
}

::google::protobuf::Metadata GetMechanismInfoRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetMechanismInfoResponse::InitAsDefaultInstance() {
  ::grep11::_GetMechanismInfoResponse_default_instance_._instance.get_mutable()->mechinfo_ = const_cast< ::grep11::MechanismInfo*>(
      ::grep11::MechanismInfo::internal_default_instance());
}
class GetMechanismInfoResponse::HasBitSetters {
 public:
  static const ::grep11::MechanismInfo& mechinfo(const GetMechanismInfoResponse* msg);
};

const ::grep11::MechanismInfo&
GetMechanismInfoResponse::HasBitSetters::mechinfo(const GetMechanismInfoResponse* msg) {
  return *msg->mechinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMechanismInfoResponse::kMechInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMechanismInfoResponse::GetMechanismInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GetMechanismInfoResponse)
}
GetMechanismInfoResponse::GetMechanismInfoResponse(const GetMechanismInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mechinfo()) {
    mechinfo_ = new ::grep11::MechanismInfo(*from.mechinfo_);
  } else {
    mechinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grep11.GetMechanismInfoResponse)
}

void GetMechanismInfoResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetMechanismInfoResponse_server_2eproto.base);
  mechinfo_ = nullptr;
}

GetMechanismInfoResponse::~GetMechanismInfoResponse() {
  // @@protoc_insertion_point(destructor:grep11.GetMechanismInfoResponse)
  SharedDtor();
}

void GetMechanismInfoResponse::SharedDtor() {
  if (this != internal_default_instance()) delete mechinfo_;
}

void GetMechanismInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMechanismInfoResponse& GetMechanismInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetMechanismInfoResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetMechanismInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GetMechanismInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && mechinfo_ != nullptr) {
    delete mechinfo_;
  }
  mechinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetMechanismInfoResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetMechanismInfoResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .grep11.MechanismInfo MechInfo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::grep11::MechanismInfo::_InternalParse;
        object = msg->mutable_mechinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetMechanismInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GetMechanismInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grep11.MechanismInfo MechInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mechinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GetMechanismInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GetMechanismInfoResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetMechanismInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GetMechanismInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.MechanismInfo MechInfo = 3;
  if (this->has_mechinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::mechinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GetMechanismInfoResponse)
}

::google::protobuf::uint8* GetMechanismInfoResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GetMechanismInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grep11.MechanismInfo MechInfo = 3;
  if (this->has_mechinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::mechinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GetMechanismInfoResponse)
  return target;
}

size_t GetMechanismInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GetMechanismInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grep11.MechanismInfo MechInfo = 3;
  if (this->has_mechinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mechinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMechanismInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GetMechanismInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMechanismInfoResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetMechanismInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GetMechanismInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GetMechanismInfoResponse)
    MergeFrom(*source);
  }
}

void GetMechanismInfoResponse::MergeFrom(const GetMechanismInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GetMechanismInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mechinfo()) {
    mutable_mechinfo()->::grep11::MechanismInfo::MergeFrom(from.mechinfo());
  }
}

void GetMechanismInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GetMechanismInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMechanismInfoResponse::CopyFrom(const GetMechanismInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GetMechanismInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMechanismInfoResponse::IsInitialized() const {
  return true;
}

void GetMechanismInfoResponse::Swap(GetMechanismInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMechanismInfoResponse::InternalSwap(GetMechanismInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mechinfo_, other->mechinfo_);
}

::google::protobuf::Metadata GetMechanismInfoResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

GetAttributeValueRequest_AttributesEntry_DoNotUse::GetAttributeValueRequest_AttributesEntry_DoNotUse() {}
GetAttributeValueRequest_AttributesEntry_DoNotUse::GetAttributeValueRequest_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GetAttributeValueRequest_AttributesEntry_DoNotUse::MergeFrom(const GetAttributeValueRequest_AttributesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GetAttributeValueRequest_AttributesEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[73];
}
void GetAttributeValueRequest_AttributesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAttributeValueRequest_AttributesEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      GetAttributeValueRequest_AttributesEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void GetAttributeValueRequest::InitAsDefaultInstance() {
}
class GetAttributeValueRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttributeValueRequest::kObjectFieldNumber;
const int GetAttributeValueRequest::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttributeValueRequest::GetAttributeValueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GetAttributeValueRequest)
}
GetAttributeValueRequest::GetAttributeValueRequest(const GetAttributeValueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attributes_.MergeFrom(from.attributes_);
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object().size() > 0) {
    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.GetAttributeValueRequest)
}

void GetAttributeValueRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetAttributeValueRequest_server_2eproto.base);
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAttributeValueRequest::~GetAttributeValueRequest() {
  // @@protoc_insertion_point(destructor:grep11.GetAttributeValueRequest)
  SharedDtor();
}

void GetAttributeValueRequest::SharedDtor() {
  object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAttributeValueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAttributeValueRequest& GetAttributeValueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetAttributeValueRequest_server_2eproto.base);
  return *internal_default_instance();
}


void GetAttributeValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GetAttributeValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetAttributeValueRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetAttributeValueRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Object = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_object();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->attributes_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAttributeValueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GetAttributeValueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Object = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          GetAttributeValueRequest_AttributesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GetAttributeValueRequest_AttributesEntry_DoNotUse,
              ::google::protobuf::uint64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string > > parser(&attributes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GetAttributeValueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GetAttributeValueRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetAttributeValueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GetAttributeValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Object = 1;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->object(), output);
  }

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    } else {
      ::std::unique_ptr<GetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GetAttributeValueRequest)
}

::google::protobuf::uint8* GetAttributeValueRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GetAttributeValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Object = 1;
  if (this->object().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->object(), target);
  }

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    } else {
      ::std::unique_ptr<GetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GetAttributeValueRequest)
  return target;
}

size_t GetAttributeValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GetAttributeValueRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attributes_size());
  {
    ::std::unique_ptr<GetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
        it = this->attributes().begin();
        it != this->attributes().end(); ++it) {
      entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes Object = 1;
  if (this->object().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->object());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttributeValueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GetAttributeValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttributeValueRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetAttributeValueRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GetAttributeValueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GetAttributeValueRequest)
    MergeFrom(*source);
  }
}

void GetAttributeValueRequest::MergeFrom(const GetAttributeValueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GetAttributeValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  if (from.object().size() > 0) {

    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
}

void GetAttributeValueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GetAttributeValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttributeValueRequest::CopyFrom(const GetAttributeValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GetAttributeValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttributeValueRequest::IsInitialized() const {
  return true;
}

void GetAttributeValueRequest::Swap(GetAttributeValueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttributeValueRequest::InternalSwap(GetAttributeValueRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attributes_.Swap(&other->attributes_);
  object_.Swap(&other->object_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetAttributeValueRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

GetAttributeValueResponse_AttributesEntry_DoNotUse::GetAttributeValueResponse_AttributesEntry_DoNotUse() {}
GetAttributeValueResponse_AttributesEntry_DoNotUse::GetAttributeValueResponse_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GetAttributeValueResponse_AttributesEntry_DoNotUse::MergeFrom(const GetAttributeValueResponse_AttributesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GetAttributeValueResponse_AttributesEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[75];
}
void GetAttributeValueResponse_AttributesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAttributeValueResponse_AttributesEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      GetAttributeValueResponse_AttributesEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void GetAttributeValueResponse::InitAsDefaultInstance() {
}
class GetAttributeValueResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttributeValueResponse::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttributeValueResponse::GetAttributeValueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.GetAttributeValueResponse)
}
GetAttributeValueResponse::GetAttributeValueResponse(const GetAttributeValueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attributes_.MergeFrom(from.attributes_);
  // @@protoc_insertion_point(copy_constructor:grep11.GetAttributeValueResponse)
}

void GetAttributeValueResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetAttributeValueResponse_server_2eproto.base);
}

GetAttributeValueResponse::~GetAttributeValueResponse() {
  // @@protoc_insertion_point(destructor:grep11.GetAttributeValueResponse)
  SharedDtor();
}

void GetAttributeValueResponse::SharedDtor() {
}

void GetAttributeValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAttributeValueResponse& GetAttributeValueResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetAttributeValueResponse_server_2eproto.base);
  return *internal_default_instance();
}


void GetAttributeValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.GetAttributeValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetAttributeValueResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetAttributeValueResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->attributes_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetAttributeValueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.GetAttributeValueResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          GetAttributeValueResponse_AttributesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GetAttributeValueResponse_AttributesEntry_DoNotUse,
              ::google::protobuf::uint64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string > > parser(&attributes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.GetAttributeValueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.GetAttributeValueResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetAttributeValueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.GetAttributeValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetAttributeValueResponse_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    } else {
      ::std::unique_ptr<GetAttributeValueResponse_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.GetAttributeValueResponse)
}

::google::protobuf::uint8* GetAttributeValueResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.GetAttributeValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GetAttributeValueResponse_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    } else {
      ::std::unique_ptr<GetAttributeValueResponse_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.GetAttributeValueResponse)
  return target;
}

size_t GetAttributeValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.GetAttributeValueResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attributes_size());
  {
    ::std::unique_ptr<GetAttributeValueResponse_AttributesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
        it = this->attributes().begin();
        it != this->attributes().end(); ++it) {
      entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttributeValueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.GetAttributeValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttributeValueResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetAttributeValueResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.GetAttributeValueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.GetAttributeValueResponse)
    MergeFrom(*source);
  }
}

void GetAttributeValueResponse::MergeFrom(const GetAttributeValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.GetAttributeValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
}

void GetAttributeValueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.GetAttributeValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttributeValueResponse::CopyFrom(const GetAttributeValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.GetAttributeValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttributeValueResponse::IsInitialized() const {
  return true;
}

void GetAttributeValueResponse::Swap(GetAttributeValueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttributeValueResponse::InternalSwap(GetAttributeValueResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attributes_.Swap(&other->attributes_);
}

::google::protobuf::Metadata GetAttributeValueResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

SetAttributeValueRequest_AttributesEntry_DoNotUse::SetAttributeValueRequest_AttributesEntry_DoNotUse() {}
SetAttributeValueRequest_AttributesEntry_DoNotUse::SetAttributeValueRequest_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void SetAttributeValueRequest_AttributesEntry_DoNotUse::MergeFrom(const SetAttributeValueRequest_AttributesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SetAttributeValueRequest_AttributesEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[77];
}
void SetAttributeValueRequest_AttributesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetAttributeValueRequest_AttributesEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      SetAttributeValueRequest_AttributesEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void SetAttributeValueRequest::InitAsDefaultInstance() {
}
class SetAttributeValueRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAttributeValueRequest::kObjectFieldNumber;
const int SetAttributeValueRequest::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAttributeValueRequest::SetAttributeValueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SetAttributeValueRequest)
}
SetAttributeValueRequest::SetAttributeValueRequest(const SetAttributeValueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attributes_.MergeFrom(from.attributes_);
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object().size() > 0) {
    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SetAttributeValueRequest)
}

void SetAttributeValueRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetAttributeValueRequest_server_2eproto.base);
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetAttributeValueRequest::~SetAttributeValueRequest() {
  // @@protoc_insertion_point(destructor:grep11.SetAttributeValueRequest)
  SharedDtor();
}

void SetAttributeValueRequest::SharedDtor() {
  object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetAttributeValueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAttributeValueRequest& SetAttributeValueRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetAttributeValueRequest_server_2eproto.base);
  return *internal_default_instance();
}


void SetAttributeValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SetAttributeValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetAttributeValueRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetAttributeValueRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Object = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_object();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->attributes_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetAttributeValueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SetAttributeValueRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Object = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          SetAttributeValueRequest_AttributesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SetAttributeValueRequest_AttributesEntry_DoNotUse,
              ::google::protobuf::uint64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string > > parser(&attributes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SetAttributeValueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SetAttributeValueRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetAttributeValueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SetAttributeValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Object = 1;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->object(), output);
  }

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    } else {
      ::std::unique_ptr<SetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SetAttributeValueRequest)
}

::google::protobuf::uint8* SetAttributeValueRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SetAttributeValueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Object = 1;
  if (this->object().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->object(), target);
  }

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    } else {
      ::std::unique_ptr<SetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SetAttributeValueRequest)
  return target;
}

size_t SetAttributeValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SetAttributeValueRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attributes_size());
  {
    ::std::unique_ptr<SetAttributeValueRequest_AttributesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >::const_iterator
        it = this->attributes().begin();
        it != this->attributes().end(); ++it) {
      entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes Object = 1;
  if (this->object().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->object());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAttributeValueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SetAttributeValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAttributeValueRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetAttributeValueRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SetAttributeValueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SetAttributeValueRequest)
    MergeFrom(*source);
  }
}

void SetAttributeValueRequest::MergeFrom(const SetAttributeValueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SetAttributeValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  if (from.object().size() > 0) {

    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
}

void SetAttributeValueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SetAttributeValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAttributeValueRequest::CopyFrom(const SetAttributeValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SetAttributeValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAttributeValueRequest::IsInitialized() const {
  return true;
}

void SetAttributeValueRequest::Swap(SetAttributeValueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAttributeValueRequest::InternalSwap(SetAttributeValueRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attributes_.Swap(&other->attributes_);
  object_.Swap(&other->object_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetAttributeValueRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetAttributeValueResponse::InitAsDefaultInstance() {
}
class SetAttributeValueResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAttributeValueResponse::kObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAttributeValueResponse::SetAttributeValueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.SetAttributeValueResponse)
}
SetAttributeValueResponse::SetAttributeValueResponse(const SetAttributeValueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object().size() > 0) {
    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  // @@protoc_insertion_point(copy_constructor:grep11.SetAttributeValueResponse)
}

void SetAttributeValueResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetAttributeValueResponse_server_2eproto.base);
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetAttributeValueResponse::~SetAttributeValueResponse() {
  // @@protoc_insertion_point(destructor:grep11.SetAttributeValueResponse)
  SharedDtor();
}

void SetAttributeValueResponse::SharedDtor() {
  object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetAttributeValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetAttributeValueResponse& SetAttributeValueResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetAttributeValueResponse_server_2eproto.base);
  return *internal_default_instance();
}


void SetAttributeValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.SetAttributeValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetAttributeValueResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetAttributeValueResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes Object = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_object();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetAttributeValueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.SetAttributeValueResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Object = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.SetAttributeValueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.SetAttributeValueResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetAttributeValueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.SetAttributeValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Object = 1;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->object(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.SetAttributeValueResponse)
}

::google::protobuf::uint8* SetAttributeValueResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.SetAttributeValueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Object = 1;
  if (this->object().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->object(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.SetAttributeValueResponse)
  return target;
}

size_t SetAttributeValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.SetAttributeValueResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Object = 1;
  if (this->object().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->object());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetAttributeValueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.SetAttributeValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAttributeValueResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetAttributeValueResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.SetAttributeValueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.SetAttributeValueResponse)
    MergeFrom(*source);
  }
}

void SetAttributeValueResponse::MergeFrom(const SetAttributeValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.SetAttributeValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object().size() > 0) {

    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
}

void SetAttributeValueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.SetAttributeValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAttributeValueResponse::CopyFrom(const SetAttributeValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.SetAttributeValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAttributeValueResponse::IsInitialized() const {
  return true;
}

void SetAttributeValueResponse::Swap(SetAttributeValueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAttributeValueResponse::InternalSwap(SetAttributeValueResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_.Swap(&other->object_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SetAttributeValueResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Mechanism::InitAsDefaultInstance() {
}
class Mechanism::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mechanism::kMechanismFieldNumber;
const int Mechanism::kParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mechanism::Mechanism()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.Mechanism)
}
Mechanism::Mechanism(const Mechanism& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parameter().size() > 0) {
    parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_);
  }
  mechanism_ = from.mechanism_;
  // @@protoc_insertion_point(copy_constructor:grep11.Mechanism)
}

void Mechanism::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Mechanism_server_2eproto.base);
  parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mechanism_ = PROTOBUF_ULONGLONG(0);
}

Mechanism::~Mechanism() {
  // @@protoc_insertion_point(destructor:grep11.Mechanism)
  SharedDtor();
}

void Mechanism::SharedDtor() {
  parameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mechanism::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Mechanism& Mechanism::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Mechanism_server_2eproto.base);
  return *internal_default_instance();
}


void Mechanism::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.Mechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mechanism_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Mechanism::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Mechanism*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 Mechanism = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_mechanism(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes Parameter = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_parameter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Mechanism::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.Mechanism)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Mechanism = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mechanism_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Parameter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.Mechanism)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.Mechanism)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Mechanism::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.Mechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Mechanism = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  if (this->mechanism() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mechanism(), output);
  }

  // bytes Parameter = 2;
  if (this->parameter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->parameter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.Mechanism)
}

::google::protobuf::uint8* Mechanism::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.Mechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Mechanism = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  if (this->mechanism() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mechanism(), target);
  }

  // bytes Parameter = 2;
  if (this->parameter().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->parameter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.Mechanism)
  return target;
}

size_t Mechanism::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.Mechanism)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Parameter = 2;
  if (this->parameter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->parameter());
  }

  // uint64 Mechanism = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  if (this->mechanism() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mechanism());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mechanism::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.Mechanism)
  GOOGLE_DCHECK_NE(&from, this);
  const Mechanism* source =
      ::google::protobuf::DynamicCastToGenerated<Mechanism>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.Mechanism)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.Mechanism)
    MergeFrom(*source);
  }
}

void Mechanism::MergeFrom(const Mechanism& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.Mechanism)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parameter().size() > 0) {

    parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_);
  }
  if (from.mechanism() != 0) {
    set_mechanism(from.mechanism());
  }
}

void Mechanism::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.Mechanism)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mechanism::CopyFrom(const Mechanism& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.Mechanism)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mechanism::IsInitialized() const {
  return true;
}

void Mechanism::Swap(Mechanism* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mechanism::InternalSwap(Mechanism* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parameter_.Swap(&other->parameter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mechanism_, other->mechanism_);
}

::google::protobuf::Metadata Mechanism::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MechanismInfo::InitAsDefaultInstance() {
}
class MechanismInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MechanismInfo::kMinKeySizeFieldNumber;
const int MechanismInfo::kMaxKeySizeFieldNumber;
const int MechanismInfo::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MechanismInfo::MechanismInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.MechanismInfo)
}
MechanismInfo::MechanismInfo(const MechanismInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&minkeysize_, &from.minkeysize_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&minkeysize_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:grep11.MechanismInfo)
}

void MechanismInfo::SharedCtor() {
  ::memset(&minkeysize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&minkeysize_)) + sizeof(flags_));
}

MechanismInfo::~MechanismInfo() {
  // @@protoc_insertion_point(destructor:grep11.MechanismInfo)
  SharedDtor();
}

void MechanismInfo::SharedDtor() {
}

void MechanismInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MechanismInfo& MechanismInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MechanismInfo_server_2eproto.base);
  return *internal_default_instance();
}


void MechanismInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.MechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&minkeysize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&minkeysize_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MechanismInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MechanismInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 MinKeySize = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_minkeysize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 MaxKeySize = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_maxkeysize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 Flags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MechanismInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.MechanismInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 MinKeySize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &minkeysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 MaxKeySize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maxkeysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.MechanismInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.MechanismInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MechanismInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.MechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 MinKeySize = 1;
  if (this->minkeysize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->minkeysize(), output);
  }

  // uint64 MaxKeySize = 2;
  if (this->maxkeysize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->maxkeysize(), output);
  }

  // uint64 Flags = 3;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.MechanismInfo)
}

::google::protobuf::uint8* MechanismInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.MechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 MinKeySize = 1;
  if (this->minkeysize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->minkeysize(), target);
  }

  // uint64 MaxKeySize = 2;
  if (this->maxkeysize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->maxkeysize(), target);
  }

  // uint64 Flags = 3;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.MechanismInfo)
  return target;
}

size_t MechanismInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.MechanismInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 MinKeySize = 1;
  if (this->minkeysize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->minkeysize());
  }

  // uint64 MaxKeySize = 2;
  if (this->maxkeysize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->maxkeysize());
  }

  // uint64 Flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MechanismInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.MechanismInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MechanismInfo* source =
      ::google::protobuf::DynamicCastToGenerated<MechanismInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.MechanismInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.MechanismInfo)
    MergeFrom(*source);
  }
}

void MechanismInfo::MergeFrom(const MechanismInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.MechanismInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.minkeysize() != 0) {
    set_minkeysize(from.minkeysize());
  }
  if (from.maxkeysize() != 0) {
    set_maxkeysize(from.maxkeysize());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void MechanismInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.MechanismInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MechanismInfo::CopyFrom(const MechanismInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.MechanismInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MechanismInfo::IsInitialized() const {
  return true;
}

void MechanismInfo::Swap(MechanismInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MechanismInfo::InternalSwap(MechanismInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(minkeysize_, other->minkeysize_);
  swap(maxkeysize_, other->maxkeysize_);
  swap(flags_, other->flags_);
}

::google::protobuf::Metadata MechanismInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Grep11Error::InitAsDefaultInstance() {
}
class Grep11Error::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Grep11Error::kCodeFieldNumber;
const int Grep11Error::kDetailFieldNumber;
const int Grep11Error::kRetryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Grep11Error::Grep11Error()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grep11.Grep11Error)
}
Grep11Error::Grep11Error(const Grep11Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail().size() > 0) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&retry_) -
    reinterpret_cast<char*>(&code_)) + sizeof(retry_));
  // @@protoc_insertion_point(copy_constructor:grep11.Grep11Error)
}

void Grep11Error::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Grep11Error_server_2eproto.base);
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retry_) -
      reinterpret_cast<char*>(&code_)) + sizeof(retry_));
}

Grep11Error::~Grep11Error() {
  // @@protoc_insertion_point(destructor:grep11.Grep11Error)
  SharedDtor();
}

void Grep11Error::SharedDtor() {
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Grep11Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Grep11Error& Grep11Error::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Grep11Error_server_2eproto.base);
  return *internal_default_instance();
}


void Grep11Error::Clear() {
// @@protoc_insertion_point(message_clear_start:grep11.Grep11Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retry_) -
      reinterpret_cast<char*>(&code_)) + sizeof(retry_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Grep11Error::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Grep11Error*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 Code = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Return"];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Detail = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("grep11.Grep11Error.Detail");
        object = msg->mutable_detail();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool Retry = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_retry(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Grep11Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grep11.Grep11Error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Code = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Return"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Detail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail().data(), static_cast<int>(this->detail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grep11.Grep11Error.Detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Retry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &retry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grep11.Grep11Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grep11.Grep11Error)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Grep11Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grep11.Grep11Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Code = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Return"];
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->code(), output);
  }

  // string Detail = 2;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.Grep11Error.Detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->detail(), output);
  }

  // bool Retry = 3;
  if (this->retry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->retry(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grep11.Grep11Error)
}

::google::protobuf::uint8* Grep11Error::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grep11.Grep11Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Code = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Return"];
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->code(), target);
  }

  // string Detail = 2;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grep11.Grep11Error.Detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->detail(), target);
  }

  // bool Retry = 3;
  if (this->retry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->retry(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grep11.Grep11Error)
  return target;
}

size_t Grep11Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grep11.Grep11Error)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Detail = 2;
  if (this->detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  // uint64 Code = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Return"];
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->code());
  }

  // bool Retry = 3;
  if (this->retry() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Grep11Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grep11.Grep11Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Grep11Error* source =
      ::google::protobuf::DynamicCastToGenerated<Grep11Error>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grep11.Grep11Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grep11.Grep11Error)
    MergeFrom(*source);
  }
}

void Grep11Error::MergeFrom(const Grep11Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grep11.Grep11Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.detail().size() > 0) {

    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.retry() != 0) {
    set_retry(from.retry());
  }
}

void Grep11Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grep11.Grep11Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Grep11Error::CopyFrom(const Grep11Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grep11.Grep11Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grep11Error::IsInitialized() const {
  return true;
}

void Grep11Error::Swap(Grep11Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Grep11Error::InternalSwap(Grep11Error* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  detail_.Swap(&other->detail_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(retry_, other->retry_);
}

::google::protobuf::Metadata Grep11Error::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_server_2eproto);
  return ::file_level_metadata_server_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grep11
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::grep11::GenerateRandomRequest* Arena::CreateMaybeMessage< ::grep11::GenerateRandomRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateRandomRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GenerateRandomResponse* Arena::CreateMaybeMessage< ::grep11::GenerateRandomResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateRandomResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestInitRequest* Arena::CreateMaybeMessage< ::grep11::DigestInitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestInitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestInitResponse* Arena::CreateMaybeMessage< ::grep11::DigestInitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestInitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestRequest* Arena::CreateMaybeMessage< ::grep11::DigestRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestResponse* Arena::CreateMaybeMessage< ::grep11::DigestResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestUpdateRequest* Arena::CreateMaybeMessage< ::grep11::DigestUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestUpdateResponse* Arena::CreateMaybeMessage< ::grep11::DigestUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestKeyRequest* Arena::CreateMaybeMessage< ::grep11::DigestKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestKeyResponse* Arena::CreateMaybeMessage< ::grep11::DigestKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestFinalRequest* Arena::CreateMaybeMessage< ::grep11::DigestFinalRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestFinalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestFinalResponse* Arena::CreateMaybeMessage< ::grep11::DigestFinalResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestFinalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestSingleRequest* Arena::CreateMaybeMessage< ::grep11::DigestSingleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestSingleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DigestSingleResponse* Arena::CreateMaybeMessage< ::grep11::DigestSingleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DigestSingleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptInitRequest* Arena::CreateMaybeMessage< ::grep11::EncryptInitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptInitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptInitResponse* Arena::CreateMaybeMessage< ::grep11::EncryptInitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptInitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptInitRequest* Arena::CreateMaybeMessage< ::grep11::DecryptInitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptInitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptInitResponse* Arena::CreateMaybeMessage< ::grep11::DecryptInitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptInitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptUpdateRequest* Arena::CreateMaybeMessage< ::grep11::EncryptUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptUpdateResponse* Arena::CreateMaybeMessage< ::grep11::EncryptUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptUpdateRequest* Arena::CreateMaybeMessage< ::grep11::DecryptUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptUpdateResponse* Arena::CreateMaybeMessage< ::grep11::DecryptUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptRequest* Arena::CreateMaybeMessage< ::grep11::EncryptRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptResponse* Arena::CreateMaybeMessage< ::grep11::EncryptResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptRequest* Arena::CreateMaybeMessage< ::grep11::DecryptRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptResponse* Arena::CreateMaybeMessage< ::grep11::DecryptResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptFinalRequest* Arena::CreateMaybeMessage< ::grep11::EncryptFinalRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptFinalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptFinalResponse* Arena::CreateMaybeMessage< ::grep11::EncryptFinalResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptFinalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptFinalRequest* Arena::CreateMaybeMessage< ::grep11::DecryptFinalRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptFinalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptFinalResponse* Arena::CreateMaybeMessage< ::grep11::DecryptFinalResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptFinalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptSingleRequest* Arena::CreateMaybeMessage< ::grep11::EncryptSingleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptSingleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::EncryptSingleResponse* Arena::CreateMaybeMessage< ::grep11::EncryptSingleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::EncryptSingleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptSingleRequest* Arena::CreateMaybeMessage< ::grep11::DecryptSingleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptSingleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DecryptSingleResponse* Arena::CreateMaybeMessage< ::grep11::DecryptSingleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DecryptSingleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignInitRequest* Arena::CreateMaybeMessage< ::grep11::SignInitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignInitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignInitResponse* Arena::CreateMaybeMessage< ::grep11::SignInitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignInitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifyInitRequest* Arena::CreateMaybeMessage< ::grep11::VerifyInitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifyInitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifyInitResponse* Arena::CreateMaybeMessage< ::grep11::VerifyInitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifyInitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignUpdateRequest* Arena::CreateMaybeMessage< ::grep11::SignUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignUpdateResponse* Arena::CreateMaybeMessage< ::grep11::SignUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifyUpdateRequest* Arena::CreateMaybeMessage< ::grep11::VerifyUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifyUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifyUpdateResponse* Arena::CreateMaybeMessage< ::grep11::VerifyUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifyUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignFinalRequest* Arena::CreateMaybeMessage< ::grep11::SignFinalRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignFinalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignFinalResponse* Arena::CreateMaybeMessage< ::grep11::SignFinalResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignFinalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifyFinalRequest* Arena::CreateMaybeMessage< ::grep11::VerifyFinalRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifyFinalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifyFinalResponse* Arena::CreateMaybeMessage< ::grep11::VerifyFinalResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifyFinalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignRequest* Arena::CreateMaybeMessage< ::grep11::SignRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignResponse* Arena::CreateMaybeMessage< ::grep11::SignResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifyRequest* Arena::CreateMaybeMessage< ::grep11::VerifyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifyResponse* Arena::CreateMaybeMessage< ::grep11::VerifyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignSingleRequest* Arena::CreateMaybeMessage< ::grep11::SignSingleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignSingleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SignSingleResponse* Arena::CreateMaybeMessage< ::grep11::SignSingleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SignSingleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifySingleRequest* Arena::CreateMaybeMessage< ::grep11::VerifySingleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifySingleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::VerifySingleResponse* Arena::CreateMaybeMessage< ::grep11::VerifySingleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::VerifySingleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse* Arena::CreateMaybeMessage< ::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GenerateKeyRequest* Arena::CreateMaybeMessage< ::grep11::GenerateKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GenerateKeyResponse* Arena::CreateMaybeMessage< ::grep11::GenerateKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse* Arena::CreateMaybeMessage< ::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse* Arena::CreateMaybeMessage< ::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GenerateKeyPairRequest* Arena::CreateMaybeMessage< ::grep11::GenerateKeyPairRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateKeyPairRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GenerateKeyPairResponse* Arena::CreateMaybeMessage< ::grep11::GenerateKeyPairResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GenerateKeyPairResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::WrapKeyRequest* Arena::CreateMaybeMessage< ::grep11::WrapKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::WrapKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::WrapKeyResponse* Arena::CreateMaybeMessage< ::grep11::WrapKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::WrapKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse* Arena::CreateMaybeMessage< ::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::UnwrapKeyRequest* Arena::CreateMaybeMessage< ::grep11::UnwrapKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::UnwrapKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::UnwrapKeyResponse* Arena::CreateMaybeMessage< ::grep11::UnwrapKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::UnwrapKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse* Arena::CreateMaybeMessage< ::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DeriveKeyRequest* Arena::CreateMaybeMessage< ::grep11::DeriveKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DeriveKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::DeriveKeyResponse* Arena::CreateMaybeMessage< ::grep11::DeriveKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::DeriveKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GetMechanismListRequest* Arena::CreateMaybeMessage< ::grep11::GetMechanismListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GetMechanismListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GetMechanismListResponse* Arena::CreateMaybeMessage< ::grep11::GetMechanismListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GetMechanismListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GetMechanismInfoRequest* Arena::CreateMaybeMessage< ::grep11::GetMechanismInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GetMechanismInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GetMechanismInfoResponse* Arena::CreateMaybeMessage< ::grep11::GetMechanismInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GetMechanismInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GetAttributeValueRequest* Arena::CreateMaybeMessage< ::grep11::GetAttributeValueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GetAttributeValueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::GetAttributeValueResponse* Arena::CreateMaybeMessage< ::grep11::GetAttributeValueResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::GetAttributeValueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SetAttributeValueRequest* Arena::CreateMaybeMessage< ::grep11::SetAttributeValueRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SetAttributeValueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::SetAttributeValueResponse* Arena::CreateMaybeMessage< ::grep11::SetAttributeValueResponse >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::SetAttributeValueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::Mechanism* Arena::CreateMaybeMessage< ::grep11::Mechanism >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::Mechanism >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::MechanismInfo* Arena::CreateMaybeMessage< ::grep11::MechanismInfo >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::MechanismInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::grep11::Grep11Error* Arena::CreateMaybeMessage< ::grep11::Grep11Error >(Arena* arena) {
  return Arena::CreateInternal< ::grep11::Grep11Error >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
