// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_INCLUDED_server_2eproto
#define PROTOBUF_INCLUDED_server_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "gogo.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_server_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_server_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[83]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_server_2eproto();
namespace grep11 {
class DecryptFinalRequest;
class DecryptFinalRequestDefaultTypeInternal;
extern DecryptFinalRequestDefaultTypeInternal _DecryptFinalRequest_default_instance_;
class DecryptFinalResponse;
class DecryptFinalResponseDefaultTypeInternal;
extern DecryptFinalResponseDefaultTypeInternal _DecryptFinalResponse_default_instance_;
class DecryptInitRequest;
class DecryptInitRequestDefaultTypeInternal;
extern DecryptInitRequestDefaultTypeInternal _DecryptInitRequest_default_instance_;
class DecryptInitResponse;
class DecryptInitResponseDefaultTypeInternal;
extern DecryptInitResponseDefaultTypeInternal _DecryptInitResponse_default_instance_;
class DecryptRequest;
class DecryptRequestDefaultTypeInternal;
extern DecryptRequestDefaultTypeInternal _DecryptRequest_default_instance_;
class DecryptResponse;
class DecryptResponseDefaultTypeInternal;
extern DecryptResponseDefaultTypeInternal _DecryptResponse_default_instance_;
class DecryptSingleRequest;
class DecryptSingleRequestDefaultTypeInternal;
extern DecryptSingleRequestDefaultTypeInternal _DecryptSingleRequest_default_instance_;
class DecryptSingleResponse;
class DecryptSingleResponseDefaultTypeInternal;
extern DecryptSingleResponseDefaultTypeInternal _DecryptSingleResponse_default_instance_;
class DecryptUpdateRequest;
class DecryptUpdateRequestDefaultTypeInternal;
extern DecryptUpdateRequestDefaultTypeInternal _DecryptUpdateRequest_default_instance_;
class DecryptUpdateResponse;
class DecryptUpdateResponseDefaultTypeInternal;
extern DecryptUpdateResponseDefaultTypeInternal _DecryptUpdateResponse_default_instance_;
class DeriveKeyRequest;
class DeriveKeyRequestDefaultTypeInternal;
extern DeriveKeyRequestDefaultTypeInternal _DeriveKeyRequest_default_instance_;
class DeriveKeyRequest_TemplateEntry_DoNotUse;
class DeriveKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal;
extern DeriveKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal _DeriveKeyRequest_TemplateEntry_DoNotUse_default_instance_;
class DeriveKeyResponse;
class DeriveKeyResponseDefaultTypeInternal;
extern DeriveKeyResponseDefaultTypeInternal _DeriveKeyResponse_default_instance_;
class DigestFinalRequest;
class DigestFinalRequestDefaultTypeInternal;
extern DigestFinalRequestDefaultTypeInternal _DigestFinalRequest_default_instance_;
class DigestFinalResponse;
class DigestFinalResponseDefaultTypeInternal;
extern DigestFinalResponseDefaultTypeInternal _DigestFinalResponse_default_instance_;
class DigestInitRequest;
class DigestInitRequestDefaultTypeInternal;
extern DigestInitRequestDefaultTypeInternal _DigestInitRequest_default_instance_;
class DigestInitResponse;
class DigestInitResponseDefaultTypeInternal;
extern DigestInitResponseDefaultTypeInternal _DigestInitResponse_default_instance_;
class DigestKeyRequest;
class DigestKeyRequestDefaultTypeInternal;
extern DigestKeyRequestDefaultTypeInternal _DigestKeyRequest_default_instance_;
class DigestKeyResponse;
class DigestKeyResponseDefaultTypeInternal;
extern DigestKeyResponseDefaultTypeInternal _DigestKeyResponse_default_instance_;
class DigestRequest;
class DigestRequestDefaultTypeInternal;
extern DigestRequestDefaultTypeInternal _DigestRequest_default_instance_;
class DigestResponse;
class DigestResponseDefaultTypeInternal;
extern DigestResponseDefaultTypeInternal _DigestResponse_default_instance_;
class DigestSingleRequest;
class DigestSingleRequestDefaultTypeInternal;
extern DigestSingleRequestDefaultTypeInternal _DigestSingleRequest_default_instance_;
class DigestSingleResponse;
class DigestSingleResponseDefaultTypeInternal;
extern DigestSingleResponseDefaultTypeInternal _DigestSingleResponse_default_instance_;
class DigestUpdateRequest;
class DigestUpdateRequestDefaultTypeInternal;
extern DigestUpdateRequestDefaultTypeInternal _DigestUpdateRequest_default_instance_;
class DigestUpdateResponse;
class DigestUpdateResponseDefaultTypeInternal;
extern DigestUpdateResponseDefaultTypeInternal _DigestUpdateResponse_default_instance_;
class EncryptFinalRequest;
class EncryptFinalRequestDefaultTypeInternal;
extern EncryptFinalRequestDefaultTypeInternal _EncryptFinalRequest_default_instance_;
class EncryptFinalResponse;
class EncryptFinalResponseDefaultTypeInternal;
extern EncryptFinalResponseDefaultTypeInternal _EncryptFinalResponse_default_instance_;
class EncryptInitRequest;
class EncryptInitRequestDefaultTypeInternal;
extern EncryptInitRequestDefaultTypeInternal _EncryptInitRequest_default_instance_;
class EncryptInitResponse;
class EncryptInitResponseDefaultTypeInternal;
extern EncryptInitResponseDefaultTypeInternal _EncryptInitResponse_default_instance_;
class EncryptRequest;
class EncryptRequestDefaultTypeInternal;
extern EncryptRequestDefaultTypeInternal _EncryptRequest_default_instance_;
class EncryptResponse;
class EncryptResponseDefaultTypeInternal;
extern EncryptResponseDefaultTypeInternal _EncryptResponse_default_instance_;
class EncryptSingleRequest;
class EncryptSingleRequestDefaultTypeInternal;
extern EncryptSingleRequestDefaultTypeInternal _EncryptSingleRequest_default_instance_;
class EncryptSingleResponse;
class EncryptSingleResponseDefaultTypeInternal;
extern EncryptSingleResponseDefaultTypeInternal _EncryptSingleResponse_default_instance_;
class EncryptUpdateRequest;
class EncryptUpdateRequestDefaultTypeInternal;
extern EncryptUpdateRequestDefaultTypeInternal _EncryptUpdateRequest_default_instance_;
class EncryptUpdateResponse;
class EncryptUpdateResponseDefaultTypeInternal;
extern EncryptUpdateResponseDefaultTypeInternal _EncryptUpdateResponse_default_instance_;
class GenerateKeyPairRequest;
class GenerateKeyPairRequestDefaultTypeInternal;
extern GenerateKeyPairRequestDefaultTypeInternal _GenerateKeyPairRequest_default_instance_;
class GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse;
class GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUseDefaultTypeInternal;
extern GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUseDefaultTypeInternal _GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_default_instance_;
class GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse;
class GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUseDefaultTypeInternal;
extern GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUseDefaultTypeInternal _GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_default_instance_;
class GenerateKeyPairResponse;
class GenerateKeyPairResponseDefaultTypeInternal;
extern GenerateKeyPairResponseDefaultTypeInternal _GenerateKeyPairResponse_default_instance_;
class GenerateKeyRequest;
class GenerateKeyRequestDefaultTypeInternal;
extern GenerateKeyRequestDefaultTypeInternal _GenerateKeyRequest_default_instance_;
class GenerateKeyRequest_TemplateEntry_DoNotUse;
class GenerateKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal;
extern GenerateKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal _GenerateKeyRequest_TemplateEntry_DoNotUse_default_instance_;
class GenerateKeyResponse;
class GenerateKeyResponseDefaultTypeInternal;
extern GenerateKeyResponseDefaultTypeInternal _GenerateKeyResponse_default_instance_;
class GenerateRandomRequest;
class GenerateRandomRequestDefaultTypeInternal;
extern GenerateRandomRequestDefaultTypeInternal _GenerateRandomRequest_default_instance_;
class GenerateRandomResponse;
class GenerateRandomResponseDefaultTypeInternal;
extern GenerateRandomResponseDefaultTypeInternal _GenerateRandomResponse_default_instance_;
class GetAttributeValueRequest;
class GetAttributeValueRequestDefaultTypeInternal;
extern GetAttributeValueRequestDefaultTypeInternal _GetAttributeValueRequest_default_instance_;
class GetAttributeValueRequest_AttributesEntry_DoNotUse;
class GetAttributeValueRequest_AttributesEntry_DoNotUseDefaultTypeInternal;
extern GetAttributeValueRequest_AttributesEntry_DoNotUseDefaultTypeInternal _GetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_;
class GetAttributeValueResponse;
class GetAttributeValueResponseDefaultTypeInternal;
extern GetAttributeValueResponseDefaultTypeInternal _GetAttributeValueResponse_default_instance_;
class GetAttributeValueResponse_AttributesEntry_DoNotUse;
class GetAttributeValueResponse_AttributesEntry_DoNotUseDefaultTypeInternal;
extern GetAttributeValueResponse_AttributesEntry_DoNotUseDefaultTypeInternal _GetAttributeValueResponse_AttributesEntry_DoNotUse_default_instance_;
class GetMechanismInfoRequest;
class GetMechanismInfoRequestDefaultTypeInternal;
extern GetMechanismInfoRequestDefaultTypeInternal _GetMechanismInfoRequest_default_instance_;
class GetMechanismInfoResponse;
class GetMechanismInfoResponseDefaultTypeInternal;
extern GetMechanismInfoResponseDefaultTypeInternal _GetMechanismInfoResponse_default_instance_;
class GetMechanismListRequest;
class GetMechanismListRequestDefaultTypeInternal;
extern GetMechanismListRequestDefaultTypeInternal _GetMechanismListRequest_default_instance_;
class GetMechanismListResponse;
class GetMechanismListResponseDefaultTypeInternal;
extern GetMechanismListResponseDefaultTypeInternal _GetMechanismListResponse_default_instance_;
class Grep11Error;
class Grep11ErrorDefaultTypeInternal;
extern Grep11ErrorDefaultTypeInternal _Grep11Error_default_instance_;
class Mechanism;
class MechanismDefaultTypeInternal;
extern MechanismDefaultTypeInternal _Mechanism_default_instance_;
class MechanismInfo;
class MechanismInfoDefaultTypeInternal;
extern MechanismInfoDefaultTypeInternal _MechanismInfo_default_instance_;
class SetAttributeValueRequest;
class SetAttributeValueRequestDefaultTypeInternal;
extern SetAttributeValueRequestDefaultTypeInternal _SetAttributeValueRequest_default_instance_;
class SetAttributeValueRequest_AttributesEntry_DoNotUse;
class SetAttributeValueRequest_AttributesEntry_DoNotUseDefaultTypeInternal;
extern SetAttributeValueRequest_AttributesEntry_DoNotUseDefaultTypeInternal _SetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_;
class SetAttributeValueResponse;
class SetAttributeValueResponseDefaultTypeInternal;
extern SetAttributeValueResponseDefaultTypeInternal _SetAttributeValueResponse_default_instance_;
class SignFinalRequest;
class SignFinalRequestDefaultTypeInternal;
extern SignFinalRequestDefaultTypeInternal _SignFinalRequest_default_instance_;
class SignFinalResponse;
class SignFinalResponseDefaultTypeInternal;
extern SignFinalResponseDefaultTypeInternal _SignFinalResponse_default_instance_;
class SignInitRequest;
class SignInitRequestDefaultTypeInternal;
extern SignInitRequestDefaultTypeInternal _SignInitRequest_default_instance_;
class SignInitResponse;
class SignInitResponseDefaultTypeInternal;
extern SignInitResponseDefaultTypeInternal _SignInitResponse_default_instance_;
class SignRequest;
class SignRequestDefaultTypeInternal;
extern SignRequestDefaultTypeInternal _SignRequest_default_instance_;
class SignResponse;
class SignResponseDefaultTypeInternal;
extern SignResponseDefaultTypeInternal _SignResponse_default_instance_;
class SignSingleRequest;
class SignSingleRequestDefaultTypeInternal;
extern SignSingleRequestDefaultTypeInternal _SignSingleRequest_default_instance_;
class SignSingleResponse;
class SignSingleResponseDefaultTypeInternal;
extern SignSingleResponseDefaultTypeInternal _SignSingleResponse_default_instance_;
class SignUpdateRequest;
class SignUpdateRequestDefaultTypeInternal;
extern SignUpdateRequestDefaultTypeInternal _SignUpdateRequest_default_instance_;
class SignUpdateResponse;
class SignUpdateResponseDefaultTypeInternal;
extern SignUpdateResponseDefaultTypeInternal _SignUpdateResponse_default_instance_;
class UnwrapKeyRequest;
class UnwrapKeyRequestDefaultTypeInternal;
extern UnwrapKeyRequestDefaultTypeInternal _UnwrapKeyRequest_default_instance_;
class UnwrapKeyRequest_TemplateEntry_DoNotUse;
class UnwrapKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal;
extern UnwrapKeyRequest_TemplateEntry_DoNotUseDefaultTypeInternal _UnwrapKeyRequest_TemplateEntry_DoNotUse_default_instance_;
class UnwrapKeyResponse;
class UnwrapKeyResponseDefaultTypeInternal;
extern UnwrapKeyResponseDefaultTypeInternal _UnwrapKeyResponse_default_instance_;
class VerifyFinalRequest;
class VerifyFinalRequestDefaultTypeInternal;
extern VerifyFinalRequestDefaultTypeInternal _VerifyFinalRequest_default_instance_;
class VerifyFinalResponse;
class VerifyFinalResponseDefaultTypeInternal;
extern VerifyFinalResponseDefaultTypeInternal _VerifyFinalResponse_default_instance_;
class VerifyInitRequest;
class VerifyInitRequestDefaultTypeInternal;
extern VerifyInitRequestDefaultTypeInternal _VerifyInitRequest_default_instance_;
class VerifyInitResponse;
class VerifyInitResponseDefaultTypeInternal;
extern VerifyInitResponseDefaultTypeInternal _VerifyInitResponse_default_instance_;
class VerifyRequest;
class VerifyRequestDefaultTypeInternal;
extern VerifyRequestDefaultTypeInternal _VerifyRequest_default_instance_;
class VerifyResponse;
class VerifyResponseDefaultTypeInternal;
extern VerifyResponseDefaultTypeInternal _VerifyResponse_default_instance_;
class VerifySingleRequest;
class VerifySingleRequestDefaultTypeInternal;
extern VerifySingleRequestDefaultTypeInternal _VerifySingleRequest_default_instance_;
class VerifySingleResponse;
class VerifySingleResponseDefaultTypeInternal;
extern VerifySingleResponseDefaultTypeInternal _VerifySingleResponse_default_instance_;
class VerifyUpdateRequest;
class VerifyUpdateRequestDefaultTypeInternal;
extern VerifyUpdateRequestDefaultTypeInternal _VerifyUpdateRequest_default_instance_;
class VerifyUpdateResponse;
class VerifyUpdateResponseDefaultTypeInternal;
extern VerifyUpdateResponseDefaultTypeInternal _VerifyUpdateResponse_default_instance_;
class WrapKeyRequest;
class WrapKeyRequestDefaultTypeInternal;
extern WrapKeyRequestDefaultTypeInternal _WrapKeyRequest_default_instance_;
class WrapKeyResponse;
class WrapKeyResponseDefaultTypeInternal;
extern WrapKeyResponseDefaultTypeInternal _WrapKeyResponse_default_instance_;
}  // namespace grep11
namespace google {
namespace protobuf {
template<> ::grep11::DecryptFinalRequest* Arena::CreateMaybeMessage<::grep11::DecryptFinalRequest>(Arena*);
template<> ::grep11::DecryptFinalResponse* Arena::CreateMaybeMessage<::grep11::DecryptFinalResponse>(Arena*);
template<> ::grep11::DecryptInitRequest* Arena::CreateMaybeMessage<::grep11::DecryptInitRequest>(Arena*);
template<> ::grep11::DecryptInitResponse* Arena::CreateMaybeMessage<::grep11::DecryptInitResponse>(Arena*);
template<> ::grep11::DecryptRequest* Arena::CreateMaybeMessage<::grep11::DecryptRequest>(Arena*);
template<> ::grep11::DecryptResponse* Arena::CreateMaybeMessage<::grep11::DecryptResponse>(Arena*);
template<> ::grep11::DecryptSingleRequest* Arena::CreateMaybeMessage<::grep11::DecryptSingleRequest>(Arena*);
template<> ::grep11::DecryptSingleResponse* Arena::CreateMaybeMessage<::grep11::DecryptSingleResponse>(Arena*);
template<> ::grep11::DecryptUpdateRequest* Arena::CreateMaybeMessage<::grep11::DecryptUpdateRequest>(Arena*);
template<> ::grep11::DecryptUpdateResponse* Arena::CreateMaybeMessage<::grep11::DecryptUpdateResponse>(Arena*);
template<> ::grep11::DeriveKeyRequest* Arena::CreateMaybeMessage<::grep11::DeriveKeyRequest>(Arena*);
template<> ::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse* Arena::CreateMaybeMessage<::grep11::DeriveKeyRequest_TemplateEntry_DoNotUse>(Arena*);
template<> ::grep11::DeriveKeyResponse* Arena::CreateMaybeMessage<::grep11::DeriveKeyResponse>(Arena*);
template<> ::grep11::DigestFinalRequest* Arena::CreateMaybeMessage<::grep11::DigestFinalRequest>(Arena*);
template<> ::grep11::DigestFinalResponse* Arena::CreateMaybeMessage<::grep11::DigestFinalResponse>(Arena*);
template<> ::grep11::DigestInitRequest* Arena::CreateMaybeMessage<::grep11::DigestInitRequest>(Arena*);
template<> ::grep11::DigestInitResponse* Arena::CreateMaybeMessage<::grep11::DigestInitResponse>(Arena*);
template<> ::grep11::DigestKeyRequest* Arena::CreateMaybeMessage<::grep11::DigestKeyRequest>(Arena*);
template<> ::grep11::DigestKeyResponse* Arena::CreateMaybeMessage<::grep11::DigestKeyResponse>(Arena*);
template<> ::grep11::DigestRequest* Arena::CreateMaybeMessage<::grep11::DigestRequest>(Arena*);
template<> ::grep11::DigestResponse* Arena::CreateMaybeMessage<::grep11::DigestResponse>(Arena*);
template<> ::grep11::DigestSingleRequest* Arena::CreateMaybeMessage<::grep11::DigestSingleRequest>(Arena*);
template<> ::grep11::DigestSingleResponse* Arena::CreateMaybeMessage<::grep11::DigestSingleResponse>(Arena*);
template<> ::grep11::DigestUpdateRequest* Arena::CreateMaybeMessage<::grep11::DigestUpdateRequest>(Arena*);
template<> ::grep11::DigestUpdateResponse* Arena::CreateMaybeMessage<::grep11::DigestUpdateResponse>(Arena*);
template<> ::grep11::EncryptFinalRequest* Arena::CreateMaybeMessage<::grep11::EncryptFinalRequest>(Arena*);
template<> ::grep11::EncryptFinalResponse* Arena::CreateMaybeMessage<::grep11::EncryptFinalResponse>(Arena*);
template<> ::grep11::EncryptInitRequest* Arena::CreateMaybeMessage<::grep11::EncryptInitRequest>(Arena*);
template<> ::grep11::EncryptInitResponse* Arena::CreateMaybeMessage<::grep11::EncryptInitResponse>(Arena*);
template<> ::grep11::EncryptRequest* Arena::CreateMaybeMessage<::grep11::EncryptRequest>(Arena*);
template<> ::grep11::EncryptResponse* Arena::CreateMaybeMessage<::grep11::EncryptResponse>(Arena*);
template<> ::grep11::EncryptSingleRequest* Arena::CreateMaybeMessage<::grep11::EncryptSingleRequest>(Arena*);
template<> ::grep11::EncryptSingleResponse* Arena::CreateMaybeMessage<::grep11::EncryptSingleResponse>(Arena*);
template<> ::grep11::EncryptUpdateRequest* Arena::CreateMaybeMessage<::grep11::EncryptUpdateRequest>(Arena*);
template<> ::grep11::EncryptUpdateResponse* Arena::CreateMaybeMessage<::grep11::EncryptUpdateResponse>(Arena*);
template<> ::grep11::GenerateKeyPairRequest* Arena::CreateMaybeMessage<::grep11::GenerateKeyPairRequest>(Arena*);
template<> ::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse* Arena::CreateMaybeMessage<::grep11::GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse>(Arena*);
template<> ::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse* Arena::CreateMaybeMessage<::grep11::GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse>(Arena*);
template<> ::grep11::GenerateKeyPairResponse* Arena::CreateMaybeMessage<::grep11::GenerateKeyPairResponse>(Arena*);
template<> ::grep11::GenerateKeyRequest* Arena::CreateMaybeMessage<::grep11::GenerateKeyRequest>(Arena*);
template<> ::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse* Arena::CreateMaybeMessage<::grep11::GenerateKeyRequest_TemplateEntry_DoNotUse>(Arena*);
template<> ::grep11::GenerateKeyResponse* Arena::CreateMaybeMessage<::grep11::GenerateKeyResponse>(Arena*);
template<> ::grep11::GenerateRandomRequest* Arena::CreateMaybeMessage<::grep11::GenerateRandomRequest>(Arena*);
template<> ::grep11::GenerateRandomResponse* Arena::CreateMaybeMessage<::grep11::GenerateRandomResponse>(Arena*);
template<> ::grep11::GetAttributeValueRequest* Arena::CreateMaybeMessage<::grep11::GetAttributeValueRequest>(Arena*);
template<> ::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage<::grep11::GetAttributeValueRequest_AttributesEntry_DoNotUse>(Arena*);
template<> ::grep11::GetAttributeValueResponse* Arena::CreateMaybeMessage<::grep11::GetAttributeValueResponse>(Arena*);
template<> ::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage<::grep11::GetAttributeValueResponse_AttributesEntry_DoNotUse>(Arena*);
template<> ::grep11::GetMechanismInfoRequest* Arena::CreateMaybeMessage<::grep11::GetMechanismInfoRequest>(Arena*);
template<> ::grep11::GetMechanismInfoResponse* Arena::CreateMaybeMessage<::grep11::GetMechanismInfoResponse>(Arena*);
template<> ::grep11::GetMechanismListRequest* Arena::CreateMaybeMessage<::grep11::GetMechanismListRequest>(Arena*);
template<> ::grep11::GetMechanismListResponse* Arena::CreateMaybeMessage<::grep11::GetMechanismListResponse>(Arena*);
template<> ::grep11::Grep11Error* Arena::CreateMaybeMessage<::grep11::Grep11Error>(Arena*);
template<> ::grep11::Mechanism* Arena::CreateMaybeMessage<::grep11::Mechanism>(Arena*);
template<> ::grep11::MechanismInfo* Arena::CreateMaybeMessage<::grep11::MechanismInfo>(Arena*);
template<> ::grep11::SetAttributeValueRequest* Arena::CreateMaybeMessage<::grep11::SetAttributeValueRequest>(Arena*);
template<> ::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage<::grep11::SetAttributeValueRequest_AttributesEntry_DoNotUse>(Arena*);
template<> ::grep11::SetAttributeValueResponse* Arena::CreateMaybeMessage<::grep11::SetAttributeValueResponse>(Arena*);
template<> ::grep11::SignFinalRequest* Arena::CreateMaybeMessage<::grep11::SignFinalRequest>(Arena*);
template<> ::grep11::SignFinalResponse* Arena::CreateMaybeMessage<::grep11::SignFinalResponse>(Arena*);
template<> ::grep11::SignInitRequest* Arena::CreateMaybeMessage<::grep11::SignInitRequest>(Arena*);
template<> ::grep11::SignInitResponse* Arena::CreateMaybeMessage<::grep11::SignInitResponse>(Arena*);
template<> ::grep11::SignRequest* Arena::CreateMaybeMessage<::grep11::SignRequest>(Arena*);
template<> ::grep11::SignResponse* Arena::CreateMaybeMessage<::grep11::SignResponse>(Arena*);
template<> ::grep11::SignSingleRequest* Arena::CreateMaybeMessage<::grep11::SignSingleRequest>(Arena*);
template<> ::grep11::SignSingleResponse* Arena::CreateMaybeMessage<::grep11::SignSingleResponse>(Arena*);
template<> ::grep11::SignUpdateRequest* Arena::CreateMaybeMessage<::grep11::SignUpdateRequest>(Arena*);
template<> ::grep11::SignUpdateResponse* Arena::CreateMaybeMessage<::grep11::SignUpdateResponse>(Arena*);
template<> ::grep11::UnwrapKeyRequest* Arena::CreateMaybeMessage<::grep11::UnwrapKeyRequest>(Arena*);
template<> ::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse* Arena::CreateMaybeMessage<::grep11::UnwrapKeyRequest_TemplateEntry_DoNotUse>(Arena*);
template<> ::grep11::UnwrapKeyResponse* Arena::CreateMaybeMessage<::grep11::UnwrapKeyResponse>(Arena*);
template<> ::grep11::VerifyFinalRequest* Arena::CreateMaybeMessage<::grep11::VerifyFinalRequest>(Arena*);
template<> ::grep11::VerifyFinalResponse* Arena::CreateMaybeMessage<::grep11::VerifyFinalResponse>(Arena*);
template<> ::grep11::VerifyInitRequest* Arena::CreateMaybeMessage<::grep11::VerifyInitRequest>(Arena*);
template<> ::grep11::VerifyInitResponse* Arena::CreateMaybeMessage<::grep11::VerifyInitResponse>(Arena*);
template<> ::grep11::VerifyRequest* Arena::CreateMaybeMessage<::grep11::VerifyRequest>(Arena*);
template<> ::grep11::VerifyResponse* Arena::CreateMaybeMessage<::grep11::VerifyResponse>(Arena*);
template<> ::grep11::VerifySingleRequest* Arena::CreateMaybeMessage<::grep11::VerifySingleRequest>(Arena*);
template<> ::grep11::VerifySingleResponse* Arena::CreateMaybeMessage<::grep11::VerifySingleResponse>(Arena*);
template<> ::grep11::VerifyUpdateRequest* Arena::CreateMaybeMessage<::grep11::VerifyUpdateRequest>(Arena*);
template<> ::grep11::VerifyUpdateResponse* Arena::CreateMaybeMessage<::grep11::VerifyUpdateResponse>(Arena*);
template<> ::grep11::WrapKeyRequest* Arena::CreateMaybeMessage<::grep11::WrapKeyRequest>(Arena*);
template<> ::grep11::WrapKeyResponse* Arena::CreateMaybeMessage<::grep11::WrapKeyResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace grep11 {

// ===================================================================

class GenerateRandomRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GenerateRandomRequest) */ {
 public:
  GenerateRandomRequest();
  virtual ~GenerateRandomRequest();

  GenerateRandomRequest(const GenerateRandomRequest& from);

  inline GenerateRandomRequest& operator=(const GenerateRandomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateRandomRequest(GenerateRandomRequest&& from) noexcept
    : GenerateRandomRequest() {
    *this = ::std::move(from);
  }

  inline GenerateRandomRequest& operator=(GenerateRandomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GenerateRandomRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateRandomRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateRandomRequest*>(
               &_GenerateRandomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GenerateRandomRequest* other);
  friend void swap(GenerateRandomRequest& a, GenerateRandomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateRandomRequest* New() const final {
    return CreateMaybeMessage<GenerateRandomRequest>(nullptr);
  }

  GenerateRandomRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateRandomRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateRandomRequest& from);
  void MergeFrom(const GenerateRandomRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateRandomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 Len = 1;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::uint64 len() const;
  void set_len(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grep11.GenerateRandomRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 len_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GenerateRandomResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GenerateRandomResponse) */ {
 public:
  GenerateRandomResponse();
  virtual ~GenerateRandomResponse();

  GenerateRandomResponse(const GenerateRandomResponse& from);

  inline GenerateRandomResponse& operator=(const GenerateRandomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateRandomResponse(GenerateRandomResponse&& from) noexcept
    : GenerateRandomResponse() {
    *this = ::std::move(from);
  }

  inline GenerateRandomResponse& operator=(GenerateRandomResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GenerateRandomResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateRandomResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateRandomResponse*>(
               &_GenerateRandomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GenerateRandomResponse* other);
  friend void swap(GenerateRandomResponse& a, GenerateRandomResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateRandomResponse* New() const final {
    return CreateMaybeMessage<GenerateRandomResponse>(nullptr);
  }

  GenerateRandomResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateRandomResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateRandomResponse& from);
  void MergeFrom(const GenerateRandomResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateRandomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Rnd = 1;
  void clear_rnd();
  static const int kRndFieldNumber = 1;
  const ::std::string& rnd() const;
  void set_rnd(const ::std::string& value);
  #if LANG_CXX11
  void set_rnd(::std::string&& value);
  #endif
  void set_rnd(const char* value);
  void set_rnd(const void* value, size_t size);
  ::std::string* mutable_rnd();
  ::std::string* release_rnd();
  void set_allocated_rnd(::std::string* rnd);

  // @@protoc_insertion_point(class_scope:grep11.GenerateRandomResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rnd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestInitRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestInitRequest) */ {
 public:
  DigestInitRequest();
  virtual ~DigestInitRequest();

  DigestInitRequest(const DigestInitRequest& from);

  inline DigestInitRequest& operator=(const DigestInitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestInitRequest(DigestInitRequest&& from) noexcept
    : DigestInitRequest() {
    *this = ::std::move(from);
  }

  inline DigestInitRequest& operator=(DigestInitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestInitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestInitRequest* internal_default_instance() {
    return reinterpret_cast<const DigestInitRequest*>(
               &_DigestInitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DigestInitRequest* other);
  friend void swap(DigestInitRequest& a, DigestInitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestInitRequest* New() const final {
    return CreateMaybeMessage<DigestInitRequest>(nullptr);
  }

  DigestInitRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestInitRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestInitRequest& from);
  void MergeFrom(const DigestInitRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.DigestInitRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestInitResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestInitResponse) */ {
 public:
  DigestInitResponse();
  virtual ~DigestInitResponse();

  DigestInitResponse(const DigestInitResponse& from);

  inline DigestInitResponse& operator=(const DigestInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestInitResponse(DigestInitResponse&& from) noexcept
    : DigestInitResponse() {
    *this = ::std::move(from);
  }

  inline DigestInitResponse& operator=(DigestInitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestInitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestInitResponse* internal_default_instance() {
    return reinterpret_cast<const DigestInitResponse*>(
               &_DigestInitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DigestInitResponse* other);
  friend void swap(DigestInitResponse& a, DigestInitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestInitResponse* New() const final {
    return CreateMaybeMessage<DigestInitResponse>(nullptr);
  }

  DigestInitResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestInitResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestInitResponse& from);
  void MergeFrom(const DigestInitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.DigestInitResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestRequest) */ {
 public:
  DigestRequest();
  virtual ~DigestRequest();

  DigestRequest(const DigestRequest& from);

  inline DigestRequest& operator=(const DigestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestRequest(DigestRequest&& from) noexcept
    : DigestRequest() {
    *this = ::std::move(from);
  }

  inline DigestRequest& operator=(DigestRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestRequest* internal_default_instance() {
    return reinterpret_cast<const DigestRequest*>(
               &_DigestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DigestRequest* other);
  friend void swap(DigestRequest& a, DigestRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestRequest* New() const final {
    return CreateMaybeMessage<DigestRequest>(nullptr);
  }

  DigestRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestRequest& from);
  void MergeFrom(const DigestRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:grep11.DigestRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestResponse) */ {
 public:
  DigestResponse();
  virtual ~DigestResponse();

  DigestResponse(const DigestResponse& from);

  inline DigestResponse& operator=(const DigestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestResponse(DigestResponse&& from) noexcept
    : DigestResponse() {
    *this = ::std::move(from);
  }

  inline DigestResponse& operator=(DigestResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestResponse* internal_default_instance() {
    return reinterpret_cast<const DigestResponse*>(
               &_DigestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DigestResponse* other);
  friend void swap(DigestResponse& a, DigestResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestResponse* New() const final {
    return CreateMaybeMessage<DigestResponse>(nullptr);
  }

  DigestResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestResponse& from);
  void MergeFrom(const DigestResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Digest = 3;
  void clear_digest();
  static const int kDigestFieldNumber = 3;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // @@protoc_insertion_point(class_scope:grep11.DigestResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestUpdateRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestUpdateRequest) */ {
 public:
  DigestUpdateRequest();
  virtual ~DigestUpdateRequest();

  DigestUpdateRequest(const DigestUpdateRequest& from);

  inline DigestUpdateRequest& operator=(const DigestUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestUpdateRequest(DigestUpdateRequest&& from) noexcept
    : DigestUpdateRequest() {
    *this = ::std::move(from);
  }

  inline DigestUpdateRequest& operator=(DigestUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const DigestUpdateRequest*>(
               &_DigestUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(DigestUpdateRequest* other);
  friend void swap(DigestUpdateRequest& a, DigestUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestUpdateRequest* New() const final {
    return CreateMaybeMessage<DigestUpdateRequest>(nullptr);
  }

  DigestUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestUpdateRequest& from);
  void MergeFrom(const DigestUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:grep11.DigestUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestUpdateResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestUpdateResponse) */ {
 public:
  DigestUpdateResponse();
  virtual ~DigestUpdateResponse();

  DigestUpdateResponse(const DigestUpdateResponse& from);

  inline DigestUpdateResponse& operator=(const DigestUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestUpdateResponse(DigestUpdateResponse&& from) noexcept
    : DigestUpdateResponse() {
    *this = ::std::move(from);
  }

  inline DigestUpdateResponse& operator=(DigestUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const DigestUpdateResponse*>(
               &_DigestUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DigestUpdateResponse* other);
  friend void swap(DigestUpdateResponse& a, DigestUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestUpdateResponse* New() const final {
    return CreateMaybeMessage<DigestUpdateResponse>(nullptr);
  }

  DigestUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestUpdateResponse& from);
  void MergeFrom(const DigestUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.DigestUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestKeyRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestKeyRequest) */ {
 public:
  DigestKeyRequest();
  virtual ~DigestKeyRequest();

  DigestKeyRequest(const DigestKeyRequest& from);

  inline DigestKeyRequest& operator=(const DigestKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestKeyRequest(DigestKeyRequest&& from) noexcept
    : DigestKeyRequest() {
    *this = ::std::move(from);
  }

  inline DigestKeyRequest& operator=(DigestKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestKeyRequest* internal_default_instance() {
    return reinterpret_cast<const DigestKeyRequest*>(
               &_DigestKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(DigestKeyRequest* other);
  friend void swap(DigestKeyRequest& a, DigestKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestKeyRequest* New() const final {
    return CreateMaybeMessage<DigestKeyRequest>(nullptr);
  }

  DigestKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestKeyRequest& from);
  void MergeFrom(const DigestKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:grep11.DigestKeyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestKeyResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestKeyResponse) */ {
 public:
  DigestKeyResponse();
  virtual ~DigestKeyResponse();

  DigestKeyResponse(const DigestKeyResponse& from);

  inline DigestKeyResponse& operator=(const DigestKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestKeyResponse(DigestKeyResponse&& from) noexcept
    : DigestKeyResponse() {
    *this = ::std::move(from);
  }

  inline DigestKeyResponse& operator=(DigestKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestKeyResponse* internal_default_instance() {
    return reinterpret_cast<const DigestKeyResponse*>(
               &_DigestKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(DigestKeyResponse* other);
  friend void swap(DigestKeyResponse& a, DigestKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestKeyResponse* New() const final {
    return CreateMaybeMessage<DigestKeyResponse>(nullptr);
  }

  DigestKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestKeyResponse& from);
  void MergeFrom(const DigestKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.DigestKeyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestFinalRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestFinalRequest) */ {
 public:
  DigestFinalRequest();
  virtual ~DigestFinalRequest();

  DigestFinalRequest(const DigestFinalRequest& from);

  inline DigestFinalRequest& operator=(const DigestFinalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestFinalRequest(DigestFinalRequest&& from) noexcept
    : DigestFinalRequest() {
    *this = ::std::move(from);
  }

  inline DigestFinalRequest& operator=(DigestFinalRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestFinalRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestFinalRequest* internal_default_instance() {
    return reinterpret_cast<const DigestFinalRequest*>(
               &_DigestFinalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(DigestFinalRequest* other);
  friend void swap(DigestFinalRequest& a, DigestFinalRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestFinalRequest* New() const final {
    return CreateMaybeMessage<DigestFinalRequest>(nullptr);
  }

  DigestFinalRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestFinalRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestFinalRequest& from);
  void MergeFrom(const DigestFinalRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestFinalRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.DigestFinalRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestFinalResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestFinalResponse) */ {
 public:
  DigestFinalResponse();
  virtual ~DigestFinalResponse();

  DigestFinalResponse(const DigestFinalResponse& from);

  inline DigestFinalResponse& operator=(const DigestFinalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestFinalResponse(DigestFinalResponse&& from) noexcept
    : DigestFinalResponse() {
    *this = ::std::move(from);
  }

  inline DigestFinalResponse& operator=(DigestFinalResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestFinalResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestFinalResponse* internal_default_instance() {
    return reinterpret_cast<const DigestFinalResponse*>(
               &_DigestFinalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DigestFinalResponse* other);
  friend void swap(DigestFinalResponse& a, DigestFinalResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestFinalResponse* New() const final {
    return CreateMaybeMessage<DigestFinalResponse>(nullptr);
  }

  DigestFinalResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestFinalResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestFinalResponse& from);
  void MergeFrom(const DigestFinalResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestFinalResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Digest = 2;
  void clear_digest();
  static const int kDigestFieldNumber = 2;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // @@protoc_insertion_point(class_scope:grep11.DigestFinalResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestSingleRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestSingleRequest) */ {
 public:
  DigestSingleRequest();
  virtual ~DigestSingleRequest();

  DigestSingleRequest(const DigestSingleRequest& from);

  inline DigestSingleRequest& operator=(const DigestSingleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestSingleRequest(DigestSingleRequest&& from) noexcept
    : DigestSingleRequest() {
    *this = ::std::move(from);
  }

  inline DigestSingleRequest& operator=(DigestSingleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestSingleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestSingleRequest* internal_default_instance() {
    return reinterpret_cast<const DigestSingleRequest*>(
               &_DigestSingleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(DigestSingleRequest* other);
  friend void swap(DigestSingleRequest& a, DigestSingleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestSingleRequest* New() const final {
    return CreateMaybeMessage<DigestSingleRequest>(nullptr);
  }

  DigestSingleRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestSingleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestSingleRequest& from);
  void MergeFrom(const DigestSingleRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestSingleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .grep11.Mechanism Mech = 1;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 1;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.DigestSingleRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DigestSingleResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DigestSingleResponse) */ {
 public:
  DigestSingleResponse();
  virtual ~DigestSingleResponse();

  DigestSingleResponse(const DigestSingleResponse& from);

  inline DigestSingleResponse& operator=(const DigestSingleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigestSingleResponse(DigestSingleResponse&& from) noexcept
    : DigestSingleResponse() {
    *this = ::std::move(from);
  }

  inline DigestSingleResponse& operator=(DigestSingleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DigestSingleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigestSingleResponse* internal_default_instance() {
    return reinterpret_cast<const DigestSingleResponse*>(
               &_DigestSingleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(DigestSingleResponse* other);
  friend void swap(DigestSingleResponse& a, DigestSingleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigestSingleResponse* New() const final {
    return CreateMaybeMessage<DigestSingleResponse>(nullptr);
  }

  DigestSingleResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigestSingleResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigestSingleResponse& from);
  void MergeFrom(const DigestSingleResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigestSingleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Digest = 3;
  void clear_digest();
  static const int kDigestFieldNumber = 3;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // @@protoc_insertion_point(class_scope:grep11.DigestSingleResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptInitRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptInitRequest) */ {
 public:
  EncryptInitRequest();
  virtual ~EncryptInitRequest();

  EncryptInitRequest(const EncryptInitRequest& from);

  inline EncryptInitRequest& operator=(const EncryptInitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptInitRequest(EncryptInitRequest&& from) noexcept
    : EncryptInitRequest() {
    *this = ::std::move(from);
  }

  inline EncryptInitRequest& operator=(EncryptInitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptInitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptInitRequest* internal_default_instance() {
    return reinterpret_cast<const EncryptInitRequest*>(
               &_EncryptInitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(EncryptInitRequest* other);
  friend void swap(EncryptInitRequest& a, EncryptInitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptInitRequest* New() const final {
    return CreateMaybeMessage<EncryptInitRequest>(nullptr);
  }

  EncryptInitRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptInitRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptInitRequest& from);
  void MergeFrom(const EncryptInitRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.EncryptInitRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptInitResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptInitResponse) */ {
 public:
  EncryptInitResponse();
  virtual ~EncryptInitResponse();

  EncryptInitResponse(const EncryptInitResponse& from);

  inline EncryptInitResponse& operator=(const EncryptInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptInitResponse(EncryptInitResponse&& from) noexcept
    : EncryptInitResponse() {
    *this = ::std::move(from);
  }

  inline EncryptInitResponse& operator=(EncryptInitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptInitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptInitResponse* internal_default_instance() {
    return reinterpret_cast<const EncryptInitResponse*>(
               &_EncryptInitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(EncryptInitResponse* other);
  friend void swap(EncryptInitResponse& a, EncryptInitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptInitResponse* New() const final {
    return CreateMaybeMessage<EncryptInitResponse>(nullptr);
  }

  EncryptInitResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptInitResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptInitResponse& from);
  void MergeFrom(const EncryptInitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.EncryptInitResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptInitRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptInitRequest) */ {
 public:
  DecryptInitRequest();
  virtual ~DecryptInitRequest();

  DecryptInitRequest(const DecryptInitRequest& from);

  inline DecryptInitRequest& operator=(const DecryptInitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptInitRequest(DecryptInitRequest&& from) noexcept
    : DecryptInitRequest() {
    *this = ::std::move(from);
  }

  inline DecryptInitRequest& operator=(DecryptInitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptInitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptInitRequest* internal_default_instance() {
    return reinterpret_cast<const DecryptInitRequest*>(
               &_DecryptInitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(DecryptInitRequest* other);
  friend void swap(DecryptInitRequest& a, DecryptInitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptInitRequest* New() const final {
    return CreateMaybeMessage<DecryptInitRequest>(nullptr);
  }

  DecryptInitRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptInitRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptInitRequest& from);
  void MergeFrom(const DecryptInitRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.DecryptInitRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptInitResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptInitResponse) */ {
 public:
  DecryptInitResponse();
  virtual ~DecryptInitResponse();

  DecryptInitResponse(const DecryptInitResponse& from);

  inline DecryptInitResponse& operator=(const DecryptInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptInitResponse(DecryptInitResponse&& from) noexcept
    : DecryptInitResponse() {
    *this = ::std::move(from);
  }

  inline DecryptInitResponse& operator=(DecryptInitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptInitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptInitResponse* internal_default_instance() {
    return reinterpret_cast<const DecryptInitResponse*>(
               &_DecryptInitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(DecryptInitResponse* other);
  friend void swap(DecryptInitResponse& a, DecryptInitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptInitResponse* New() const final {
    return CreateMaybeMessage<DecryptInitResponse>(nullptr);
  }

  DecryptInitResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptInitResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptInitResponse& from);
  void MergeFrom(const DecryptInitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.DecryptInitResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptUpdateRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptUpdateRequest) */ {
 public:
  EncryptUpdateRequest();
  virtual ~EncryptUpdateRequest();

  EncryptUpdateRequest(const EncryptUpdateRequest& from);

  inline EncryptUpdateRequest& operator=(const EncryptUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptUpdateRequest(EncryptUpdateRequest&& from) noexcept
    : EncryptUpdateRequest() {
    *this = ::std::move(from);
  }

  inline EncryptUpdateRequest& operator=(EncryptUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const EncryptUpdateRequest*>(
               &_EncryptUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(EncryptUpdateRequest* other);
  friend void swap(EncryptUpdateRequest& a, EncryptUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptUpdateRequest* New() const final {
    return CreateMaybeMessage<EncryptUpdateRequest>(nullptr);
  }

  EncryptUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptUpdateRequest& from);
  void MergeFrom(const EncryptUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Plain = 2;
  void clear_plain();
  static const int kPlainFieldNumber = 2;
  const ::std::string& plain() const;
  void set_plain(const ::std::string& value);
  #if LANG_CXX11
  void set_plain(::std::string&& value);
  #endif
  void set_plain(const char* value);
  void set_plain(const void* value, size_t size);
  ::std::string* mutable_plain();
  ::std::string* release_plain();
  void set_allocated_plain(::std::string* plain);

  // @@protoc_insertion_point(class_scope:grep11.EncryptUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr plain_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptUpdateResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptUpdateResponse) */ {
 public:
  EncryptUpdateResponse();
  virtual ~EncryptUpdateResponse();

  EncryptUpdateResponse(const EncryptUpdateResponse& from);

  inline EncryptUpdateResponse& operator=(const EncryptUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptUpdateResponse(EncryptUpdateResponse&& from) noexcept
    : EncryptUpdateResponse() {
    *this = ::std::move(from);
  }

  inline EncryptUpdateResponse& operator=(EncryptUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const EncryptUpdateResponse*>(
               &_EncryptUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(EncryptUpdateResponse* other);
  friend void swap(EncryptUpdateResponse& a, EncryptUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptUpdateResponse* New() const final {
    return CreateMaybeMessage<EncryptUpdateResponse>(nullptr);
  }

  EncryptUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptUpdateResponse& from);
  void MergeFrom(const EncryptUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Ciphered = 3;
  void clear_ciphered();
  static const int kCipheredFieldNumber = 3;
  const ::std::string& ciphered() const;
  void set_ciphered(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphered(::std::string&& value);
  #endif
  void set_ciphered(const char* value);
  void set_ciphered(const void* value, size_t size);
  ::std::string* mutable_ciphered();
  ::std::string* release_ciphered();
  void set_allocated_ciphered(::std::string* ciphered);

  // @@protoc_insertion_point(class_scope:grep11.EncryptUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr ciphered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptUpdateRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptUpdateRequest) */ {
 public:
  DecryptUpdateRequest();
  virtual ~DecryptUpdateRequest();

  DecryptUpdateRequest(const DecryptUpdateRequest& from);

  inline DecryptUpdateRequest& operator=(const DecryptUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptUpdateRequest(DecryptUpdateRequest&& from) noexcept
    : DecryptUpdateRequest() {
    *this = ::std::move(from);
  }

  inline DecryptUpdateRequest& operator=(DecryptUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const DecryptUpdateRequest*>(
               &_DecryptUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(DecryptUpdateRequest* other);
  friend void swap(DecryptUpdateRequest& a, DecryptUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptUpdateRequest* New() const final {
    return CreateMaybeMessage<DecryptUpdateRequest>(nullptr);
  }

  DecryptUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptUpdateRequest& from);
  void MergeFrom(const DecryptUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Ciphered = 2;
  void clear_ciphered();
  static const int kCipheredFieldNumber = 2;
  const ::std::string& ciphered() const;
  void set_ciphered(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphered(::std::string&& value);
  #endif
  void set_ciphered(const char* value);
  void set_ciphered(const void* value, size_t size);
  ::std::string* mutable_ciphered();
  ::std::string* release_ciphered();
  void set_allocated_ciphered(::std::string* ciphered);

  // @@protoc_insertion_point(class_scope:grep11.DecryptUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr ciphered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptUpdateResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptUpdateResponse) */ {
 public:
  DecryptUpdateResponse();
  virtual ~DecryptUpdateResponse();

  DecryptUpdateResponse(const DecryptUpdateResponse& from);

  inline DecryptUpdateResponse& operator=(const DecryptUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptUpdateResponse(DecryptUpdateResponse&& from) noexcept
    : DecryptUpdateResponse() {
    *this = ::std::move(from);
  }

  inline DecryptUpdateResponse& operator=(DecryptUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const DecryptUpdateResponse*>(
               &_DecryptUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(DecryptUpdateResponse* other);
  friend void swap(DecryptUpdateResponse& a, DecryptUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptUpdateResponse* New() const final {
    return CreateMaybeMessage<DecryptUpdateResponse>(nullptr);
  }

  DecryptUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptUpdateResponse& from);
  void MergeFrom(const DecryptUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Plain = 3;
  void clear_plain();
  static const int kPlainFieldNumber = 3;
  const ::std::string& plain() const;
  void set_plain(const ::std::string& value);
  #if LANG_CXX11
  void set_plain(::std::string&& value);
  #endif
  void set_plain(const char* value);
  void set_plain(const void* value, size_t size);
  ::std::string* mutable_plain();
  ::std::string* release_plain();
  void set_allocated_plain(::std::string* plain);

  // @@protoc_insertion_point(class_scope:grep11.DecryptUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr plain_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptRequest) */ {
 public:
  EncryptRequest();
  virtual ~EncryptRequest();

  EncryptRequest(const EncryptRequest& from);

  inline EncryptRequest& operator=(const EncryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptRequest(EncryptRequest&& from) noexcept
    : EncryptRequest() {
    *this = ::std::move(from);
  }

  inline EncryptRequest& operator=(EncryptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptRequest* internal_default_instance() {
    return reinterpret_cast<const EncryptRequest*>(
               &_EncryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(EncryptRequest* other);
  friend void swap(EncryptRequest& a, EncryptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptRequest* New() const final {
    return CreateMaybeMessage<EncryptRequest>(nullptr);
  }

  EncryptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptRequest& from);
  void MergeFrom(const EncryptRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Plain = 2;
  void clear_plain();
  static const int kPlainFieldNumber = 2;
  const ::std::string& plain() const;
  void set_plain(const ::std::string& value);
  #if LANG_CXX11
  void set_plain(::std::string&& value);
  #endif
  void set_plain(const char* value);
  void set_plain(const void* value, size_t size);
  ::std::string* mutable_plain();
  ::std::string* release_plain();
  void set_allocated_plain(::std::string* plain);

  // @@protoc_insertion_point(class_scope:grep11.EncryptRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr plain_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptResponse) */ {
 public:
  EncryptResponse();
  virtual ~EncryptResponse();

  EncryptResponse(const EncryptResponse& from);

  inline EncryptResponse& operator=(const EncryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptResponse(EncryptResponse&& from) noexcept
    : EncryptResponse() {
    *this = ::std::move(from);
  }

  inline EncryptResponse& operator=(EncryptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptResponse* internal_default_instance() {
    return reinterpret_cast<const EncryptResponse*>(
               &_EncryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(EncryptResponse* other);
  friend void swap(EncryptResponse& a, EncryptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptResponse* New() const final {
    return CreateMaybeMessage<EncryptResponse>(nullptr);
  }

  EncryptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptResponse& from);
  void MergeFrom(const EncryptResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Ciphered = 3;
  void clear_ciphered();
  static const int kCipheredFieldNumber = 3;
  const ::std::string& ciphered() const;
  void set_ciphered(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphered(::std::string&& value);
  #endif
  void set_ciphered(const char* value);
  void set_ciphered(const void* value, size_t size);
  ::std::string* mutable_ciphered();
  ::std::string* release_ciphered();
  void set_allocated_ciphered(::std::string* ciphered);

  // @@protoc_insertion_point(class_scope:grep11.EncryptResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ciphered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptRequest) */ {
 public:
  DecryptRequest();
  virtual ~DecryptRequest();

  DecryptRequest(const DecryptRequest& from);

  inline DecryptRequest& operator=(const DecryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptRequest(DecryptRequest&& from) noexcept
    : DecryptRequest() {
    *this = ::std::move(from);
  }

  inline DecryptRequest& operator=(DecryptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptRequest* internal_default_instance() {
    return reinterpret_cast<const DecryptRequest*>(
               &_DecryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(DecryptRequest* other);
  friend void swap(DecryptRequest& a, DecryptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptRequest* New() const final {
    return CreateMaybeMessage<DecryptRequest>(nullptr);
  }

  DecryptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptRequest& from);
  void MergeFrom(const DecryptRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Ciphered = 2;
  void clear_ciphered();
  static const int kCipheredFieldNumber = 2;
  const ::std::string& ciphered() const;
  void set_ciphered(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphered(::std::string&& value);
  #endif
  void set_ciphered(const char* value);
  void set_ciphered(const void* value, size_t size);
  ::std::string* mutable_ciphered();
  ::std::string* release_ciphered();
  void set_allocated_ciphered(::std::string* ciphered);

  // @@protoc_insertion_point(class_scope:grep11.DecryptRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr ciphered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptResponse) */ {
 public:
  DecryptResponse();
  virtual ~DecryptResponse();

  DecryptResponse(const DecryptResponse& from);

  inline DecryptResponse& operator=(const DecryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptResponse(DecryptResponse&& from) noexcept
    : DecryptResponse() {
    *this = ::std::move(from);
  }

  inline DecryptResponse& operator=(DecryptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptResponse* internal_default_instance() {
    return reinterpret_cast<const DecryptResponse*>(
               &_DecryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(DecryptResponse* other);
  friend void swap(DecryptResponse& a, DecryptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptResponse* New() const final {
    return CreateMaybeMessage<DecryptResponse>(nullptr);
  }

  DecryptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptResponse& from);
  void MergeFrom(const DecryptResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Plain = 3;
  void clear_plain();
  static const int kPlainFieldNumber = 3;
  const ::std::string& plain() const;
  void set_plain(const ::std::string& value);
  #if LANG_CXX11
  void set_plain(::std::string&& value);
  #endif
  void set_plain(const char* value);
  void set_plain(const void* value, size_t size);
  ::std::string* mutable_plain();
  ::std::string* release_plain();
  void set_allocated_plain(::std::string* plain);

  // @@protoc_insertion_point(class_scope:grep11.DecryptResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr plain_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptFinalRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptFinalRequest) */ {
 public:
  EncryptFinalRequest();
  virtual ~EncryptFinalRequest();

  EncryptFinalRequest(const EncryptFinalRequest& from);

  inline EncryptFinalRequest& operator=(const EncryptFinalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptFinalRequest(EncryptFinalRequest&& from) noexcept
    : EncryptFinalRequest() {
    *this = ::std::move(from);
  }

  inline EncryptFinalRequest& operator=(EncryptFinalRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptFinalRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptFinalRequest* internal_default_instance() {
    return reinterpret_cast<const EncryptFinalRequest*>(
               &_EncryptFinalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(EncryptFinalRequest* other);
  friend void swap(EncryptFinalRequest& a, EncryptFinalRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptFinalRequest* New() const final {
    return CreateMaybeMessage<EncryptFinalRequest>(nullptr);
  }

  EncryptFinalRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptFinalRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptFinalRequest& from);
  void MergeFrom(const EncryptFinalRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptFinalRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.EncryptFinalRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptFinalResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptFinalResponse) */ {
 public:
  EncryptFinalResponse();
  virtual ~EncryptFinalResponse();

  EncryptFinalResponse(const EncryptFinalResponse& from);

  inline EncryptFinalResponse& operator=(const EncryptFinalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptFinalResponse(EncryptFinalResponse&& from) noexcept
    : EncryptFinalResponse() {
    *this = ::std::move(from);
  }

  inline EncryptFinalResponse& operator=(EncryptFinalResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptFinalResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptFinalResponse* internal_default_instance() {
    return reinterpret_cast<const EncryptFinalResponse*>(
               &_EncryptFinalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(EncryptFinalResponse* other);
  friend void swap(EncryptFinalResponse& a, EncryptFinalResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptFinalResponse* New() const final {
    return CreateMaybeMessage<EncryptFinalResponse>(nullptr);
  }

  EncryptFinalResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptFinalResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptFinalResponse& from);
  void MergeFrom(const EncryptFinalResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptFinalResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Ciphered = 2;
  void clear_ciphered();
  static const int kCipheredFieldNumber = 2;
  const ::std::string& ciphered() const;
  void set_ciphered(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphered(::std::string&& value);
  #endif
  void set_ciphered(const char* value);
  void set_ciphered(const void* value, size_t size);
  ::std::string* mutable_ciphered();
  ::std::string* release_ciphered();
  void set_allocated_ciphered(::std::string* ciphered);

  // @@protoc_insertion_point(class_scope:grep11.EncryptFinalResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ciphered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptFinalRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptFinalRequest) */ {
 public:
  DecryptFinalRequest();
  virtual ~DecryptFinalRequest();

  DecryptFinalRequest(const DecryptFinalRequest& from);

  inline DecryptFinalRequest& operator=(const DecryptFinalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptFinalRequest(DecryptFinalRequest&& from) noexcept
    : DecryptFinalRequest() {
    *this = ::std::move(from);
  }

  inline DecryptFinalRequest& operator=(DecryptFinalRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptFinalRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptFinalRequest* internal_default_instance() {
    return reinterpret_cast<const DecryptFinalRequest*>(
               &_DecryptFinalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(DecryptFinalRequest* other);
  friend void swap(DecryptFinalRequest& a, DecryptFinalRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptFinalRequest* New() const final {
    return CreateMaybeMessage<DecryptFinalRequest>(nullptr);
  }

  DecryptFinalRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptFinalRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptFinalRequest& from);
  void MergeFrom(const DecryptFinalRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptFinalRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.DecryptFinalRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptFinalResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptFinalResponse) */ {
 public:
  DecryptFinalResponse();
  virtual ~DecryptFinalResponse();

  DecryptFinalResponse(const DecryptFinalResponse& from);

  inline DecryptFinalResponse& operator=(const DecryptFinalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptFinalResponse(DecryptFinalResponse&& from) noexcept
    : DecryptFinalResponse() {
    *this = ::std::move(from);
  }

  inline DecryptFinalResponse& operator=(DecryptFinalResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptFinalResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptFinalResponse* internal_default_instance() {
    return reinterpret_cast<const DecryptFinalResponse*>(
               &_DecryptFinalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(DecryptFinalResponse* other);
  friend void swap(DecryptFinalResponse& a, DecryptFinalResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptFinalResponse* New() const final {
    return CreateMaybeMessage<DecryptFinalResponse>(nullptr);
  }

  DecryptFinalResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptFinalResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptFinalResponse& from);
  void MergeFrom(const DecryptFinalResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptFinalResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Plain = 2;
  void clear_plain();
  static const int kPlainFieldNumber = 2;
  const ::std::string& plain() const;
  void set_plain(const ::std::string& value);
  #if LANG_CXX11
  void set_plain(::std::string&& value);
  #endif
  void set_plain(const char* value);
  void set_plain(const void* value, size_t size);
  ::std::string* mutable_plain();
  ::std::string* release_plain();
  void set_allocated_plain(::std::string* plain);

  // @@protoc_insertion_point(class_scope:grep11.DecryptFinalResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr plain_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptSingleRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptSingleRequest) */ {
 public:
  EncryptSingleRequest();
  virtual ~EncryptSingleRequest();

  EncryptSingleRequest(const EncryptSingleRequest& from);

  inline EncryptSingleRequest& operator=(const EncryptSingleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptSingleRequest(EncryptSingleRequest&& from) noexcept
    : EncryptSingleRequest() {
    *this = ::std::move(from);
  }

  inline EncryptSingleRequest& operator=(EncryptSingleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptSingleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptSingleRequest* internal_default_instance() {
    return reinterpret_cast<const EncryptSingleRequest*>(
               &_EncryptSingleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(EncryptSingleRequest* other);
  friend void swap(EncryptSingleRequest& a, EncryptSingleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptSingleRequest* New() const final {
    return CreateMaybeMessage<EncryptSingleRequest>(nullptr);
  }

  EncryptSingleRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptSingleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptSingleRequest& from);
  void MergeFrom(const EncryptSingleRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptSingleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes Plain = 3;
  void clear_plain();
  static const int kPlainFieldNumber = 3;
  const ::std::string& plain() const;
  void set_plain(const ::std::string& value);
  #if LANG_CXX11
  void set_plain(::std::string&& value);
  #endif
  void set_plain(const char* value);
  void set_plain(const void* value, size_t size);
  ::std::string* mutable_plain();
  ::std::string* release_plain();
  void set_allocated_plain(::std::string* plain);

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.EncryptSingleRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr plain_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class EncryptSingleResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.EncryptSingleResponse) */ {
 public:
  EncryptSingleResponse();
  virtual ~EncryptSingleResponse();

  EncryptSingleResponse(const EncryptSingleResponse& from);

  inline EncryptSingleResponse& operator=(const EncryptSingleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptSingleResponse(EncryptSingleResponse&& from) noexcept
    : EncryptSingleResponse() {
    *this = ::std::move(from);
  }

  inline EncryptSingleResponse& operator=(EncryptSingleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EncryptSingleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptSingleResponse* internal_default_instance() {
    return reinterpret_cast<const EncryptSingleResponse*>(
               &_EncryptSingleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(EncryptSingleResponse* other);
  friend void swap(EncryptSingleResponse& a, EncryptSingleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptSingleResponse* New() const final {
    return CreateMaybeMessage<EncryptSingleResponse>(nullptr);
  }

  EncryptSingleResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptSingleResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptSingleResponse& from);
  void MergeFrom(const EncryptSingleResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptSingleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Ciphered = 4;
  void clear_ciphered();
  static const int kCipheredFieldNumber = 4;
  const ::std::string& ciphered() const;
  void set_ciphered(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphered(::std::string&& value);
  #endif
  void set_ciphered(const char* value);
  void set_ciphered(const void* value, size_t size);
  ::std::string* mutable_ciphered();
  ::std::string* release_ciphered();
  void set_allocated_ciphered(::std::string* ciphered);

  // @@protoc_insertion_point(class_scope:grep11.EncryptSingleResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ciphered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptSingleRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptSingleRequest) */ {
 public:
  DecryptSingleRequest();
  virtual ~DecryptSingleRequest();

  DecryptSingleRequest(const DecryptSingleRequest& from);

  inline DecryptSingleRequest& operator=(const DecryptSingleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptSingleRequest(DecryptSingleRequest&& from) noexcept
    : DecryptSingleRequest() {
    *this = ::std::move(from);
  }

  inline DecryptSingleRequest& operator=(DecryptSingleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptSingleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptSingleRequest* internal_default_instance() {
    return reinterpret_cast<const DecryptSingleRequest*>(
               &_DecryptSingleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(DecryptSingleRequest* other);
  friend void swap(DecryptSingleRequest& a, DecryptSingleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptSingleRequest* New() const final {
    return CreateMaybeMessage<DecryptSingleRequest>(nullptr);
  }

  DecryptSingleRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptSingleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptSingleRequest& from);
  void MergeFrom(const DecryptSingleRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptSingleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes Ciphered = 3;
  void clear_ciphered();
  static const int kCipheredFieldNumber = 3;
  const ::std::string& ciphered() const;
  void set_ciphered(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphered(::std::string&& value);
  #endif
  void set_ciphered(const char* value);
  void set_ciphered(const void* value, size_t size);
  ::std::string* mutable_ciphered();
  ::std::string* release_ciphered();
  void set_allocated_ciphered(::std::string* ciphered);

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.DecryptSingleRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr ciphered_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DecryptSingleResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DecryptSingleResponse) */ {
 public:
  DecryptSingleResponse();
  virtual ~DecryptSingleResponse();

  DecryptSingleResponse(const DecryptSingleResponse& from);

  inline DecryptSingleResponse& operator=(const DecryptSingleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptSingleResponse(DecryptSingleResponse&& from) noexcept
    : DecryptSingleResponse() {
    *this = ::std::move(from);
  }

  inline DecryptSingleResponse& operator=(DecryptSingleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecryptSingleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptSingleResponse* internal_default_instance() {
    return reinterpret_cast<const DecryptSingleResponse*>(
               &_DecryptSingleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(DecryptSingleResponse* other);
  friend void swap(DecryptSingleResponse& a, DecryptSingleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptSingleResponse* New() const final {
    return CreateMaybeMessage<DecryptSingleResponse>(nullptr);
  }

  DecryptSingleResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptSingleResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptSingleResponse& from);
  void MergeFrom(const DecryptSingleResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptSingleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Plain = 4;
  void clear_plain();
  static const int kPlainFieldNumber = 4;
  const ::std::string& plain() const;
  void set_plain(const ::std::string& value);
  #if LANG_CXX11
  void set_plain(::std::string&& value);
  #endif
  void set_plain(const char* value);
  void set_plain(const void* value, size_t size);
  ::std::string* mutable_plain();
  ::std::string* release_plain();
  void set_allocated_plain(::std::string* plain);

  // @@protoc_insertion_point(class_scope:grep11.DecryptSingleResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr plain_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignInitRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignInitRequest) */ {
 public:
  SignInitRequest();
  virtual ~SignInitRequest();

  SignInitRequest(const SignInitRequest& from);

  inline SignInitRequest& operator=(const SignInitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignInitRequest(SignInitRequest&& from) noexcept
    : SignInitRequest() {
    *this = ::std::move(from);
  }

  inline SignInitRequest& operator=(SignInitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignInitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignInitRequest* internal_default_instance() {
    return reinterpret_cast<const SignInitRequest*>(
               &_SignInitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(SignInitRequest* other);
  friend void swap(SignInitRequest& a, SignInitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignInitRequest* New() const final {
    return CreateMaybeMessage<SignInitRequest>(nullptr);
  }

  SignInitRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignInitRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignInitRequest& from);
  void MergeFrom(const SignInitRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes PrivKey = 3;
  void clear_privkey();
  static const int kPrivKeyFieldNumber = 3;
  const ::std::string& privkey() const;
  void set_privkey(const ::std::string& value);
  #if LANG_CXX11
  void set_privkey(::std::string&& value);
  #endif
  void set_privkey(const char* value);
  void set_privkey(const void* value, size_t size);
  ::std::string* mutable_privkey();
  ::std::string* release_privkey();
  void set_allocated_privkey(::std::string* privkey);

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.SignInitRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr privkey_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignInitResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignInitResponse) */ {
 public:
  SignInitResponse();
  virtual ~SignInitResponse();

  SignInitResponse(const SignInitResponse& from);

  inline SignInitResponse& operator=(const SignInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignInitResponse(SignInitResponse&& from) noexcept
    : SignInitResponse() {
    *this = ::std::move(from);
  }

  inline SignInitResponse& operator=(SignInitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignInitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignInitResponse* internal_default_instance() {
    return reinterpret_cast<const SignInitResponse*>(
               &_SignInitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(SignInitResponse* other);
  friend void swap(SignInitResponse& a, SignInitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignInitResponse* New() const final {
    return CreateMaybeMessage<SignInitResponse>(nullptr);
  }

  SignInitResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignInitResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignInitResponse& from);
  void MergeFrom(const SignInitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.SignInitResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifyInitRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifyInitRequest) */ {
 public:
  VerifyInitRequest();
  virtual ~VerifyInitRequest();

  VerifyInitRequest(const VerifyInitRequest& from);

  inline VerifyInitRequest& operator=(const VerifyInitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyInitRequest(VerifyInitRequest&& from) noexcept
    : VerifyInitRequest() {
    *this = ::std::move(from);
  }

  inline VerifyInitRequest& operator=(VerifyInitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifyInitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyInitRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyInitRequest*>(
               &_VerifyInitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(VerifyInitRequest* other);
  friend void swap(VerifyInitRequest& a, VerifyInitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyInitRequest* New() const final {
    return CreateMaybeMessage<VerifyInitRequest>(nullptr);
  }

  VerifyInitRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifyInitRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifyInitRequest& from);
  void MergeFrom(const VerifyInitRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes PubKey = 3;
  void clear_pubkey();
  static const int kPubKeyFieldNumber = 3;
  const ::std::string& pubkey() const;
  void set_pubkey(const ::std::string& value);
  #if LANG_CXX11
  void set_pubkey(::std::string&& value);
  #endif
  void set_pubkey(const char* value);
  void set_pubkey(const void* value, size_t size);
  ::std::string* mutable_pubkey();
  ::std::string* release_pubkey();
  void set_allocated_pubkey(::std::string* pubkey);

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.VerifyInitRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pubkey_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifyInitResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifyInitResponse) */ {
 public:
  VerifyInitResponse();
  virtual ~VerifyInitResponse();

  VerifyInitResponse(const VerifyInitResponse& from);

  inline VerifyInitResponse& operator=(const VerifyInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyInitResponse(VerifyInitResponse&& from) noexcept
    : VerifyInitResponse() {
    *this = ::std::move(from);
  }

  inline VerifyInitResponse& operator=(VerifyInitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifyInitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyInitResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyInitResponse*>(
               &_VerifyInitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(VerifyInitResponse* other);
  friend void swap(VerifyInitResponse& a, VerifyInitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyInitResponse* New() const final {
    return CreateMaybeMessage<VerifyInitResponse>(nullptr);
  }

  VerifyInitResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifyInitResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifyInitResponse& from);
  void MergeFrom(const VerifyInitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.VerifyInitResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignUpdateRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignUpdateRequest) */ {
 public:
  SignUpdateRequest();
  virtual ~SignUpdateRequest();

  SignUpdateRequest(const SignUpdateRequest& from);

  inline SignUpdateRequest& operator=(const SignUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignUpdateRequest(SignUpdateRequest&& from) noexcept
    : SignUpdateRequest() {
    *this = ::std::move(from);
  }

  inline SignUpdateRequest& operator=(SignUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const SignUpdateRequest*>(
               &_SignUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(SignUpdateRequest* other);
  friend void swap(SignUpdateRequest& a, SignUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignUpdateRequest* New() const final {
    return CreateMaybeMessage<SignUpdateRequest>(nullptr);
  }

  SignUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignUpdateRequest& from);
  void MergeFrom(const SignUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:grep11.SignUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignUpdateResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignUpdateResponse) */ {
 public:
  SignUpdateResponse();
  virtual ~SignUpdateResponse();

  SignUpdateResponse(const SignUpdateResponse& from);

  inline SignUpdateResponse& operator=(const SignUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignUpdateResponse(SignUpdateResponse&& from) noexcept
    : SignUpdateResponse() {
    *this = ::std::move(from);
  }

  inline SignUpdateResponse& operator=(SignUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const SignUpdateResponse*>(
               &_SignUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(SignUpdateResponse* other);
  friend void swap(SignUpdateResponse& a, SignUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignUpdateResponse* New() const final {
    return CreateMaybeMessage<SignUpdateResponse>(nullptr);
  }

  SignUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignUpdateResponse& from);
  void MergeFrom(const SignUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.SignUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifyUpdateRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifyUpdateRequest) */ {
 public:
  VerifyUpdateRequest();
  virtual ~VerifyUpdateRequest();

  VerifyUpdateRequest(const VerifyUpdateRequest& from);

  inline VerifyUpdateRequest& operator=(const VerifyUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyUpdateRequest(VerifyUpdateRequest&& from) noexcept
    : VerifyUpdateRequest() {
    *this = ::std::move(from);
  }

  inline VerifyUpdateRequest& operator=(VerifyUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifyUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyUpdateRequest*>(
               &_VerifyUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(VerifyUpdateRequest* other);
  friend void swap(VerifyUpdateRequest& a, VerifyUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyUpdateRequest* New() const final {
    return CreateMaybeMessage<VerifyUpdateRequest>(nullptr);
  }

  VerifyUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifyUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifyUpdateRequest& from);
  void MergeFrom(const VerifyUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:grep11.VerifyUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifyUpdateResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifyUpdateResponse) */ {
 public:
  VerifyUpdateResponse();
  virtual ~VerifyUpdateResponse();

  VerifyUpdateResponse(const VerifyUpdateResponse& from);

  inline VerifyUpdateResponse& operator=(const VerifyUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyUpdateResponse(VerifyUpdateResponse&& from) noexcept
    : VerifyUpdateResponse() {
    *this = ::std::move(from);
  }

  inline VerifyUpdateResponse& operator=(VerifyUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifyUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyUpdateResponse*>(
               &_VerifyUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(VerifyUpdateResponse* other);
  friend void swap(VerifyUpdateResponse& a, VerifyUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyUpdateResponse* New() const final {
    return CreateMaybeMessage<VerifyUpdateResponse>(nullptr);
  }

  VerifyUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifyUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifyUpdateResponse& from);
  void MergeFrom(const VerifyUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.VerifyUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignFinalRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignFinalRequest) */ {
 public:
  SignFinalRequest();
  virtual ~SignFinalRequest();

  SignFinalRequest(const SignFinalRequest& from);

  inline SignFinalRequest& operator=(const SignFinalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignFinalRequest(SignFinalRequest&& from) noexcept
    : SignFinalRequest() {
    *this = ::std::move(from);
  }

  inline SignFinalRequest& operator=(SignFinalRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignFinalRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignFinalRequest* internal_default_instance() {
    return reinterpret_cast<const SignFinalRequest*>(
               &_SignFinalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(SignFinalRequest* other);
  friend void swap(SignFinalRequest& a, SignFinalRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignFinalRequest* New() const final {
    return CreateMaybeMessage<SignFinalRequest>(nullptr);
  }

  SignFinalRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignFinalRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignFinalRequest& from);
  void MergeFrom(const SignFinalRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignFinalRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // @@protoc_insertion_point(class_scope:grep11.SignFinalRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignFinalResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignFinalResponse) */ {
 public:
  SignFinalResponse();
  virtual ~SignFinalResponse();

  SignFinalResponse(const SignFinalResponse& from);

  inline SignFinalResponse& operator=(const SignFinalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignFinalResponse(SignFinalResponse&& from) noexcept
    : SignFinalResponse() {
    *this = ::std::move(from);
  }

  inline SignFinalResponse& operator=(SignFinalResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignFinalResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignFinalResponse* internal_default_instance() {
    return reinterpret_cast<const SignFinalResponse*>(
               &_SignFinalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(SignFinalResponse* other);
  friend void swap(SignFinalResponse& a, SignFinalResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignFinalResponse* New() const final {
    return CreateMaybeMessage<SignFinalResponse>(nullptr);
  }

  SignFinalResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignFinalResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignFinalResponse& from);
  void MergeFrom(const SignFinalResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignFinalResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Signature = 2;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:grep11.SignFinalResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifyFinalRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifyFinalRequest) */ {
 public:
  VerifyFinalRequest();
  virtual ~VerifyFinalRequest();

  VerifyFinalRequest(const VerifyFinalRequest& from);

  inline VerifyFinalRequest& operator=(const VerifyFinalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyFinalRequest(VerifyFinalRequest&& from) noexcept
    : VerifyFinalRequest() {
    *this = ::std::move(from);
  }

  inline VerifyFinalRequest& operator=(VerifyFinalRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifyFinalRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyFinalRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyFinalRequest*>(
               &_VerifyFinalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(VerifyFinalRequest* other);
  friend void swap(VerifyFinalRequest& a, VerifyFinalRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyFinalRequest* New() const final {
    return CreateMaybeMessage<VerifyFinalRequest>(nullptr);
  }

  VerifyFinalRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifyFinalRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifyFinalRequest& from);
  void MergeFrom(const VerifyFinalRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyFinalRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Signature = 2;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:grep11.VerifyFinalRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifyFinalResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifyFinalResponse) */ {
 public:
  VerifyFinalResponse();
  virtual ~VerifyFinalResponse();

  VerifyFinalResponse(const VerifyFinalResponse& from);

  inline VerifyFinalResponse& operator=(const VerifyFinalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyFinalResponse(VerifyFinalResponse&& from) noexcept
    : VerifyFinalResponse() {
    *this = ::std::move(from);
  }

  inline VerifyFinalResponse& operator=(VerifyFinalResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifyFinalResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyFinalResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyFinalResponse*>(
               &_VerifyFinalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(VerifyFinalResponse* other);
  friend void swap(VerifyFinalResponse& a, VerifyFinalResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyFinalResponse* New() const final {
    return CreateMaybeMessage<VerifyFinalResponse>(nullptr);
  }

  VerifyFinalResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifyFinalResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifyFinalResponse& from);
  void MergeFrom(const VerifyFinalResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyFinalResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:grep11.VerifyFinalResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignRequest) */ {
 public:
  SignRequest();
  virtual ~SignRequest();

  SignRequest(const SignRequest& from);

  inline SignRequest& operator=(const SignRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignRequest(SignRequest&& from) noexcept
    : SignRequest() {
    *this = ::std::move(from);
  }

  inline SignRequest& operator=(SignRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignRequest* internal_default_instance() {
    return reinterpret_cast<const SignRequest*>(
               &_SignRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(SignRequest* other);
  friend void swap(SignRequest& a, SignRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignRequest* New() const final {
    return CreateMaybeMessage<SignRequest>(nullptr);
  }

  SignRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignRequest& from);
  void MergeFrom(const SignRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:grep11.SignRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignResponse) */ {
 public:
  SignResponse();
  virtual ~SignResponse();

  SignResponse(const SignResponse& from);

  inline SignResponse& operator=(const SignResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignResponse(SignResponse&& from) noexcept
    : SignResponse() {
    *this = ::std::move(from);
  }

  inline SignResponse& operator=(SignResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignResponse* internal_default_instance() {
    return reinterpret_cast<const SignResponse*>(
               &_SignResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(SignResponse* other);
  friend void swap(SignResponse& a, SignResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignResponse* New() const final {
    return CreateMaybeMessage<SignResponse>(nullptr);
  }

  SignResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignResponse& from);
  void MergeFrom(const SignResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Signature = 3;
  void clear_signature();
  static const int kSignatureFieldNumber = 3;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:grep11.SignResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifyRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifyRequest) */ {
 public:
  VerifyRequest();
  virtual ~VerifyRequest();

  VerifyRequest(const VerifyRequest& from);

  inline VerifyRequest& operator=(const VerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyRequest(VerifyRequest&& from) noexcept
    : VerifyRequest() {
    *this = ::std::move(from);
  }

  inline VerifyRequest& operator=(VerifyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyRequest*>(
               &_VerifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(VerifyRequest* other);
  friend void swap(VerifyRequest& a, VerifyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyRequest* New() const final {
    return CreateMaybeMessage<VerifyRequest>(nullptr);
  }

  VerifyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifyRequest& from);
  void MergeFrom(const VerifyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes State = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // bytes Data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // bytes Signature = 3;
  void clear_signature();
  static const int kSignatureFieldNumber = 3;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:grep11.VerifyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifyResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifyResponse) */ {
 public:
  VerifyResponse();
  virtual ~VerifyResponse();

  VerifyResponse(const VerifyResponse& from);

  inline VerifyResponse& operator=(const VerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifyResponse(VerifyResponse&& from) noexcept
    : VerifyResponse() {
    *this = ::std::move(from);
  }

  inline VerifyResponse& operator=(VerifyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifyResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyResponse*>(
               &_VerifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(VerifyResponse* other);
  friend void swap(VerifyResponse& a, VerifyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifyResponse* New() const final {
    return CreateMaybeMessage<VerifyResponse>(nullptr);
  }

  VerifyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifyResponse& from);
  void MergeFrom(const VerifyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:grep11.VerifyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignSingleRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignSingleRequest) */ {
 public:
  SignSingleRequest();
  virtual ~SignSingleRequest();

  SignSingleRequest(const SignSingleRequest& from);

  inline SignSingleRequest& operator=(const SignSingleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignSingleRequest(SignSingleRequest&& from) noexcept
    : SignSingleRequest() {
    *this = ::std::move(from);
  }

  inline SignSingleRequest& operator=(SignSingleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignSingleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignSingleRequest* internal_default_instance() {
    return reinterpret_cast<const SignSingleRequest*>(
               &_SignSingleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(SignSingleRequest* other);
  friend void swap(SignSingleRequest& a, SignSingleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignSingleRequest* New() const final {
    return CreateMaybeMessage<SignSingleRequest>(nullptr);
  }

  SignSingleRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignSingleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignSingleRequest& from);
  void MergeFrom(const SignSingleRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignSingleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes PrivKey = 1;
  void clear_privkey();
  static const int kPrivKeyFieldNumber = 1;
  const ::std::string& privkey() const;
  void set_privkey(const ::std::string& value);
  #if LANG_CXX11
  void set_privkey(::std::string&& value);
  #endif
  void set_privkey(const char* value);
  void set_privkey(const void* value, size_t size);
  ::std::string* mutable_privkey();
  ::std::string* release_privkey();
  void set_allocated_privkey(::std::string* privkey);

  // bytes Data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.SignSingleRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr privkey_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SignSingleResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SignSingleResponse) */ {
 public:
  SignSingleResponse();
  virtual ~SignSingleResponse();

  SignSingleResponse(const SignSingleResponse& from);

  inline SignSingleResponse& operator=(const SignSingleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignSingleResponse(SignSingleResponse&& from) noexcept
    : SignSingleResponse() {
    *this = ::std::move(from);
  }

  inline SignSingleResponse& operator=(SignSingleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SignSingleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignSingleResponse* internal_default_instance() {
    return reinterpret_cast<const SignSingleResponse*>(
               &_SignSingleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(SignSingleResponse* other);
  friend void swap(SignSingleResponse& a, SignSingleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignSingleResponse* New() const final {
    return CreateMaybeMessage<SignSingleResponse>(nullptr);
  }

  SignSingleResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignSingleResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignSingleResponse& from);
  void MergeFrom(const SignSingleResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignSingleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Signature = 4;
  void clear_signature();
  static const int kSignatureFieldNumber = 4;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:grep11.SignSingleResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifySingleRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifySingleRequest) */ {
 public:
  VerifySingleRequest();
  virtual ~VerifySingleRequest();

  VerifySingleRequest(const VerifySingleRequest& from);

  inline VerifySingleRequest& operator=(const VerifySingleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifySingleRequest(VerifySingleRequest&& from) noexcept
    : VerifySingleRequest() {
    *this = ::std::move(from);
  }

  inline VerifySingleRequest& operator=(VerifySingleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifySingleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifySingleRequest* internal_default_instance() {
    return reinterpret_cast<const VerifySingleRequest*>(
               &_VerifySingleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(VerifySingleRequest* other);
  friend void swap(VerifySingleRequest& a, VerifySingleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifySingleRequest* New() const final {
    return CreateMaybeMessage<VerifySingleRequest>(nullptr);
  }

  VerifySingleRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifySingleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifySingleRequest& from);
  void MergeFrom(const VerifySingleRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifySingleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes PubKey = 1;
  void clear_pubkey();
  static const int kPubKeyFieldNumber = 1;
  const ::std::string& pubkey() const;
  void set_pubkey(const ::std::string& value);
  #if LANG_CXX11
  void set_pubkey(::std::string&& value);
  #endif
  void set_pubkey(const char* value);
  void set_pubkey(const void* value, size_t size);
  ::std::string* mutable_pubkey();
  ::std::string* release_pubkey();
  void set_allocated_pubkey(::std::string* pubkey);

  // bytes Data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // bytes Signature = 4;
  void clear_signature();
  static const int kSignatureFieldNumber = 4;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // .grep11.Mechanism Mech = 2;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 2;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.VerifySingleRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pubkey_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class VerifySingleResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.VerifySingleResponse) */ {
 public:
  VerifySingleResponse();
  virtual ~VerifySingleResponse();

  VerifySingleResponse(const VerifySingleResponse& from);

  inline VerifySingleResponse& operator=(const VerifySingleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerifySingleResponse(VerifySingleResponse&& from) noexcept
    : VerifySingleResponse() {
    *this = ::std::move(from);
  }

  inline VerifySingleResponse& operator=(VerifySingleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerifySingleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerifySingleResponse* internal_default_instance() {
    return reinterpret_cast<const VerifySingleResponse*>(
               &_VerifySingleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(VerifySingleResponse* other);
  friend void swap(VerifySingleResponse& a, VerifySingleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerifySingleResponse* New() const final {
    return CreateMaybeMessage<VerifySingleResponse>(nullptr);
  }

  VerifySingleResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerifySingleResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerifySingleResponse& from);
  void MergeFrom(const VerifySingleResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifySingleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:grep11.VerifySingleResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GenerateKeyRequest_TemplateEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GenerateKeyRequest_TemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<GenerateKeyRequest_TemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  GenerateKeyRequest_TemplateEntry_DoNotUse();
  GenerateKeyRequest_TemplateEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GenerateKeyRequest_TemplateEntry_DoNotUse& other);
  static const GenerateKeyRequest_TemplateEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GenerateKeyRequest_TemplateEntry_DoNotUse*>(&_GenerateKeyRequest_TemplateEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GenerateKeyRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GenerateKeyRequest) */ {
 public:
  GenerateKeyRequest();
  virtual ~GenerateKeyRequest();

  GenerateKeyRequest(const GenerateKeyRequest& from);

  inline GenerateKeyRequest& operator=(const GenerateKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateKeyRequest(GenerateKeyRequest&& from) noexcept
    : GenerateKeyRequest() {
    *this = ::std::move(from);
  }

  inline GenerateKeyRequest& operator=(GenerateKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GenerateKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateKeyRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateKeyRequest*>(
               &_GenerateKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(GenerateKeyRequest* other);
  friend void swap(GenerateKeyRequest& a, GenerateKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateKeyRequest* New() const final {
    return CreateMaybeMessage<GenerateKeyRequest>(nullptr);
  }

  GenerateKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateKeyRequest& from);
  void MergeFrom(const GenerateKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  int template__size() const;
  void clear_template_();
  static const int kTemplateFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      template_() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_template_();

  // string KeyId = 4;
  void clear_keyid();
  static const int kKeyIdFieldNumber = 4;
  const ::std::string& keyid() const;
  void set_keyid(const ::std::string& value);
  #if LANG_CXX11
  void set_keyid(::std::string&& value);
  #endif
  void set_keyid(const char* value);
  void set_keyid(const char* value, size_t size);
  ::std::string* mutable_keyid();
  ::std::string* release_keyid();
  void set_allocated_keyid(::std::string* keyid);

  // .grep11.Mechanism Mech = 1;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 1;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.GenerateKeyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GenerateKeyRequest_TemplateEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > template__;
  ::google::protobuf::internal::ArenaStringPtr keyid_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GenerateKeyResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GenerateKeyResponse) */ {
 public:
  GenerateKeyResponse();
  virtual ~GenerateKeyResponse();

  GenerateKeyResponse(const GenerateKeyResponse& from);

  inline GenerateKeyResponse& operator=(const GenerateKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateKeyResponse(GenerateKeyResponse&& from) noexcept
    : GenerateKeyResponse() {
    *this = ::std::move(from);
  }

  inline GenerateKeyResponse& operator=(GenerateKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GenerateKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateKeyResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateKeyResponse*>(
               &_GenerateKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(GenerateKeyResponse* other);
  friend void swap(GenerateKeyResponse& a, GenerateKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateKeyResponse* New() const final {
    return CreateMaybeMessage<GenerateKeyResponse>(nullptr);
  }

  GenerateKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateKeyResponse& from);
  void MergeFrom(const GenerateKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes CheckSum = 5;
  void clear_checksum();
  static const int kCheckSumFieldNumber = 5;
  const ::std::string& checksum() const;
  void set_checksum(const ::std::string& value);
  #if LANG_CXX11
  void set_checksum(::std::string&& value);
  #endif
  void set_checksum(const char* value);
  void set_checksum(const void* value, size_t size);
  ::std::string* mutable_checksum();
  ::std::string* release_checksum();
  void set_allocated_checksum(::std::string* checksum);

  // @@protoc_insertion_point(class_scope:grep11.GenerateKeyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr checksum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse();
  GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse& other);
  static const GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse*>(&_GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse();
  GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse& other);
  static const GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse*>(&_GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GenerateKeyPairRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GenerateKeyPairRequest) */ {
 public:
  GenerateKeyPairRequest();
  virtual ~GenerateKeyPairRequest();

  GenerateKeyPairRequest(const GenerateKeyPairRequest& from);

  inline GenerateKeyPairRequest& operator=(const GenerateKeyPairRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateKeyPairRequest(GenerateKeyPairRequest&& from) noexcept
    : GenerateKeyPairRequest() {
    *this = ::std::move(from);
  }

  inline GenerateKeyPairRequest& operator=(GenerateKeyPairRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GenerateKeyPairRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateKeyPairRequest* internal_default_instance() {
    return reinterpret_cast<const GenerateKeyPairRequest*>(
               &_GenerateKeyPairRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(GenerateKeyPairRequest* other);
  friend void swap(GenerateKeyPairRequest& a, GenerateKeyPairRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateKeyPairRequest* New() const final {
    return CreateMaybeMessage<GenerateKeyPairRequest>(nullptr);
  }

  GenerateKeyPairRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateKeyPairRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateKeyPairRequest& from);
  void MergeFrom(const GenerateKeyPairRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateKeyPairRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, bytes> PubKeyTemplate = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  int pubkeytemplate_size() const;
  void clear_pubkeytemplate();
  static const int kPubKeyTemplateFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      pubkeytemplate() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_pubkeytemplate();

  // map<uint64, bytes> PrivKeyTemplate = 3 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  int privkeytemplate_size() const;
  void clear_privkeytemplate();
  static const int kPrivKeyTemplateFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      privkeytemplate() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_privkeytemplate();

  // string PrivKeyId = 5;
  void clear_privkeyid();
  static const int kPrivKeyIdFieldNumber = 5;
  const ::std::string& privkeyid() const;
  void set_privkeyid(const ::std::string& value);
  #if LANG_CXX11
  void set_privkeyid(::std::string&& value);
  #endif
  void set_privkeyid(const char* value);
  void set_privkeyid(const char* value, size_t size);
  ::std::string* mutable_privkeyid();
  ::std::string* release_privkeyid();
  void set_allocated_privkeyid(::std::string* privkeyid);

  // string PubKeyId = 6;
  void clear_pubkeyid();
  static const int kPubKeyIdFieldNumber = 6;
  const ::std::string& pubkeyid() const;
  void set_pubkeyid(const ::std::string& value);
  #if LANG_CXX11
  void set_pubkeyid(::std::string&& value);
  #endif
  void set_pubkeyid(const char* value);
  void set_pubkeyid(const char* value, size_t size);
  ::std::string* mutable_pubkeyid();
  ::std::string* release_pubkeyid();
  void set_allocated_pubkeyid(::std::string* pubkeyid);

  // .grep11.Mechanism Mech = 1;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 1;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.GenerateKeyPairRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GenerateKeyPairRequest_PubKeyTemplateEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pubkeytemplate_;
  ::google::protobuf::internal::MapField<
      GenerateKeyPairRequest_PrivKeyTemplateEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > privkeytemplate_;
  ::google::protobuf::internal::ArenaStringPtr privkeyid_;
  ::google::protobuf::internal::ArenaStringPtr pubkeyid_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GenerateKeyPairResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GenerateKeyPairResponse) */ {
 public:
  GenerateKeyPairResponse();
  virtual ~GenerateKeyPairResponse();

  GenerateKeyPairResponse(const GenerateKeyPairResponse& from);

  inline GenerateKeyPairResponse& operator=(const GenerateKeyPairResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerateKeyPairResponse(GenerateKeyPairResponse&& from) noexcept
    : GenerateKeyPairResponse() {
    *this = ::std::move(from);
  }

  inline GenerateKeyPairResponse& operator=(GenerateKeyPairResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GenerateKeyPairResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerateKeyPairResponse* internal_default_instance() {
    return reinterpret_cast<const GenerateKeyPairResponse*>(
               &_GenerateKeyPairResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(GenerateKeyPairResponse* other);
  friend void swap(GenerateKeyPairResponse& a, GenerateKeyPairResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerateKeyPairResponse* New() const final {
    return CreateMaybeMessage<GenerateKeyPairResponse>(nullptr);
  }

  GenerateKeyPairResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerateKeyPairResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerateKeyPairResponse& from);
  void MergeFrom(const GenerateKeyPairResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerateKeyPairResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes PrivKey = 5;
  void clear_privkey();
  static const int kPrivKeyFieldNumber = 5;
  const ::std::string& privkey() const;
  void set_privkey(const ::std::string& value);
  #if LANG_CXX11
  void set_privkey(::std::string&& value);
  #endif
  void set_privkey(const char* value);
  void set_privkey(const void* value, size_t size);
  ::std::string* mutable_privkey();
  ::std::string* release_privkey();
  void set_allocated_privkey(::std::string* privkey);

  // bytes PubKey = 6;
  void clear_pubkey();
  static const int kPubKeyFieldNumber = 6;
  const ::std::string& pubkey() const;
  void set_pubkey(const ::std::string& value);
  #if LANG_CXX11
  void set_pubkey(::std::string&& value);
  #endif
  void set_pubkey(const char* value);
  void set_pubkey(const void* value, size_t size);
  ::std::string* mutable_pubkey();
  ::std::string* release_pubkey();
  void set_allocated_pubkey(::std::string* pubkey);

  // @@protoc_insertion_point(class_scope:grep11.GenerateKeyPairResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr privkey_;
  ::google::protobuf::internal::ArenaStringPtr pubkey_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class WrapKeyRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.WrapKeyRequest) */ {
 public:
  WrapKeyRequest();
  virtual ~WrapKeyRequest();

  WrapKeyRequest(const WrapKeyRequest& from);

  inline WrapKeyRequest& operator=(const WrapKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WrapKeyRequest(WrapKeyRequest&& from) noexcept
    : WrapKeyRequest() {
    *this = ::std::move(from);
  }

  inline WrapKeyRequest& operator=(WrapKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WrapKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WrapKeyRequest* internal_default_instance() {
    return reinterpret_cast<const WrapKeyRequest*>(
               &_WrapKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(WrapKeyRequest* other);
  friend void swap(WrapKeyRequest& a, WrapKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WrapKeyRequest* New() const final {
    return CreateMaybeMessage<WrapKeyRequest>(nullptr);
  }

  WrapKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WrapKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WrapKeyRequest& from);
  void MergeFrom(const WrapKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WrapKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes KeK = 2;
  void clear_kek();
  static const int kKeKFieldNumber = 2;
  const ::std::string& kek() const;
  void set_kek(const ::std::string& value);
  #if LANG_CXX11
  void set_kek(::std::string&& value);
  #endif
  void set_kek(const char* value);
  void set_kek(const void* value, size_t size);
  ::std::string* mutable_kek();
  ::std::string* release_kek();
  void set_allocated_kek(::std::string* kek);

  // bytes MacKey = 3;
  void clear_mackey();
  static const int kMacKeyFieldNumber = 3;
  const ::std::string& mackey() const;
  void set_mackey(const ::std::string& value);
  #if LANG_CXX11
  void set_mackey(::std::string&& value);
  #endif
  void set_mackey(const char* value);
  void set_mackey(const void* value, size_t size);
  ::std::string* mutable_mackey();
  ::std::string* release_mackey();
  void set_allocated_mackey(::std::string* mackey);

  // .grep11.Mechanism Mech = 4;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 4;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.WrapKeyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr kek_;
  ::google::protobuf::internal::ArenaStringPtr mackey_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class WrapKeyResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.WrapKeyResponse) */ {
 public:
  WrapKeyResponse();
  virtual ~WrapKeyResponse();

  WrapKeyResponse(const WrapKeyResponse& from);

  inline WrapKeyResponse& operator=(const WrapKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WrapKeyResponse(WrapKeyResponse&& from) noexcept
    : WrapKeyResponse() {
    *this = ::std::move(from);
  }

  inline WrapKeyResponse& operator=(WrapKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WrapKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WrapKeyResponse* internal_default_instance() {
    return reinterpret_cast<const WrapKeyResponse*>(
               &_WrapKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(WrapKeyResponse* other);
  friend void swap(WrapKeyResponse& a, WrapKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WrapKeyResponse* New() const final {
    return CreateMaybeMessage<WrapKeyResponse>(nullptr);
  }

  WrapKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WrapKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WrapKeyResponse& from);
  void MergeFrom(const WrapKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WrapKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Wrapped = 5;
  void clear_wrapped();
  static const int kWrappedFieldNumber = 5;
  const ::std::string& wrapped() const;
  void set_wrapped(const ::std::string& value);
  #if LANG_CXX11
  void set_wrapped(::std::string&& value);
  #endif
  void set_wrapped(const char* value);
  void set_wrapped(const void* value, size_t size);
  ::std::string* mutable_wrapped();
  ::std::string* release_wrapped();
  void set_allocated_wrapped(::std::string* wrapped);

  // @@protoc_insertion_point(class_scope:grep11.WrapKeyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr wrapped_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class UnwrapKeyRequest_TemplateEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<UnwrapKeyRequest_TemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<UnwrapKeyRequest_TemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  UnwrapKeyRequest_TemplateEntry_DoNotUse();
  UnwrapKeyRequest_TemplateEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const UnwrapKeyRequest_TemplateEntry_DoNotUse& other);
  static const UnwrapKeyRequest_TemplateEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const UnwrapKeyRequest_TemplateEntry_DoNotUse*>(&_UnwrapKeyRequest_TemplateEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class UnwrapKeyRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.UnwrapKeyRequest) */ {
 public:
  UnwrapKeyRequest();
  virtual ~UnwrapKeyRequest();

  UnwrapKeyRequest(const UnwrapKeyRequest& from);

  inline UnwrapKeyRequest& operator=(const UnwrapKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnwrapKeyRequest(UnwrapKeyRequest&& from) noexcept
    : UnwrapKeyRequest() {
    *this = ::std::move(from);
  }

  inline UnwrapKeyRequest& operator=(UnwrapKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UnwrapKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnwrapKeyRequest* internal_default_instance() {
    return reinterpret_cast<const UnwrapKeyRequest*>(
               &_UnwrapKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(UnwrapKeyRequest* other);
  friend void swap(UnwrapKeyRequest& a, UnwrapKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnwrapKeyRequest* New() const final {
    return CreateMaybeMessage<UnwrapKeyRequest>(nullptr);
  }

  UnwrapKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnwrapKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnwrapKeyRequest& from);
  void MergeFrom(const UnwrapKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnwrapKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, bytes> Template = 6 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  int template__size() const;
  void clear_template_();
  static const int kTemplateFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      template_() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_template_();

  // bytes Wrapped = 1;
  void clear_wrapped();
  static const int kWrappedFieldNumber = 1;
  const ::std::string& wrapped() const;
  void set_wrapped(const ::std::string& value);
  #if LANG_CXX11
  void set_wrapped(::std::string&& value);
  #endif
  void set_wrapped(const char* value);
  void set_wrapped(const void* value, size_t size);
  ::std::string* mutable_wrapped();
  ::std::string* release_wrapped();
  void set_allocated_wrapped(::std::string* wrapped);

  // bytes KeK = 2;
  void clear_kek();
  static const int kKeKFieldNumber = 2;
  const ::std::string& kek() const;
  void set_kek(const ::std::string& value);
  #if LANG_CXX11
  void set_kek(::std::string&& value);
  #endif
  void set_kek(const char* value);
  void set_kek(const void* value, size_t size);
  ::std::string* mutable_kek();
  ::std::string* release_kek();
  void set_allocated_kek(::std::string* kek);

  // bytes MacKey = 3;
  void clear_mackey();
  static const int kMacKeyFieldNumber = 3;
  const ::std::string& mackey() const;
  void set_mackey(const ::std::string& value);
  #if LANG_CXX11
  void set_mackey(::std::string&& value);
  #endif
  void set_mackey(const char* value);
  void set_mackey(const void* value, size_t size);
  ::std::string* mutable_mackey();
  ::std::string* release_mackey();
  void set_allocated_mackey(::std::string* mackey);

  // string UnwrappedId = 7;
  void clear_unwrappedid();
  static const int kUnwrappedIdFieldNumber = 7;
  const ::std::string& unwrappedid() const;
  void set_unwrappedid(const ::std::string& value);
  #if LANG_CXX11
  void set_unwrappedid(::std::string&& value);
  #endif
  void set_unwrappedid(const char* value);
  void set_unwrappedid(const char* value, size_t size);
  ::std::string* mutable_unwrappedid();
  ::std::string* release_unwrappedid();
  void set_allocated_unwrappedid(::std::string* unwrappedid);

  // .grep11.Mechanism Mech = 5;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 5;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.UnwrapKeyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      UnwrapKeyRequest_TemplateEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > template__;
  ::google::protobuf::internal::ArenaStringPtr wrapped_;
  ::google::protobuf::internal::ArenaStringPtr kek_;
  ::google::protobuf::internal::ArenaStringPtr mackey_;
  ::google::protobuf::internal::ArenaStringPtr unwrappedid_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class UnwrapKeyResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.UnwrapKeyResponse) */ {
 public:
  UnwrapKeyResponse();
  virtual ~UnwrapKeyResponse();

  UnwrapKeyResponse(const UnwrapKeyResponse& from);

  inline UnwrapKeyResponse& operator=(const UnwrapKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnwrapKeyResponse(UnwrapKeyResponse&& from) noexcept
    : UnwrapKeyResponse() {
    *this = ::std::move(from);
  }

  inline UnwrapKeyResponse& operator=(UnwrapKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UnwrapKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnwrapKeyResponse* internal_default_instance() {
    return reinterpret_cast<const UnwrapKeyResponse*>(
               &_UnwrapKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(UnwrapKeyResponse* other);
  friend void swap(UnwrapKeyResponse& a, UnwrapKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnwrapKeyResponse* New() const final {
    return CreateMaybeMessage<UnwrapKeyResponse>(nullptr);
  }

  UnwrapKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnwrapKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnwrapKeyResponse& from);
  void MergeFrom(const UnwrapKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnwrapKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Unwrapped = 7;
  void clear_unwrapped();
  static const int kUnwrappedFieldNumber = 7;
  const ::std::string& unwrapped() const;
  void set_unwrapped(const ::std::string& value);
  #if LANG_CXX11
  void set_unwrapped(::std::string&& value);
  #endif
  void set_unwrapped(const char* value);
  void set_unwrapped(const void* value, size_t size);
  ::std::string* mutable_unwrapped();
  ::std::string* release_unwrapped();
  void set_allocated_unwrapped(::std::string* unwrapped);

  // bytes CheckSum = 8;
  void clear_checksum();
  static const int kCheckSumFieldNumber = 8;
  const ::std::string& checksum() const;
  void set_checksum(const ::std::string& value);
  #if LANG_CXX11
  void set_checksum(::std::string&& value);
  #endif
  void set_checksum(const char* value);
  void set_checksum(const void* value, size_t size);
  ::std::string* mutable_checksum();
  ::std::string* release_checksum();
  void set_allocated_checksum(::std::string* checksum);

  // @@protoc_insertion_point(class_scope:grep11.UnwrapKeyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr unwrapped_;
  ::google::protobuf::internal::ArenaStringPtr checksum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DeriveKeyRequest_TemplateEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DeriveKeyRequest_TemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<DeriveKeyRequest_TemplateEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  DeriveKeyRequest_TemplateEntry_DoNotUse();
  DeriveKeyRequest_TemplateEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DeriveKeyRequest_TemplateEntry_DoNotUse& other);
  static const DeriveKeyRequest_TemplateEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DeriveKeyRequest_TemplateEntry_DoNotUse*>(&_DeriveKeyRequest_TemplateEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DeriveKeyRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DeriveKeyRequest) */ {
 public:
  DeriveKeyRequest();
  virtual ~DeriveKeyRequest();

  DeriveKeyRequest(const DeriveKeyRequest& from);

  inline DeriveKeyRequest& operator=(const DeriveKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeriveKeyRequest(DeriveKeyRequest&& from) noexcept
    : DeriveKeyRequest() {
    *this = ::std::move(from);
  }

  inline DeriveKeyRequest& operator=(DeriveKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeriveKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeriveKeyRequest* internal_default_instance() {
    return reinterpret_cast<const DeriveKeyRequest*>(
               &_DeriveKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(DeriveKeyRequest* other);
  friend void swap(DeriveKeyRequest& a, DeriveKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeriveKeyRequest* New() const final {
    return CreateMaybeMessage<DeriveKeyRequest>(nullptr);
  }

  DeriveKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeriveKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeriveKeyRequest& from);
  void MergeFrom(const DeriveKeyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeriveKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  int template__size() const;
  void clear_template_();
  static const int kTemplateFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      template_() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_template_();

  // bytes BaseKey = 3;
  void clear_basekey();
  static const int kBaseKeyFieldNumber = 3;
  const ::std::string& basekey() const;
  void set_basekey(const ::std::string& value);
  #if LANG_CXX11
  void set_basekey(::std::string&& value);
  #endif
  void set_basekey(const char* value);
  void set_basekey(const void* value, size_t size);
  ::std::string* mutable_basekey();
  ::std::string* release_basekey();
  void set_allocated_basekey(::std::string* basekey);

  // bytes Data = 4;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string NewKeyId = 6;
  void clear_newkeyid();
  static const int kNewKeyIdFieldNumber = 6;
  const ::std::string& newkeyid() const;
  void set_newkeyid(const ::std::string& value);
  #if LANG_CXX11
  void set_newkeyid(::std::string&& value);
  #endif
  void set_newkeyid(const char* value);
  void set_newkeyid(const char* value, size_t size);
  ::std::string* mutable_newkeyid();
  ::std::string* release_newkeyid();
  void set_allocated_newkeyid(::std::string* newkeyid);

  // .grep11.Mechanism Mech = 1;
  bool has_mech() const;
  void clear_mech();
  static const int kMechFieldNumber = 1;
  const ::grep11::Mechanism& mech() const;
  ::grep11::Mechanism* release_mech();
  ::grep11::Mechanism* mutable_mech();
  void set_allocated_mech(::grep11::Mechanism* mech);

  // @@protoc_insertion_point(class_scope:grep11.DeriveKeyRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DeriveKeyRequest_TemplateEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > template__;
  ::google::protobuf::internal::ArenaStringPtr basekey_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr newkeyid_;
  ::grep11::Mechanism* mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class DeriveKeyResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.DeriveKeyResponse) */ {
 public:
  DeriveKeyResponse();
  virtual ~DeriveKeyResponse();

  DeriveKeyResponse(const DeriveKeyResponse& from);

  inline DeriveKeyResponse& operator=(const DeriveKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeriveKeyResponse(DeriveKeyResponse&& from) noexcept
    : DeriveKeyResponse() {
    *this = ::std::move(from);
  }

  inline DeriveKeyResponse& operator=(DeriveKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeriveKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeriveKeyResponse* internal_default_instance() {
    return reinterpret_cast<const DeriveKeyResponse*>(
               &_DeriveKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(DeriveKeyResponse* other);
  friend void swap(DeriveKeyResponse& a, DeriveKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeriveKeyResponse* New() const final {
    return CreateMaybeMessage<DeriveKeyResponse>(nullptr);
  }

  DeriveKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeriveKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeriveKeyResponse& from);
  void MergeFrom(const DeriveKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeriveKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes NewKey = 6;
  void clear_newkey();
  static const int kNewKeyFieldNumber = 6;
  const ::std::string& newkey() const;
  void set_newkey(const ::std::string& value);
  #if LANG_CXX11
  void set_newkey(::std::string&& value);
  #endif
  void set_newkey(const char* value);
  void set_newkey(const void* value, size_t size);
  ::std::string* mutable_newkey();
  ::std::string* release_newkey();
  void set_allocated_newkey(::std::string* newkey);

  // bytes CheckSum = 7;
  void clear_checksum();
  static const int kCheckSumFieldNumber = 7;
  const ::std::string& checksum() const;
  void set_checksum(const ::std::string& value);
  #if LANG_CXX11
  void set_checksum(::std::string&& value);
  #endif
  void set_checksum(const char* value);
  void set_checksum(const void* value, size_t size);
  ::std::string* mutable_checksum();
  ::std::string* release_checksum();
  void set_allocated_checksum(::std::string* checksum);

  // @@protoc_insertion_point(class_scope:grep11.DeriveKeyResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr newkey_;
  ::google::protobuf::internal::ArenaStringPtr checksum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GetMechanismListRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GetMechanismListRequest) */ {
 public:
  GetMechanismListRequest();
  virtual ~GetMechanismListRequest();

  GetMechanismListRequest(const GetMechanismListRequest& from);

  inline GetMechanismListRequest& operator=(const GetMechanismListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMechanismListRequest(GetMechanismListRequest&& from) noexcept
    : GetMechanismListRequest() {
    *this = ::std::move(from);
  }

  inline GetMechanismListRequest& operator=(GetMechanismListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetMechanismListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMechanismListRequest* internal_default_instance() {
    return reinterpret_cast<const GetMechanismListRequest*>(
               &_GetMechanismListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(GetMechanismListRequest* other);
  friend void swap(GetMechanismListRequest& a, GetMechanismListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMechanismListRequest* New() const final {
    return CreateMaybeMessage<GetMechanismListRequest>(nullptr);
  }

  GetMechanismListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMechanismListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMechanismListRequest& from);
  void MergeFrom(const GetMechanismListRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMechanismListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:grep11.GetMechanismListRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GetMechanismListResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GetMechanismListResponse) */ {
 public:
  GetMechanismListResponse();
  virtual ~GetMechanismListResponse();

  GetMechanismListResponse(const GetMechanismListResponse& from);

  inline GetMechanismListResponse& operator=(const GetMechanismListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMechanismListResponse(GetMechanismListResponse&& from) noexcept
    : GetMechanismListResponse() {
    *this = ::std::move(from);
  }

  inline GetMechanismListResponse& operator=(GetMechanismListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetMechanismListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMechanismListResponse* internal_default_instance() {
    return reinterpret_cast<const GetMechanismListResponse*>(
               &_GetMechanismListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(GetMechanismListResponse* other);
  friend void swap(GetMechanismListResponse& a, GetMechanismListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMechanismListResponse* New() const final {
    return CreateMaybeMessage<GetMechanismListResponse>(nullptr);
  }

  GetMechanismListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMechanismListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMechanismListResponse& from);
  void MergeFrom(const GetMechanismListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMechanismListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 Mechs = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  int mechs_size() const;
  void clear_mechs();
  static const int kMechsFieldNumber = 2;
  ::google::protobuf::uint64 mechs(int index) const;
  void set_mechs(int index, ::google::protobuf::uint64 value);
  void add_mechs(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mechs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mechs();

  // @@protoc_insertion_point(class_scope:grep11.GetMechanismListResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mechs_;
  mutable std::atomic<int> _mechs_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GetMechanismInfoRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GetMechanismInfoRequest) */ {
 public:
  GetMechanismInfoRequest();
  virtual ~GetMechanismInfoRequest();

  GetMechanismInfoRequest(const GetMechanismInfoRequest& from);

  inline GetMechanismInfoRequest& operator=(const GetMechanismInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMechanismInfoRequest(GetMechanismInfoRequest&& from) noexcept
    : GetMechanismInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetMechanismInfoRequest& operator=(GetMechanismInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetMechanismInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMechanismInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetMechanismInfoRequest*>(
               &_GetMechanismInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(GetMechanismInfoRequest* other);
  friend void swap(GetMechanismInfoRequest& a, GetMechanismInfoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMechanismInfoRequest* New() const final {
    return CreateMaybeMessage<GetMechanismInfoRequest>(nullptr);
  }

  GetMechanismInfoRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMechanismInfoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMechanismInfoRequest& from);
  void MergeFrom(const GetMechanismInfoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMechanismInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 Mech = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  void clear_mech();
  static const int kMechFieldNumber = 2;
  ::google::protobuf::uint64 mech() const;
  void set_mech(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grep11.GetMechanismInfoRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 mech_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GetMechanismInfoResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GetMechanismInfoResponse) */ {
 public:
  GetMechanismInfoResponse();
  virtual ~GetMechanismInfoResponse();

  GetMechanismInfoResponse(const GetMechanismInfoResponse& from);

  inline GetMechanismInfoResponse& operator=(const GetMechanismInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMechanismInfoResponse(GetMechanismInfoResponse&& from) noexcept
    : GetMechanismInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetMechanismInfoResponse& operator=(GetMechanismInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetMechanismInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMechanismInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetMechanismInfoResponse*>(
               &_GetMechanismInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(GetMechanismInfoResponse* other);
  friend void swap(GetMechanismInfoResponse& a, GetMechanismInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMechanismInfoResponse* New() const final {
    return CreateMaybeMessage<GetMechanismInfoResponse>(nullptr);
  }

  GetMechanismInfoResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMechanismInfoResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMechanismInfoResponse& from);
  void MergeFrom(const GetMechanismInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMechanismInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .grep11.MechanismInfo MechInfo = 3;
  bool has_mechinfo() const;
  void clear_mechinfo();
  static const int kMechInfoFieldNumber = 3;
  const ::grep11::MechanismInfo& mechinfo() const;
  ::grep11::MechanismInfo* release_mechinfo();
  ::grep11::MechanismInfo* mutable_mechinfo();
  void set_allocated_mechinfo(::grep11::MechanismInfo* mechinfo);

  // @@protoc_insertion_point(class_scope:grep11.GetMechanismInfoResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grep11::MechanismInfo* mechinfo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GetAttributeValueRequest_AttributesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetAttributeValueRequest_AttributesEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<GetAttributeValueRequest_AttributesEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  GetAttributeValueRequest_AttributesEntry_DoNotUse();
  GetAttributeValueRequest_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetAttributeValueRequest_AttributesEntry_DoNotUse& other);
  static const GetAttributeValueRequest_AttributesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetAttributeValueRequest_AttributesEntry_DoNotUse*>(&_GetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetAttributeValueRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GetAttributeValueRequest) */ {
 public:
  GetAttributeValueRequest();
  virtual ~GetAttributeValueRequest();

  GetAttributeValueRequest(const GetAttributeValueRequest& from);

  inline GetAttributeValueRequest& operator=(const GetAttributeValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAttributeValueRequest(GetAttributeValueRequest&& from) noexcept
    : GetAttributeValueRequest() {
    *this = ::std::move(from);
  }

  inline GetAttributeValueRequest& operator=(GetAttributeValueRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetAttributeValueRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAttributeValueRequest* internal_default_instance() {
    return reinterpret_cast<const GetAttributeValueRequest*>(
               &_GetAttributeValueRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(GetAttributeValueRequest* other);
  friend void swap(GetAttributeValueRequest& a, GetAttributeValueRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAttributeValueRequest* New() const final {
    return CreateMaybeMessage<GetAttributeValueRequest>(nullptr);
  }

  GetAttributeValueRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAttributeValueRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAttributeValueRequest& from);
  void MergeFrom(const GetAttributeValueRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAttributeValueRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  int attributes_size() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      attributes() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_attributes();

  // bytes Object = 1;
  void clear_object();
  static const int kObjectFieldNumber = 1;
  const ::std::string& object() const;
  void set_object(const ::std::string& value);
  #if LANG_CXX11
  void set_object(::std::string&& value);
  #endif
  void set_object(const char* value);
  void set_object(const void* value, size_t size);
  ::std::string* mutable_object();
  ::std::string* release_object();
  void set_allocated_object(::std::string* object);

  // @@protoc_insertion_point(class_scope:grep11.GetAttributeValueRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetAttributeValueRequest_AttributesEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > attributes_;
  ::google::protobuf::internal::ArenaStringPtr object_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class GetAttributeValueResponse_AttributesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetAttributeValueResponse_AttributesEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<GetAttributeValueResponse_AttributesEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  GetAttributeValueResponse_AttributesEntry_DoNotUse();
  GetAttributeValueResponse_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetAttributeValueResponse_AttributesEntry_DoNotUse& other);
  static const GetAttributeValueResponse_AttributesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetAttributeValueResponse_AttributesEntry_DoNotUse*>(&_GetAttributeValueResponse_AttributesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetAttributeValueResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.GetAttributeValueResponse) */ {
 public:
  GetAttributeValueResponse();
  virtual ~GetAttributeValueResponse();

  GetAttributeValueResponse(const GetAttributeValueResponse& from);

  inline GetAttributeValueResponse& operator=(const GetAttributeValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAttributeValueResponse(GetAttributeValueResponse&& from) noexcept
    : GetAttributeValueResponse() {
    *this = ::std::move(from);
  }

  inline GetAttributeValueResponse& operator=(GetAttributeValueResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetAttributeValueResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAttributeValueResponse* internal_default_instance() {
    return reinterpret_cast<const GetAttributeValueResponse*>(
               &_GetAttributeValueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(GetAttributeValueResponse* other);
  friend void swap(GetAttributeValueResponse& a, GetAttributeValueResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAttributeValueResponse* New() const final {
    return CreateMaybeMessage<GetAttributeValueResponse>(nullptr);
  }

  GetAttributeValueResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAttributeValueResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAttributeValueResponse& from);
  void MergeFrom(const GetAttributeValueResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAttributeValueResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  int attributes_size() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      attributes() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_attributes();

  // @@protoc_insertion_point(class_scope:grep11.GetAttributeValueResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetAttributeValueResponse_AttributesEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SetAttributeValueRequest_AttributesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SetAttributeValueRequest_AttributesEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<SetAttributeValueRequest_AttributesEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  SetAttributeValueRequest_AttributesEntry_DoNotUse();
  SetAttributeValueRequest_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SetAttributeValueRequest_AttributesEntry_DoNotUse& other);
  static const SetAttributeValueRequest_AttributesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SetAttributeValueRequest_AttributesEntry_DoNotUse*>(&_SetAttributeValueRequest_AttributesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SetAttributeValueRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SetAttributeValueRequest) */ {
 public:
  SetAttributeValueRequest();
  virtual ~SetAttributeValueRequest();

  SetAttributeValueRequest(const SetAttributeValueRequest& from);

  inline SetAttributeValueRequest& operator=(const SetAttributeValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetAttributeValueRequest(SetAttributeValueRequest&& from) noexcept
    : SetAttributeValueRequest() {
    *this = ::std::move(from);
  }

  inline SetAttributeValueRequest& operator=(SetAttributeValueRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetAttributeValueRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetAttributeValueRequest* internal_default_instance() {
    return reinterpret_cast<const SetAttributeValueRequest*>(
               &_SetAttributeValueRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(SetAttributeValueRequest* other);
  friend void swap(SetAttributeValueRequest& a, SetAttributeValueRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetAttributeValueRequest* New() const final {
    return CreateMaybeMessage<SetAttributeValueRequest>(nullptr);
  }

  SetAttributeValueRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetAttributeValueRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetAttributeValueRequest& from);
  void MergeFrom(const SetAttributeValueRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetAttributeValueRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
  int attributes_size() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      attributes() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_attributes();

  // bytes Object = 1;
  void clear_object();
  static const int kObjectFieldNumber = 1;
  const ::std::string& object() const;
  void set_object(const ::std::string& value);
  #if LANG_CXX11
  void set_object(::std::string&& value);
  #endif
  void set_object(const char* value);
  void set_object(const void* value, size_t size);
  ::std::string* mutable_object();
  ::std::string* release_object();
  void set_allocated_object(::std::string* object);

  // @@protoc_insertion_point(class_scope:grep11.SetAttributeValueRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SetAttributeValueRequest_AttributesEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > attributes_;
  ::google::protobuf::internal::ArenaStringPtr object_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class SetAttributeValueResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.SetAttributeValueResponse) */ {
 public:
  SetAttributeValueResponse();
  virtual ~SetAttributeValueResponse();

  SetAttributeValueResponse(const SetAttributeValueResponse& from);

  inline SetAttributeValueResponse& operator=(const SetAttributeValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetAttributeValueResponse(SetAttributeValueResponse&& from) noexcept
    : SetAttributeValueResponse() {
    *this = ::std::move(from);
  }

  inline SetAttributeValueResponse& operator=(SetAttributeValueResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetAttributeValueResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetAttributeValueResponse* internal_default_instance() {
    return reinterpret_cast<const SetAttributeValueResponse*>(
               &_SetAttributeValueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(SetAttributeValueResponse* other);
  friend void swap(SetAttributeValueResponse& a, SetAttributeValueResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetAttributeValueResponse* New() const final {
    return CreateMaybeMessage<SetAttributeValueResponse>(nullptr);
  }

  SetAttributeValueResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetAttributeValueResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetAttributeValueResponse& from);
  void MergeFrom(const SetAttributeValueResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetAttributeValueResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Object = 1;
  void clear_object();
  static const int kObjectFieldNumber = 1;
  const ::std::string& object() const;
  void set_object(const ::std::string& value);
  #if LANG_CXX11
  void set_object(::std::string&& value);
  #endif
  void set_object(const char* value);
  void set_object(const void* value, size_t size);
  ::std::string* mutable_object();
  ::std::string* release_object();
  void set_allocated_object(::std::string* object);

  // @@protoc_insertion_point(class_scope:grep11.SetAttributeValueResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr object_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class Mechanism :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.Mechanism) */ {
 public:
  Mechanism();
  virtual ~Mechanism();

  Mechanism(const Mechanism& from);

  inline Mechanism& operator=(const Mechanism& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Mechanism(Mechanism&& from) noexcept
    : Mechanism() {
    *this = ::std::move(from);
  }

  inline Mechanism& operator=(Mechanism&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Mechanism& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Mechanism* internal_default_instance() {
    return reinterpret_cast<const Mechanism*>(
               &_Mechanism_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(Mechanism* other);
  friend void swap(Mechanism& a, Mechanism& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Mechanism* New() const final {
    return CreateMaybeMessage<Mechanism>(nullptr);
  }

  Mechanism* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Mechanism>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Mechanism& from);
  void MergeFrom(const Mechanism& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Mechanism* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Parameter = 2;
  void clear_parameter();
  static const int kParameterFieldNumber = 2;
  const ::std::string& parameter() const;
  void set_parameter(const ::std::string& value);
  #if LANG_CXX11
  void set_parameter(::std::string&& value);
  #endif
  void set_parameter(const char* value);
  void set_parameter(const void* value, size_t size);
  ::std::string* mutable_parameter();
  ::std::string* release_parameter();
  void set_allocated_parameter(::std::string* parameter);

  // uint64 Mechanism = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
  void clear_mechanism();
  static const int kMechanismFieldNumber = 1;
  ::google::protobuf::uint64 mechanism() const;
  void set_mechanism(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grep11.Mechanism)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parameter_;
  ::google::protobuf::uint64 mechanism_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class MechanismInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.MechanismInfo) */ {
 public:
  MechanismInfo();
  virtual ~MechanismInfo();

  MechanismInfo(const MechanismInfo& from);

  inline MechanismInfo& operator=(const MechanismInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MechanismInfo(MechanismInfo&& from) noexcept
    : MechanismInfo() {
    *this = ::std::move(from);
  }

  inline MechanismInfo& operator=(MechanismInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MechanismInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MechanismInfo* internal_default_instance() {
    return reinterpret_cast<const MechanismInfo*>(
               &_MechanismInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(MechanismInfo* other);
  friend void swap(MechanismInfo& a, MechanismInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MechanismInfo* New() const final {
    return CreateMaybeMessage<MechanismInfo>(nullptr);
  }

  MechanismInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MechanismInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MechanismInfo& from);
  void MergeFrom(const MechanismInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MechanismInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 MinKeySize = 1;
  void clear_minkeysize();
  static const int kMinKeySizeFieldNumber = 1;
  ::google::protobuf::uint64 minkeysize() const;
  void set_minkeysize(::google::protobuf::uint64 value);

  // uint64 MaxKeySize = 2;
  void clear_maxkeysize();
  static const int kMaxKeySizeFieldNumber = 2;
  ::google::protobuf::uint64 maxkeysize() const;
  void set_maxkeysize(::google::protobuf::uint64 value);

  // uint64 Flags = 3;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::uint64 flags() const;
  void set_flags(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grep11.MechanismInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 minkeysize_;
  ::google::protobuf::uint64 maxkeysize_;
  ::google::protobuf::uint64 flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// -------------------------------------------------------------------

class Grep11Error :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grep11.Grep11Error) */ {
 public:
  Grep11Error();
  virtual ~Grep11Error();

  Grep11Error(const Grep11Error& from);

  inline Grep11Error& operator=(const Grep11Error& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Grep11Error(Grep11Error&& from) noexcept
    : Grep11Error() {
    *this = ::std::move(from);
  }

  inline Grep11Error& operator=(Grep11Error&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Grep11Error& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Grep11Error* internal_default_instance() {
    return reinterpret_cast<const Grep11Error*>(
               &_Grep11Error_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(Grep11Error* other);
  friend void swap(Grep11Error& a, Grep11Error& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Grep11Error* New() const final {
    return CreateMaybeMessage<Grep11Error>(nullptr);
  }

  Grep11Error* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Grep11Error>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Grep11Error& from);
  void MergeFrom(const Grep11Error& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Grep11Error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Detail = 2;
  void clear_detail();
  static const int kDetailFieldNumber = 2;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // uint64 Code = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Return"];
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::uint64 code() const;
  void set_code(::google::protobuf::uint64 value);

  // bool Retry = 3;
  void clear_retry();
  static const int kRetryFieldNumber = 3;
  bool retry() const;
  void set_retry(bool value);

  // @@protoc_insertion_point(class_scope:grep11.Grep11Error)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  ::google::protobuf::uint64 code_;
  bool retry_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GenerateRandomRequest

// uint64 Len = 1;
inline void GenerateRandomRequest::clear_len() {
  len_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GenerateRandomRequest::len() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateRandomRequest.Len)
  return len_;
}
inline void GenerateRandomRequest::set_len(::google::protobuf::uint64 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:grep11.GenerateRandomRequest.Len)
}

// -------------------------------------------------------------------

// GenerateRandomResponse

// bytes Rnd = 1;
inline void GenerateRandomResponse::clear_rnd() {
  rnd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateRandomResponse::rnd() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateRandomResponse.Rnd)
  return rnd_.GetNoArena();
}
inline void GenerateRandomResponse::set_rnd(const ::std::string& value) {
  
  rnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GenerateRandomResponse.Rnd)
}
#if LANG_CXX11
inline void GenerateRandomResponse::set_rnd(::std::string&& value) {
  
  rnd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GenerateRandomResponse.Rnd)
}
#endif
inline void GenerateRandomResponse::set_rnd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GenerateRandomResponse.Rnd)
}
inline void GenerateRandomResponse::set_rnd(const void* value, size_t size) {
  
  rnd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GenerateRandomResponse.Rnd)
}
inline ::std::string* GenerateRandomResponse::mutable_rnd() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GenerateRandomResponse.Rnd)
  return rnd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateRandomResponse::release_rnd() {
  // @@protoc_insertion_point(field_release:grep11.GenerateRandomResponse.Rnd)
  
  return rnd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateRandomResponse::set_allocated_rnd(::std::string* rnd) {
  if (rnd != nullptr) {
    
  } else {
    
  }
  rnd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rnd);
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateRandomResponse.Rnd)
}

// -------------------------------------------------------------------

// DigestInitRequest

// .grep11.Mechanism Mech = 2;
inline bool DigestInitRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void DigestInitRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& DigestInitRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.DigestInitRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* DigestInitRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.DigestInitRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* DigestInitRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.DigestInitRequest.Mech)
  return mech_;
}
inline void DigestInitRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestInitRequest.Mech)
}

// -------------------------------------------------------------------

// DigestInitResponse

// bytes State = 1;
inline void DigestInitResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestInitResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.DigestInitResponse.State)
  return state_.GetNoArena();
}
inline void DigestInitResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestInitResponse.State)
}
#if LANG_CXX11
inline void DigestInitResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestInitResponse.State)
}
#endif
inline void DigestInitResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestInitResponse.State)
}
inline void DigestInitResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestInitResponse.State)
}
inline ::std::string* DigestInitResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestInitResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestInitResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DigestInitResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestInitResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestInitResponse.State)
}

// -------------------------------------------------------------------

// DigestRequest

// bytes State = 1;
inline void DigestRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.DigestRequest.State)
  return state_.GetNoArena();
}
inline void DigestRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestRequest.State)
}
#if LANG_CXX11
inline void DigestRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestRequest.State)
}
#endif
inline void DigestRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestRequest.State)
}
inline void DigestRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestRequest.State)
}
inline ::std::string* DigestRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DigestRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestRequest.State)
}

// bytes Data = 2;
inline void DigestRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.DigestRequest.Data)
  return data_.GetNoArena();
}
inline void DigestRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestRequest.Data)
}
#if LANG_CXX11
inline void DigestRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestRequest.Data)
}
#endif
inline void DigestRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestRequest.Data)
}
inline void DigestRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestRequest.Data)
}
inline ::std::string* DigestRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.DigestRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestRequest.Data)
}

// -------------------------------------------------------------------

// DigestResponse

// bytes Digest = 3;
inline void DigestResponse::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestResponse::digest() const {
  // @@protoc_insertion_point(field_get:grep11.DigestResponse.Digest)
  return digest_.GetNoArena();
}
inline void DigestResponse::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestResponse.Digest)
}
#if LANG_CXX11
inline void DigestResponse::set_digest(::std::string&& value) {
  
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestResponse.Digest)
}
#endif
inline void DigestResponse::set_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestResponse.Digest)
}
inline void DigestResponse::set_digest(const void* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestResponse.Digest)
}
inline ::std::string* DigestResponse::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestResponse.Digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestResponse::release_digest() {
  // @@protoc_insertion_point(field_release:grep11.DigestResponse.Digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestResponse::set_allocated_digest(::std::string* digest) {
  if (digest != nullptr) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestResponse.Digest)
}

// -------------------------------------------------------------------

// DigestUpdateRequest

// bytes State = 1;
inline void DigestUpdateRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestUpdateRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.DigestUpdateRequest.State)
  return state_.GetNoArena();
}
inline void DigestUpdateRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestUpdateRequest.State)
}
#if LANG_CXX11
inline void DigestUpdateRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestUpdateRequest.State)
}
#endif
inline void DigestUpdateRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestUpdateRequest.State)
}
inline void DigestUpdateRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestUpdateRequest.State)
}
inline ::std::string* DigestUpdateRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestUpdateRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestUpdateRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DigestUpdateRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestUpdateRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestUpdateRequest.State)
}

// bytes Data = 2;
inline void DigestUpdateRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestUpdateRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.DigestUpdateRequest.Data)
  return data_.GetNoArena();
}
inline void DigestUpdateRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestUpdateRequest.Data)
}
#if LANG_CXX11
inline void DigestUpdateRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestUpdateRequest.Data)
}
#endif
inline void DigestUpdateRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestUpdateRequest.Data)
}
inline void DigestUpdateRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestUpdateRequest.Data)
}
inline ::std::string* DigestUpdateRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestUpdateRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestUpdateRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.DigestUpdateRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestUpdateRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestUpdateRequest.Data)
}

// -------------------------------------------------------------------

// DigestUpdateResponse

// bytes State = 1;
inline void DigestUpdateResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestUpdateResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.DigestUpdateResponse.State)
  return state_.GetNoArena();
}
inline void DigestUpdateResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestUpdateResponse.State)
}
#if LANG_CXX11
inline void DigestUpdateResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestUpdateResponse.State)
}
#endif
inline void DigestUpdateResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestUpdateResponse.State)
}
inline void DigestUpdateResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestUpdateResponse.State)
}
inline ::std::string* DigestUpdateResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestUpdateResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestUpdateResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DigestUpdateResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestUpdateResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestUpdateResponse.State)
}

// -------------------------------------------------------------------

// DigestKeyRequest

// bytes State = 1;
inline void DigestKeyRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestKeyRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.DigestKeyRequest.State)
  return state_.GetNoArena();
}
inline void DigestKeyRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestKeyRequest.State)
}
#if LANG_CXX11
inline void DigestKeyRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestKeyRequest.State)
}
#endif
inline void DigestKeyRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestKeyRequest.State)
}
inline void DigestKeyRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestKeyRequest.State)
}
inline ::std::string* DigestKeyRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestKeyRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestKeyRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DigestKeyRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestKeyRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestKeyRequest.State)
}

// bytes Key = 2;
inline void DigestKeyRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestKeyRequest::key() const {
  // @@protoc_insertion_point(field_get:grep11.DigestKeyRequest.Key)
  return key_.GetNoArena();
}
inline void DigestKeyRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestKeyRequest.Key)
}
#if LANG_CXX11
inline void DigestKeyRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestKeyRequest.Key)
}
#endif
inline void DigestKeyRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestKeyRequest.Key)
}
inline void DigestKeyRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestKeyRequest.Key)
}
inline ::std::string* DigestKeyRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestKeyRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestKeyRequest::release_key() {
  // @@protoc_insertion_point(field_release:grep11.DigestKeyRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestKeyRequest::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestKeyRequest.Key)
}

// -------------------------------------------------------------------

// DigestKeyResponse

// bytes State = 1;
inline void DigestKeyResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestKeyResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.DigestKeyResponse.State)
  return state_.GetNoArena();
}
inline void DigestKeyResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestKeyResponse.State)
}
#if LANG_CXX11
inline void DigestKeyResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestKeyResponse.State)
}
#endif
inline void DigestKeyResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestKeyResponse.State)
}
inline void DigestKeyResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestKeyResponse.State)
}
inline ::std::string* DigestKeyResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestKeyResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestKeyResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DigestKeyResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestKeyResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestKeyResponse.State)
}

// -------------------------------------------------------------------

// DigestFinalRequest

// bytes State = 1;
inline void DigestFinalRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestFinalRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.DigestFinalRequest.State)
  return state_.GetNoArena();
}
inline void DigestFinalRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestFinalRequest.State)
}
#if LANG_CXX11
inline void DigestFinalRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestFinalRequest.State)
}
#endif
inline void DigestFinalRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestFinalRequest.State)
}
inline void DigestFinalRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestFinalRequest.State)
}
inline ::std::string* DigestFinalRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestFinalRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestFinalRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DigestFinalRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestFinalRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestFinalRequest.State)
}

// -------------------------------------------------------------------

// DigestFinalResponse

// bytes Digest = 2;
inline void DigestFinalResponse::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestFinalResponse::digest() const {
  // @@protoc_insertion_point(field_get:grep11.DigestFinalResponse.Digest)
  return digest_.GetNoArena();
}
inline void DigestFinalResponse::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestFinalResponse.Digest)
}
#if LANG_CXX11
inline void DigestFinalResponse::set_digest(::std::string&& value) {
  
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestFinalResponse.Digest)
}
#endif
inline void DigestFinalResponse::set_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestFinalResponse.Digest)
}
inline void DigestFinalResponse::set_digest(const void* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestFinalResponse.Digest)
}
inline ::std::string* DigestFinalResponse::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestFinalResponse.Digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestFinalResponse::release_digest() {
  // @@protoc_insertion_point(field_release:grep11.DigestFinalResponse.Digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestFinalResponse::set_allocated_digest(::std::string* digest) {
  if (digest != nullptr) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestFinalResponse.Digest)
}

// -------------------------------------------------------------------

// DigestSingleRequest

// .grep11.Mechanism Mech = 1;
inline bool DigestSingleRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void DigestSingleRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& DigestSingleRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.DigestSingleRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* DigestSingleRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.DigestSingleRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* DigestSingleRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.DigestSingleRequest.Mech)
  return mech_;
}
inline void DigestSingleRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestSingleRequest.Mech)
}

// bytes Data = 2;
inline void DigestSingleRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestSingleRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.DigestSingleRequest.Data)
  return data_.GetNoArena();
}
inline void DigestSingleRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestSingleRequest.Data)
}
#if LANG_CXX11
inline void DigestSingleRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestSingleRequest.Data)
}
#endif
inline void DigestSingleRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestSingleRequest.Data)
}
inline void DigestSingleRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestSingleRequest.Data)
}
inline ::std::string* DigestSingleRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestSingleRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestSingleRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.DigestSingleRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestSingleRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestSingleRequest.Data)
}

// -------------------------------------------------------------------

// DigestSingleResponse

// bytes Digest = 3;
inline void DigestSingleResponse::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DigestSingleResponse::digest() const {
  // @@protoc_insertion_point(field_get:grep11.DigestSingleResponse.Digest)
  return digest_.GetNoArena();
}
inline void DigestSingleResponse::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DigestSingleResponse.Digest)
}
#if LANG_CXX11
inline void DigestSingleResponse::set_digest(::std::string&& value) {
  
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DigestSingleResponse.Digest)
}
#endif
inline void DigestSingleResponse::set_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DigestSingleResponse.Digest)
}
inline void DigestSingleResponse::set_digest(const void* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DigestSingleResponse.Digest)
}
inline ::std::string* DigestSingleResponse::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DigestSingleResponse.Digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DigestSingleResponse::release_digest() {
  // @@protoc_insertion_point(field_release:grep11.DigestSingleResponse.Digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DigestSingleResponse::set_allocated_digest(::std::string* digest) {
  if (digest != nullptr) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:grep11.DigestSingleResponse.Digest)
}

// -------------------------------------------------------------------

// EncryptInitRequest

// .grep11.Mechanism Mech = 2;
inline bool EncryptInitRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void EncryptInitRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& EncryptInitRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.EncryptInitRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* EncryptInitRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.EncryptInitRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* EncryptInitRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.EncryptInitRequest.Mech)
  return mech_;
}
inline void EncryptInitRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptInitRequest.Mech)
}

// bytes Key = 3;
inline void EncryptInitRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptInitRequest::key() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptInitRequest.Key)
  return key_.GetNoArena();
}
inline void EncryptInitRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptInitRequest.Key)
}
#if LANG_CXX11
inline void EncryptInitRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptInitRequest.Key)
}
#endif
inline void EncryptInitRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptInitRequest.Key)
}
inline void EncryptInitRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptInitRequest.Key)
}
inline ::std::string* EncryptInitRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptInitRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptInitRequest::release_key() {
  // @@protoc_insertion_point(field_release:grep11.EncryptInitRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptInitRequest::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptInitRequest.Key)
}

// -------------------------------------------------------------------

// EncryptInitResponse

// bytes State = 1;
inline void EncryptInitResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptInitResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptInitResponse.State)
  return state_.GetNoArena();
}
inline void EncryptInitResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptInitResponse.State)
}
#if LANG_CXX11
inline void EncryptInitResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptInitResponse.State)
}
#endif
inline void EncryptInitResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptInitResponse.State)
}
inline void EncryptInitResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptInitResponse.State)
}
inline ::std::string* EncryptInitResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptInitResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptInitResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.EncryptInitResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptInitResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptInitResponse.State)
}

// -------------------------------------------------------------------

// DecryptInitRequest

// .grep11.Mechanism Mech = 2;
inline bool DecryptInitRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void DecryptInitRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& DecryptInitRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.DecryptInitRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* DecryptInitRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.DecryptInitRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* DecryptInitRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.DecryptInitRequest.Mech)
  return mech_;
}
inline void DecryptInitRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptInitRequest.Mech)
}

// bytes Key = 3;
inline void DecryptInitRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptInitRequest::key() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptInitRequest.Key)
  return key_.GetNoArena();
}
inline void DecryptInitRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptInitRequest.Key)
}
#if LANG_CXX11
inline void DecryptInitRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptInitRequest.Key)
}
#endif
inline void DecryptInitRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptInitRequest.Key)
}
inline void DecryptInitRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptInitRequest.Key)
}
inline ::std::string* DecryptInitRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptInitRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptInitRequest::release_key() {
  // @@protoc_insertion_point(field_release:grep11.DecryptInitRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptInitRequest::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptInitRequest.Key)
}

// -------------------------------------------------------------------

// DecryptInitResponse

// bytes State = 1;
inline void DecryptInitResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptInitResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptInitResponse.State)
  return state_.GetNoArena();
}
inline void DecryptInitResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptInitResponse.State)
}
#if LANG_CXX11
inline void DecryptInitResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptInitResponse.State)
}
#endif
inline void DecryptInitResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptInitResponse.State)
}
inline void DecryptInitResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptInitResponse.State)
}
inline ::std::string* DecryptInitResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptInitResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptInitResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DecryptInitResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptInitResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptInitResponse.State)
}

// -------------------------------------------------------------------

// EncryptUpdateRequest

// bytes State = 1;
inline void EncryptUpdateRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptUpdateRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptUpdateRequest.State)
  return state_.GetNoArena();
}
inline void EncryptUpdateRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptUpdateRequest.State)
}
#if LANG_CXX11
inline void EncryptUpdateRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptUpdateRequest.State)
}
#endif
inline void EncryptUpdateRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptUpdateRequest.State)
}
inline void EncryptUpdateRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptUpdateRequest.State)
}
inline ::std::string* EncryptUpdateRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptUpdateRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptUpdateRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.EncryptUpdateRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptUpdateRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptUpdateRequest.State)
}

// bytes Plain = 2;
inline void EncryptUpdateRequest::clear_plain() {
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptUpdateRequest::plain() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptUpdateRequest.Plain)
  return plain_.GetNoArena();
}
inline void EncryptUpdateRequest::set_plain(const ::std::string& value) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptUpdateRequest.Plain)
}
#if LANG_CXX11
inline void EncryptUpdateRequest::set_plain(::std::string&& value) {
  
  plain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptUpdateRequest.Plain)
}
#endif
inline void EncryptUpdateRequest::set_plain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptUpdateRequest.Plain)
}
inline void EncryptUpdateRequest::set_plain(const void* value, size_t size) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptUpdateRequest.Plain)
}
inline ::std::string* EncryptUpdateRequest::mutable_plain() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptUpdateRequest.Plain)
  return plain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptUpdateRequest::release_plain() {
  // @@protoc_insertion_point(field_release:grep11.EncryptUpdateRequest.Plain)
  
  return plain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptUpdateRequest::set_allocated_plain(::std::string* plain) {
  if (plain != nullptr) {
    
  } else {
    
  }
  plain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plain);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptUpdateRequest.Plain)
}

// -------------------------------------------------------------------

// EncryptUpdateResponse

// bytes State = 1;
inline void EncryptUpdateResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptUpdateResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptUpdateResponse.State)
  return state_.GetNoArena();
}
inline void EncryptUpdateResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptUpdateResponse.State)
}
#if LANG_CXX11
inline void EncryptUpdateResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptUpdateResponse.State)
}
#endif
inline void EncryptUpdateResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptUpdateResponse.State)
}
inline void EncryptUpdateResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptUpdateResponse.State)
}
inline ::std::string* EncryptUpdateResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptUpdateResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptUpdateResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.EncryptUpdateResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptUpdateResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptUpdateResponse.State)
}

// bytes Ciphered = 3;
inline void EncryptUpdateResponse::clear_ciphered() {
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptUpdateResponse::ciphered() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptUpdateResponse.Ciphered)
  return ciphered_.GetNoArena();
}
inline void EncryptUpdateResponse::set_ciphered(const ::std::string& value) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptUpdateResponse.Ciphered)
}
#if LANG_CXX11
inline void EncryptUpdateResponse::set_ciphered(::std::string&& value) {
  
  ciphered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptUpdateResponse.Ciphered)
}
#endif
inline void EncryptUpdateResponse::set_ciphered(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptUpdateResponse.Ciphered)
}
inline void EncryptUpdateResponse::set_ciphered(const void* value, size_t size) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptUpdateResponse.Ciphered)
}
inline ::std::string* EncryptUpdateResponse::mutable_ciphered() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptUpdateResponse.Ciphered)
  return ciphered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptUpdateResponse::release_ciphered() {
  // @@protoc_insertion_point(field_release:grep11.EncryptUpdateResponse.Ciphered)
  
  return ciphered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptUpdateResponse::set_allocated_ciphered(::std::string* ciphered) {
  if (ciphered != nullptr) {
    
  } else {
    
  }
  ciphered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphered);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptUpdateResponse.Ciphered)
}

// -------------------------------------------------------------------

// DecryptUpdateRequest

// bytes State = 1;
inline void DecryptUpdateRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptUpdateRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptUpdateRequest.State)
  return state_.GetNoArena();
}
inline void DecryptUpdateRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptUpdateRequest.State)
}
#if LANG_CXX11
inline void DecryptUpdateRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptUpdateRequest.State)
}
#endif
inline void DecryptUpdateRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptUpdateRequest.State)
}
inline void DecryptUpdateRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptUpdateRequest.State)
}
inline ::std::string* DecryptUpdateRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptUpdateRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptUpdateRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DecryptUpdateRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptUpdateRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptUpdateRequest.State)
}

// bytes Ciphered = 2;
inline void DecryptUpdateRequest::clear_ciphered() {
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptUpdateRequest::ciphered() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptUpdateRequest.Ciphered)
  return ciphered_.GetNoArena();
}
inline void DecryptUpdateRequest::set_ciphered(const ::std::string& value) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptUpdateRequest.Ciphered)
}
#if LANG_CXX11
inline void DecryptUpdateRequest::set_ciphered(::std::string&& value) {
  
  ciphered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptUpdateRequest.Ciphered)
}
#endif
inline void DecryptUpdateRequest::set_ciphered(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptUpdateRequest.Ciphered)
}
inline void DecryptUpdateRequest::set_ciphered(const void* value, size_t size) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptUpdateRequest.Ciphered)
}
inline ::std::string* DecryptUpdateRequest::mutable_ciphered() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptUpdateRequest.Ciphered)
  return ciphered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptUpdateRequest::release_ciphered() {
  // @@protoc_insertion_point(field_release:grep11.DecryptUpdateRequest.Ciphered)
  
  return ciphered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptUpdateRequest::set_allocated_ciphered(::std::string* ciphered) {
  if (ciphered != nullptr) {
    
  } else {
    
  }
  ciphered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphered);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptUpdateRequest.Ciphered)
}

// -------------------------------------------------------------------

// DecryptUpdateResponse

// bytes State = 1;
inline void DecryptUpdateResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptUpdateResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptUpdateResponse.State)
  return state_.GetNoArena();
}
inline void DecryptUpdateResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptUpdateResponse.State)
}
#if LANG_CXX11
inline void DecryptUpdateResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptUpdateResponse.State)
}
#endif
inline void DecryptUpdateResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptUpdateResponse.State)
}
inline void DecryptUpdateResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptUpdateResponse.State)
}
inline ::std::string* DecryptUpdateResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptUpdateResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptUpdateResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DecryptUpdateResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptUpdateResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptUpdateResponse.State)
}

// bytes Plain = 3;
inline void DecryptUpdateResponse::clear_plain() {
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptUpdateResponse::plain() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptUpdateResponse.Plain)
  return plain_.GetNoArena();
}
inline void DecryptUpdateResponse::set_plain(const ::std::string& value) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptUpdateResponse.Plain)
}
#if LANG_CXX11
inline void DecryptUpdateResponse::set_plain(::std::string&& value) {
  
  plain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptUpdateResponse.Plain)
}
#endif
inline void DecryptUpdateResponse::set_plain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptUpdateResponse.Plain)
}
inline void DecryptUpdateResponse::set_plain(const void* value, size_t size) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptUpdateResponse.Plain)
}
inline ::std::string* DecryptUpdateResponse::mutable_plain() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptUpdateResponse.Plain)
  return plain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptUpdateResponse::release_plain() {
  // @@protoc_insertion_point(field_release:grep11.DecryptUpdateResponse.Plain)
  
  return plain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptUpdateResponse::set_allocated_plain(::std::string* plain) {
  if (plain != nullptr) {
    
  } else {
    
  }
  plain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plain);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptUpdateResponse.Plain)
}

// -------------------------------------------------------------------

// EncryptRequest

// bytes State = 1;
inline void EncryptRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptRequest.State)
  return state_.GetNoArena();
}
inline void EncryptRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptRequest.State)
}
#if LANG_CXX11
inline void EncryptRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptRequest.State)
}
#endif
inline void EncryptRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptRequest.State)
}
inline void EncryptRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptRequest.State)
}
inline ::std::string* EncryptRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.EncryptRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptRequest.State)
}

// bytes Plain = 2;
inline void EncryptRequest::clear_plain() {
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptRequest::plain() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptRequest.Plain)
  return plain_.GetNoArena();
}
inline void EncryptRequest::set_plain(const ::std::string& value) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptRequest.Plain)
}
#if LANG_CXX11
inline void EncryptRequest::set_plain(::std::string&& value) {
  
  plain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptRequest.Plain)
}
#endif
inline void EncryptRequest::set_plain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptRequest.Plain)
}
inline void EncryptRequest::set_plain(const void* value, size_t size) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptRequest.Plain)
}
inline ::std::string* EncryptRequest::mutable_plain() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptRequest.Plain)
  return plain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptRequest::release_plain() {
  // @@protoc_insertion_point(field_release:grep11.EncryptRequest.Plain)
  
  return plain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptRequest::set_allocated_plain(::std::string* plain) {
  if (plain != nullptr) {
    
  } else {
    
  }
  plain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plain);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptRequest.Plain)
}

// -------------------------------------------------------------------

// EncryptResponse

// bytes Ciphered = 3;
inline void EncryptResponse::clear_ciphered() {
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptResponse::ciphered() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptResponse.Ciphered)
  return ciphered_.GetNoArena();
}
inline void EncryptResponse::set_ciphered(const ::std::string& value) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptResponse.Ciphered)
}
#if LANG_CXX11
inline void EncryptResponse::set_ciphered(::std::string&& value) {
  
  ciphered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptResponse.Ciphered)
}
#endif
inline void EncryptResponse::set_ciphered(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptResponse.Ciphered)
}
inline void EncryptResponse::set_ciphered(const void* value, size_t size) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptResponse.Ciphered)
}
inline ::std::string* EncryptResponse::mutable_ciphered() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptResponse.Ciphered)
  return ciphered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptResponse::release_ciphered() {
  // @@protoc_insertion_point(field_release:grep11.EncryptResponse.Ciphered)
  
  return ciphered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptResponse::set_allocated_ciphered(::std::string* ciphered) {
  if (ciphered != nullptr) {
    
  } else {
    
  }
  ciphered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphered);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptResponse.Ciphered)
}

// -------------------------------------------------------------------

// DecryptRequest

// bytes State = 1;
inline void DecryptRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptRequest.State)
  return state_.GetNoArena();
}
inline void DecryptRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptRequest.State)
}
#if LANG_CXX11
inline void DecryptRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptRequest.State)
}
#endif
inline void DecryptRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptRequest.State)
}
inline void DecryptRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptRequest.State)
}
inline ::std::string* DecryptRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DecryptRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptRequest.State)
}

// bytes Ciphered = 2;
inline void DecryptRequest::clear_ciphered() {
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptRequest::ciphered() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptRequest.Ciphered)
  return ciphered_.GetNoArena();
}
inline void DecryptRequest::set_ciphered(const ::std::string& value) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptRequest.Ciphered)
}
#if LANG_CXX11
inline void DecryptRequest::set_ciphered(::std::string&& value) {
  
  ciphered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptRequest.Ciphered)
}
#endif
inline void DecryptRequest::set_ciphered(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptRequest.Ciphered)
}
inline void DecryptRequest::set_ciphered(const void* value, size_t size) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptRequest.Ciphered)
}
inline ::std::string* DecryptRequest::mutable_ciphered() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptRequest.Ciphered)
  return ciphered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptRequest::release_ciphered() {
  // @@protoc_insertion_point(field_release:grep11.DecryptRequest.Ciphered)
  
  return ciphered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptRequest::set_allocated_ciphered(::std::string* ciphered) {
  if (ciphered != nullptr) {
    
  } else {
    
  }
  ciphered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphered);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptRequest.Ciphered)
}

// -------------------------------------------------------------------

// DecryptResponse

// bytes Plain = 3;
inline void DecryptResponse::clear_plain() {
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptResponse::plain() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptResponse.Plain)
  return plain_.GetNoArena();
}
inline void DecryptResponse::set_plain(const ::std::string& value) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptResponse.Plain)
}
#if LANG_CXX11
inline void DecryptResponse::set_plain(::std::string&& value) {
  
  plain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptResponse.Plain)
}
#endif
inline void DecryptResponse::set_plain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptResponse.Plain)
}
inline void DecryptResponse::set_plain(const void* value, size_t size) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptResponse.Plain)
}
inline ::std::string* DecryptResponse::mutable_plain() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptResponse.Plain)
  return plain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptResponse::release_plain() {
  // @@protoc_insertion_point(field_release:grep11.DecryptResponse.Plain)
  
  return plain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptResponse::set_allocated_plain(::std::string* plain) {
  if (plain != nullptr) {
    
  } else {
    
  }
  plain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plain);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptResponse.Plain)
}

// -------------------------------------------------------------------

// EncryptFinalRequest

// bytes State = 1;
inline void EncryptFinalRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptFinalRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptFinalRequest.State)
  return state_.GetNoArena();
}
inline void EncryptFinalRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptFinalRequest.State)
}
#if LANG_CXX11
inline void EncryptFinalRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptFinalRequest.State)
}
#endif
inline void EncryptFinalRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptFinalRequest.State)
}
inline void EncryptFinalRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptFinalRequest.State)
}
inline ::std::string* EncryptFinalRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptFinalRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptFinalRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.EncryptFinalRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptFinalRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptFinalRequest.State)
}

// -------------------------------------------------------------------

// EncryptFinalResponse

// bytes Ciphered = 2;
inline void EncryptFinalResponse::clear_ciphered() {
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptFinalResponse::ciphered() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptFinalResponse.Ciphered)
  return ciphered_.GetNoArena();
}
inline void EncryptFinalResponse::set_ciphered(const ::std::string& value) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptFinalResponse.Ciphered)
}
#if LANG_CXX11
inline void EncryptFinalResponse::set_ciphered(::std::string&& value) {
  
  ciphered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptFinalResponse.Ciphered)
}
#endif
inline void EncryptFinalResponse::set_ciphered(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptFinalResponse.Ciphered)
}
inline void EncryptFinalResponse::set_ciphered(const void* value, size_t size) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptFinalResponse.Ciphered)
}
inline ::std::string* EncryptFinalResponse::mutable_ciphered() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptFinalResponse.Ciphered)
  return ciphered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptFinalResponse::release_ciphered() {
  // @@protoc_insertion_point(field_release:grep11.EncryptFinalResponse.Ciphered)
  
  return ciphered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptFinalResponse::set_allocated_ciphered(::std::string* ciphered) {
  if (ciphered != nullptr) {
    
  } else {
    
  }
  ciphered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphered);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptFinalResponse.Ciphered)
}

// -------------------------------------------------------------------

// DecryptFinalRequest

// bytes State = 1;
inline void DecryptFinalRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptFinalRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptFinalRequest.State)
  return state_.GetNoArena();
}
inline void DecryptFinalRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptFinalRequest.State)
}
#if LANG_CXX11
inline void DecryptFinalRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptFinalRequest.State)
}
#endif
inline void DecryptFinalRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptFinalRequest.State)
}
inline void DecryptFinalRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptFinalRequest.State)
}
inline ::std::string* DecryptFinalRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptFinalRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptFinalRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.DecryptFinalRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptFinalRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptFinalRequest.State)
}

// -------------------------------------------------------------------

// DecryptFinalResponse

// bytes Plain = 2;
inline void DecryptFinalResponse::clear_plain() {
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptFinalResponse::plain() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptFinalResponse.Plain)
  return plain_.GetNoArena();
}
inline void DecryptFinalResponse::set_plain(const ::std::string& value) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptFinalResponse.Plain)
}
#if LANG_CXX11
inline void DecryptFinalResponse::set_plain(::std::string&& value) {
  
  plain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptFinalResponse.Plain)
}
#endif
inline void DecryptFinalResponse::set_plain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptFinalResponse.Plain)
}
inline void DecryptFinalResponse::set_plain(const void* value, size_t size) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptFinalResponse.Plain)
}
inline ::std::string* DecryptFinalResponse::mutable_plain() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptFinalResponse.Plain)
  return plain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptFinalResponse::release_plain() {
  // @@protoc_insertion_point(field_release:grep11.DecryptFinalResponse.Plain)
  
  return plain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptFinalResponse::set_allocated_plain(::std::string* plain) {
  if (plain != nullptr) {
    
  } else {
    
  }
  plain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plain);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptFinalResponse.Plain)
}

// -------------------------------------------------------------------

// EncryptSingleRequest

// bytes Key = 1;
inline void EncryptSingleRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptSingleRequest::key() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptSingleRequest.Key)
  return key_.GetNoArena();
}
inline void EncryptSingleRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptSingleRequest.Key)
}
#if LANG_CXX11
inline void EncryptSingleRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptSingleRequest.Key)
}
#endif
inline void EncryptSingleRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptSingleRequest.Key)
}
inline void EncryptSingleRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptSingleRequest.Key)
}
inline ::std::string* EncryptSingleRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptSingleRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptSingleRequest::release_key() {
  // @@protoc_insertion_point(field_release:grep11.EncryptSingleRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptSingleRequest::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptSingleRequest.Key)
}

// .grep11.Mechanism Mech = 2;
inline bool EncryptSingleRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void EncryptSingleRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& EncryptSingleRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.EncryptSingleRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* EncryptSingleRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.EncryptSingleRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* EncryptSingleRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.EncryptSingleRequest.Mech)
  return mech_;
}
inline void EncryptSingleRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptSingleRequest.Mech)
}

// bytes Plain = 3;
inline void EncryptSingleRequest::clear_plain() {
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptSingleRequest::plain() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptSingleRequest.Plain)
  return plain_.GetNoArena();
}
inline void EncryptSingleRequest::set_plain(const ::std::string& value) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptSingleRequest.Plain)
}
#if LANG_CXX11
inline void EncryptSingleRequest::set_plain(::std::string&& value) {
  
  plain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptSingleRequest.Plain)
}
#endif
inline void EncryptSingleRequest::set_plain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptSingleRequest.Plain)
}
inline void EncryptSingleRequest::set_plain(const void* value, size_t size) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptSingleRequest.Plain)
}
inline ::std::string* EncryptSingleRequest::mutable_plain() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptSingleRequest.Plain)
  return plain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptSingleRequest::release_plain() {
  // @@protoc_insertion_point(field_release:grep11.EncryptSingleRequest.Plain)
  
  return plain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptSingleRequest::set_allocated_plain(::std::string* plain) {
  if (plain != nullptr) {
    
  } else {
    
  }
  plain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plain);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptSingleRequest.Plain)
}

// -------------------------------------------------------------------

// EncryptSingleResponse

// bytes Ciphered = 4;
inline void EncryptSingleResponse::clear_ciphered() {
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptSingleResponse::ciphered() const {
  // @@protoc_insertion_point(field_get:grep11.EncryptSingleResponse.Ciphered)
  return ciphered_.GetNoArena();
}
inline void EncryptSingleResponse::set_ciphered(const ::std::string& value) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.EncryptSingleResponse.Ciphered)
}
#if LANG_CXX11
inline void EncryptSingleResponse::set_ciphered(::std::string&& value) {
  
  ciphered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.EncryptSingleResponse.Ciphered)
}
#endif
inline void EncryptSingleResponse::set_ciphered(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.EncryptSingleResponse.Ciphered)
}
inline void EncryptSingleResponse::set_ciphered(const void* value, size_t size) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.EncryptSingleResponse.Ciphered)
}
inline ::std::string* EncryptSingleResponse::mutable_ciphered() {
  
  // @@protoc_insertion_point(field_mutable:grep11.EncryptSingleResponse.Ciphered)
  return ciphered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptSingleResponse::release_ciphered() {
  // @@protoc_insertion_point(field_release:grep11.EncryptSingleResponse.Ciphered)
  
  return ciphered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptSingleResponse::set_allocated_ciphered(::std::string* ciphered) {
  if (ciphered != nullptr) {
    
  } else {
    
  }
  ciphered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphered);
  // @@protoc_insertion_point(field_set_allocated:grep11.EncryptSingleResponse.Ciphered)
}

// -------------------------------------------------------------------

// DecryptSingleRequest

// bytes Key = 1;
inline void DecryptSingleRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptSingleRequest::key() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptSingleRequest.Key)
  return key_.GetNoArena();
}
inline void DecryptSingleRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptSingleRequest.Key)
}
#if LANG_CXX11
inline void DecryptSingleRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptSingleRequest.Key)
}
#endif
inline void DecryptSingleRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptSingleRequest.Key)
}
inline void DecryptSingleRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptSingleRequest.Key)
}
inline ::std::string* DecryptSingleRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptSingleRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptSingleRequest::release_key() {
  // @@protoc_insertion_point(field_release:grep11.DecryptSingleRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptSingleRequest::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptSingleRequest.Key)
}

// .grep11.Mechanism Mech = 2;
inline bool DecryptSingleRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void DecryptSingleRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& DecryptSingleRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.DecryptSingleRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* DecryptSingleRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.DecryptSingleRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* DecryptSingleRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.DecryptSingleRequest.Mech)
  return mech_;
}
inline void DecryptSingleRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptSingleRequest.Mech)
}

// bytes Ciphered = 3;
inline void DecryptSingleRequest::clear_ciphered() {
  ciphered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptSingleRequest::ciphered() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptSingleRequest.Ciphered)
  return ciphered_.GetNoArena();
}
inline void DecryptSingleRequest::set_ciphered(const ::std::string& value) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptSingleRequest.Ciphered)
}
#if LANG_CXX11
inline void DecryptSingleRequest::set_ciphered(::std::string&& value) {
  
  ciphered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptSingleRequest.Ciphered)
}
#endif
inline void DecryptSingleRequest::set_ciphered(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptSingleRequest.Ciphered)
}
inline void DecryptSingleRequest::set_ciphered(const void* value, size_t size) {
  
  ciphered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptSingleRequest.Ciphered)
}
inline ::std::string* DecryptSingleRequest::mutable_ciphered() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptSingleRequest.Ciphered)
  return ciphered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptSingleRequest::release_ciphered() {
  // @@protoc_insertion_point(field_release:grep11.DecryptSingleRequest.Ciphered)
  
  return ciphered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptSingleRequest::set_allocated_ciphered(::std::string* ciphered) {
  if (ciphered != nullptr) {
    
  } else {
    
  }
  ciphered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphered);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptSingleRequest.Ciphered)
}

// -------------------------------------------------------------------

// DecryptSingleResponse

// bytes Plain = 4;
inline void DecryptSingleResponse::clear_plain() {
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptSingleResponse::plain() const {
  // @@protoc_insertion_point(field_get:grep11.DecryptSingleResponse.Plain)
  return plain_.GetNoArena();
}
inline void DecryptSingleResponse::set_plain(const ::std::string& value) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DecryptSingleResponse.Plain)
}
#if LANG_CXX11
inline void DecryptSingleResponse::set_plain(::std::string&& value) {
  
  plain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DecryptSingleResponse.Plain)
}
#endif
inline void DecryptSingleResponse::set_plain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DecryptSingleResponse.Plain)
}
inline void DecryptSingleResponse::set_plain(const void* value, size_t size) {
  
  plain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DecryptSingleResponse.Plain)
}
inline ::std::string* DecryptSingleResponse::mutable_plain() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DecryptSingleResponse.Plain)
  return plain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptSingleResponse::release_plain() {
  // @@protoc_insertion_point(field_release:grep11.DecryptSingleResponse.Plain)
  
  return plain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptSingleResponse::set_allocated_plain(::std::string* plain) {
  if (plain != nullptr) {
    
  } else {
    
  }
  plain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plain);
  // @@protoc_insertion_point(field_set_allocated:grep11.DecryptSingleResponse.Plain)
}

// -------------------------------------------------------------------

// SignInitRequest

// .grep11.Mechanism Mech = 2;
inline bool SignInitRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void SignInitRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& SignInitRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.SignInitRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* SignInitRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.SignInitRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* SignInitRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.SignInitRequest.Mech)
  return mech_;
}
inline void SignInitRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.SignInitRequest.Mech)
}

// bytes PrivKey = 3;
inline void SignInitRequest::clear_privkey() {
  privkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignInitRequest::privkey() const {
  // @@protoc_insertion_point(field_get:grep11.SignInitRequest.PrivKey)
  return privkey_.GetNoArena();
}
inline void SignInitRequest::set_privkey(const ::std::string& value) {
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignInitRequest.PrivKey)
}
#if LANG_CXX11
inline void SignInitRequest::set_privkey(::std::string&& value) {
  
  privkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignInitRequest.PrivKey)
}
#endif
inline void SignInitRequest::set_privkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignInitRequest.PrivKey)
}
inline void SignInitRequest::set_privkey(const void* value, size_t size) {
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignInitRequest.PrivKey)
}
inline ::std::string* SignInitRequest::mutable_privkey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignInitRequest.PrivKey)
  return privkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignInitRequest::release_privkey() {
  // @@protoc_insertion_point(field_release:grep11.SignInitRequest.PrivKey)
  
  return privkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignInitRequest::set_allocated_privkey(::std::string* privkey) {
  if (privkey != nullptr) {
    
  } else {
    
  }
  privkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privkey);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignInitRequest.PrivKey)
}

// -------------------------------------------------------------------

// SignInitResponse

// bytes State = 1;
inline void SignInitResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignInitResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.SignInitResponse.State)
  return state_.GetNoArena();
}
inline void SignInitResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignInitResponse.State)
}
#if LANG_CXX11
inline void SignInitResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignInitResponse.State)
}
#endif
inline void SignInitResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignInitResponse.State)
}
inline void SignInitResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignInitResponse.State)
}
inline ::std::string* SignInitResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignInitResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignInitResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.SignInitResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignInitResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignInitResponse.State)
}

// -------------------------------------------------------------------

// VerifyInitRequest

// .grep11.Mechanism Mech = 2;
inline bool VerifyInitRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void VerifyInitRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& VerifyInitRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.VerifyInitRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* VerifyInitRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.VerifyInitRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* VerifyInitRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.VerifyInitRequest.Mech)
  return mech_;
}
inline void VerifyInitRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyInitRequest.Mech)
}

// bytes PubKey = 3;
inline void VerifyInitRequest::clear_pubkey() {
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyInitRequest::pubkey() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyInitRequest.PubKey)
  return pubkey_.GetNoArena();
}
inline void VerifyInitRequest::set_pubkey(const ::std::string& value) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyInitRequest.PubKey)
}
#if LANG_CXX11
inline void VerifyInitRequest::set_pubkey(::std::string&& value) {
  
  pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyInitRequest.PubKey)
}
#endif
inline void VerifyInitRequest::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyInitRequest.PubKey)
}
inline void VerifyInitRequest::set_pubkey(const void* value, size_t size) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyInitRequest.PubKey)
}
inline ::std::string* VerifyInitRequest::mutable_pubkey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyInitRequest.PubKey)
  return pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyInitRequest::release_pubkey() {
  // @@protoc_insertion_point(field_release:grep11.VerifyInitRequest.PubKey)
  
  return pubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyInitRequest::set_allocated_pubkey(::std::string* pubkey) {
  if (pubkey != nullptr) {
    
  } else {
    
  }
  pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkey);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyInitRequest.PubKey)
}

// -------------------------------------------------------------------

// VerifyInitResponse

// bytes State = 1;
inline void VerifyInitResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyInitResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyInitResponse.State)
  return state_.GetNoArena();
}
inline void VerifyInitResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyInitResponse.State)
}
#if LANG_CXX11
inline void VerifyInitResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyInitResponse.State)
}
#endif
inline void VerifyInitResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyInitResponse.State)
}
inline void VerifyInitResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyInitResponse.State)
}
inline ::std::string* VerifyInitResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyInitResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyInitResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.VerifyInitResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyInitResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyInitResponse.State)
}

// -------------------------------------------------------------------

// SignUpdateRequest

// bytes State = 1;
inline void SignUpdateRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignUpdateRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.SignUpdateRequest.State)
  return state_.GetNoArena();
}
inline void SignUpdateRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignUpdateRequest.State)
}
#if LANG_CXX11
inline void SignUpdateRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignUpdateRequest.State)
}
#endif
inline void SignUpdateRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignUpdateRequest.State)
}
inline void SignUpdateRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignUpdateRequest.State)
}
inline ::std::string* SignUpdateRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignUpdateRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignUpdateRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.SignUpdateRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignUpdateRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignUpdateRequest.State)
}

// bytes Data = 2;
inline void SignUpdateRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignUpdateRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.SignUpdateRequest.Data)
  return data_.GetNoArena();
}
inline void SignUpdateRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignUpdateRequest.Data)
}
#if LANG_CXX11
inline void SignUpdateRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignUpdateRequest.Data)
}
#endif
inline void SignUpdateRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignUpdateRequest.Data)
}
inline void SignUpdateRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignUpdateRequest.Data)
}
inline ::std::string* SignUpdateRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignUpdateRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignUpdateRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.SignUpdateRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignUpdateRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignUpdateRequest.Data)
}

// -------------------------------------------------------------------

// SignUpdateResponse

// bytes State = 1;
inline void SignUpdateResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignUpdateResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.SignUpdateResponse.State)
  return state_.GetNoArena();
}
inline void SignUpdateResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignUpdateResponse.State)
}
#if LANG_CXX11
inline void SignUpdateResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignUpdateResponse.State)
}
#endif
inline void SignUpdateResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignUpdateResponse.State)
}
inline void SignUpdateResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignUpdateResponse.State)
}
inline ::std::string* SignUpdateResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignUpdateResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignUpdateResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.SignUpdateResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignUpdateResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignUpdateResponse.State)
}

// -------------------------------------------------------------------

// VerifyUpdateRequest

// bytes State = 1;
inline void VerifyUpdateRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyUpdateRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyUpdateRequest.State)
  return state_.GetNoArena();
}
inline void VerifyUpdateRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyUpdateRequest.State)
}
#if LANG_CXX11
inline void VerifyUpdateRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyUpdateRequest.State)
}
#endif
inline void VerifyUpdateRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyUpdateRequest.State)
}
inline void VerifyUpdateRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyUpdateRequest.State)
}
inline ::std::string* VerifyUpdateRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyUpdateRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUpdateRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.VerifyUpdateRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUpdateRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyUpdateRequest.State)
}

// bytes Data = 2;
inline void VerifyUpdateRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyUpdateRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyUpdateRequest.Data)
  return data_.GetNoArena();
}
inline void VerifyUpdateRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyUpdateRequest.Data)
}
#if LANG_CXX11
inline void VerifyUpdateRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyUpdateRequest.Data)
}
#endif
inline void VerifyUpdateRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyUpdateRequest.Data)
}
inline void VerifyUpdateRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyUpdateRequest.Data)
}
inline ::std::string* VerifyUpdateRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyUpdateRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUpdateRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.VerifyUpdateRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUpdateRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyUpdateRequest.Data)
}

// -------------------------------------------------------------------

// VerifyUpdateResponse

// bytes State = 1;
inline void VerifyUpdateResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyUpdateResponse::state() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyUpdateResponse.State)
  return state_.GetNoArena();
}
inline void VerifyUpdateResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyUpdateResponse.State)
}
#if LANG_CXX11
inline void VerifyUpdateResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyUpdateResponse.State)
}
#endif
inline void VerifyUpdateResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyUpdateResponse.State)
}
inline void VerifyUpdateResponse::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyUpdateResponse.State)
}
inline ::std::string* VerifyUpdateResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyUpdateResponse.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUpdateResponse::release_state() {
  // @@protoc_insertion_point(field_release:grep11.VerifyUpdateResponse.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUpdateResponse::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyUpdateResponse.State)
}

// -------------------------------------------------------------------

// SignFinalRequest

// bytes State = 1;
inline void SignFinalRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignFinalRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.SignFinalRequest.State)
  return state_.GetNoArena();
}
inline void SignFinalRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignFinalRequest.State)
}
#if LANG_CXX11
inline void SignFinalRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignFinalRequest.State)
}
#endif
inline void SignFinalRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignFinalRequest.State)
}
inline void SignFinalRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignFinalRequest.State)
}
inline ::std::string* SignFinalRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignFinalRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignFinalRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.SignFinalRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignFinalRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignFinalRequest.State)
}

// -------------------------------------------------------------------

// SignFinalResponse

// bytes Signature = 2;
inline void SignFinalResponse::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignFinalResponse::signature() const {
  // @@protoc_insertion_point(field_get:grep11.SignFinalResponse.Signature)
  return signature_.GetNoArena();
}
inline void SignFinalResponse::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignFinalResponse.Signature)
}
#if LANG_CXX11
inline void SignFinalResponse::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignFinalResponse.Signature)
}
#endif
inline void SignFinalResponse::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignFinalResponse.Signature)
}
inline void SignFinalResponse::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignFinalResponse.Signature)
}
inline ::std::string* SignFinalResponse::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignFinalResponse.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignFinalResponse::release_signature() {
  // @@protoc_insertion_point(field_release:grep11.SignFinalResponse.Signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignFinalResponse::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignFinalResponse.Signature)
}

// -------------------------------------------------------------------

// VerifyFinalRequest

// bytes State = 1;
inline void VerifyFinalRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyFinalRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyFinalRequest.State)
  return state_.GetNoArena();
}
inline void VerifyFinalRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyFinalRequest.State)
}
#if LANG_CXX11
inline void VerifyFinalRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyFinalRequest.State)
}
#endif
inline void VerifyFinalRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyFinalRequest.State)
}
inline void VerifyFinalRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyFinalRequest.State)
}
inline ::std::string* VerifyFinalRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyFinalRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyFinalRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.VerifyFinalRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyFinalRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyFinalRequest.State)
}

// bytes Signature = 2;
inline void VerifyFinalRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyFinalRequest::signature() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyFinalRequest.Signature)
  return signature_.GetNoArena();
}
inline void VerifyFinalRequest::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyFinalRequest.Signature)
}
#if LANG_CXX11
inline void VerifyFinalRequest::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyFinalRequest.Signature)
}
#endif
inline void VerifyFinalRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyFinalRequest.Signature)
}
inline void VerifyFinalRequest::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyFinalRequest.Signature)
}
inline ::std::string* VerifyFinalRequest::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyFinalRequest.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyFinalRequest::release_signature() {
  // @@protoc_insertion_point(field_release:grep11.VerifyFinalRequest.Signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyFinalRequest::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyFinalRequest.Signature)
}

// -------------------------------------------------------------------

// VerifyFinalResponse

// -------------------------------------------------------------------

// SignRequest

// bytes State = 1;
inline void SignRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.SignRequest.State)
  return state_.GetNoArena();
}
inline void SignRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignRequest.State)
}
#if LANG_CXX11
inline void SignRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignRequest.State)
}
#endif
inline void SignRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignRequest.State)
}
inline void SignRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignRequest.State)
}
inline ::std::string* SignRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.SignRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignRequest.State)
}

// bytes Data = 2;
inline void SignRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.SignRequest.Data)
  return data_.GetNoArena();
}
inline void SignRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignRequest.Data)
}
#if LANG_CXX11
inline void SignRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignRequest.Data)
}
#endif
inline void SignRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignRequest.Data)
}
inline void SignRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignRequest.Data)
}
inline ::std::string* SignRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.SignRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignRequest.Data)
}

// -------------------------------------------------------------------

// SignResponse

// bytes Signature = 3;
inline void SignResponse::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignResponse::signature() const {
  // @@protoc_insertion_point(field_get:grep11.SignResponse.Signature)
  return signature_.GetNoArena();
}
inline void SignResponse::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignResponse.Signature)
}
#if LANG_CXX11
inline void SignResponse::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignResponse.Signature)
}
#endif
inline void SignResponse::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignResponse.Signature)
}
inline void SignResponse::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignResponse.Signature)
}
inline ::std::string* SignResponse::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignResponse.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignResponse::release_signature() {
  // @@protoc_insertion_point(field_release:grep11.SignResponse.Signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignResponse::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignResponse.Signature)
}

// -------------------------------------------------------------------

// VerifyRequest

// bytes State = 1;
inline void VerifyRequest::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyRequest::state() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyRequest.State)
  return state_.GetNoArena();
}
inline void VerifyRequest::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyRequest.State)
}
#if LANG_CXX11
inline void VerifyRequest::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyRequest.State)
}
#endif
inline void VerifyRequest::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyRequest.State)
}
inline void VerifyRequest::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyRequest.State)
}
inline ::std::string* VerifyRequest::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyRequest.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyRequest::release_state() {
  // @@protoc_insertion_point(field_release:grep11.VerifyRequest.State)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyRequest::set_allocated_state(::std::string* state) {
  if (state != nullptr) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyRequest.State)
}

// bytes Data = 2;
inline void VerifyRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyRequest.Data)
  return data_.GetNoArena();
}
inline void VerifyRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyRequest.Data)
}
#if LANG_CXX11
inline void VerifyRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyRequest.Data)
}
#endif
inline void VerifyRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyRequest.Data)
}
inline void VerifyRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyRequest.Data)
}
inline ::std::string* VerifyRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.VerifyRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyRequest.Data)
}

// bytes Signature = 3;
inline void VerifyRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifyRequest::signature() const {
  // @@protoc_insertion_point(field_get:grep11.VerifyRequest.Signature)
  return signature_.GetNoArena();
}
inline void VerifyRequest::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifyRequest.Signature)
}
#if LANG_CXX11
inline void VerifyRequest::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifyRequest.Signature)
}
#endif
inline void VerifyRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifyRequest.Signature)
}
inline void VerifyRequest::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifyRequest.Signature)
}
inline ::std::string* VerifyRequest::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifyRequest.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyRequest::release_signature() {
  // @@protoc_insertion_point(field_release:grep11.VerifyRequest.Signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyRequest::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifyRequest.Signature)
}

// -------------------------------------------------------------------

// VerifyResponse

// -------------------------------------------------------------------

// SignSingleRequest

// bytes PrivKey = 1;
inline void SignSingleRequest::clear_privkey() {
  privkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignSingleRequest::privkey() const {
  // @@protoc_insertion_point(field_get:grep11.SignSingleRequest.PrivKey)
  return privkey_.GetNoArena();
}
inline void SignSingleRequest::set_privkey(const ::std::string& value) {
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignSingleRequest.PrivKey)
}
#if LANG_CXX11
inline void SignSingleRequest::set_privkey(::std::string&& value) {
  
  privkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignSingleRequest.PrivKey)
}
#endif
inline void SignSingleRequest::set_privkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignSingleRequest.PrivKey)
}
inline void SignSingleRequest::set_privkey(const void* value, size_t size) {
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignSingleRequest.PrivKey)
}
inline ::std::string* SignSingleRequest::mutable_privkey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignSingleRequest.PrivKey)
  return privkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignSingleRequest::release_privkey() {
  // @@protoc_insertion_point(field_release:grep11.SignSingleRequest.PrivKey)
  
  return privkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignSingleRequest::set_allocated_privkey(::std::string* privkey) {
  if (privkey != nullptr) {
    
  } else {
    
  }
  privkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privkey);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignSingleRequest.PrivKey)
}

// .grep11.Mechanism Mech = 2;
inline bool SignSingleRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void SignSingleRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& SignSingleRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.SignSingleRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* SignSingleRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.SignSingleRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* SignSingleRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.SignSingleRequest.Mech)
  return mech_;
}
inline void SignSingleRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.SignSingleRequest.Mech)
}

// bytes Data = 3;
inline void SignSingleRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignSingleRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.SignSingleRequest.Data)
  return data_.GetNoArena();
}
inline void SignSingleRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignSingleRequest.Data)
}
#if LANG_CXX11
inline void SignSingleRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignSingleRequest.Data)
}
#endif
inline void SignSingleRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignSingleRequest.Data)
}
inline void SignSingleRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignSingleRequest.Data)
}
inline ::std::string* SignSingleRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignSingleRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignSingleRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.SignSingleRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignSingleRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignSingleRequest.Data)
}

// -------------------------------------------------------------------

// SignSingleResponse

// bytes Signature = 4;
inline void SignSingleResponse::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignSingleResponse::signature() const {
  // @@protoc_insertion_point(field_get:grep11.SignSingleResponse.Signature)
  return signature_.GetNoArena();
}
inline void SignSingleResponse::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SignSingleResponse.Signature)
}
#if LANG_CXX11
inline void SignSingleResponse::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SignSingleResponse.Signature)
}
#endif
inline void SignSingleResponse::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SignSingleResponse.Signature)
}
inline void SignSingleResponse::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SignSingleResponse.Signature)
}
inline ::std::string* SignSingleResponse::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SignSingleResponse.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignSingleResponse::release_signature() {
  // @@protoc_insertion_point(field_release:grep11.SignSingleResponse.Signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignSingleResponse::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:grep11.SignSingleResponse.Signature)
}

// -------------------------------------------------------------------

// VerifySingleRequest

// bytes PubKey = 1;
inline void VerifySingleRequest::clear_pubkey() {
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifySingleRequest::pubkey() const {
  // @@protoc_insertion_point(field_get:grep11.VerifySingleRequest.PubKey)
  return pubkey_.GetNoArena();
}
inline void VerifySingleRequest::set_pubkey(const ::std::string& value) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifySingleRequest.PubKey)
}
#if LANG_CXX11
inline void VerifySingleRequest::set_pubkey(::std::string&& value) {
  
  pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifySingleRequest.PubKey)
}
#endif
inline void VerifySingleRequest::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifySingleRequest.PubKey)
}
inline void VerifySingleRequest::set_pubkey(const void* value, size_t size) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifySingleRequest.PubKey)
}
inline ::std::string* VerifySingleRequest::mutable_pubkey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifySingleRequest.PubKey)
  return pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifySingleRequest::release_pubkey() {
  // @@protoc_insertion_point(field_release:grep11.VerifySingleRequest.PubKey)
  
  return pubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifySingleRequest::set_allocated_pubkey(::std::string* pubkey) {
  if (pubkey != nullptr) {
    
  } else {
    
  }
  pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkey);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifySingleRequest.PubKey)
}

// .grep11.Mechanism Mech = 2;
inline bool VerifySingleRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void VerifySingleRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& VerifySingleRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.VerifySingleRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* VerifySingleRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.VerifySingleRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* VerifySingleRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.VerifySingleRequest.Mech)
  return mech_;
}
inline void VerifySingleRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifySingleRequest.Mech)
}

// bytes Data = 3;
inline void VerifySingleRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifySingleRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.VerifySingleRequest.Data)
  return data_.GetNoArena();
}
inline void VerifySingleRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifySingleRequest.Data)
}
#if LANG_CXX11
inline void VerifySingleRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifySingleRequest.Data)
}
#endif
inline void VerifySingleRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifySingleRequest.Data)
}
inline void VerifySingleRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifySingleRequest.Data)
}
inline ::std::string* VerifySingleRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifySingleRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifySingleRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.VerifySingleRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifySingleRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifySingleRequest.Data)
}

// bytes Signature = 4;
inline void VerifySingleRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VerifySingleRequest::signature() const {
  // @@protoc_insertion_point(field_get:grep11.VerifySingleRequest.Signature)
  return signature_.GetNoArena();
}
inline void VerifySingleRequest::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.VerifySingleRequest.Signature)
}
#if LANG_CXX11
inline void VerifySingleRequest::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.VerifySingleRequest.Signature)
}
#endif
inline void VerifySingleRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.VerifySingleRequest.Signature)
}
inline void VerifySingleRequest::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.VerifySingleRequest.Signature)
}
inline ::std::string* VerifySingleRequest::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:grep11.VerifySingleRequest.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifySingleRequest::release_signature() {
  // @@protoc_insertion_point(field_release:grep11.VerifySingleRequest.Signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifySingleRequest::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:grep11.VerifySingleRequest.Signature)
}

// -------------------------------------------------------------------

// VerifySingleResponse

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GenerateKeyRequest

// .grep11.Mechanism Mech = 1;
inline bool GenerateKeyRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void GenerateKeyRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& GenerateKeyRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* GenerateKeyRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* GenerateKeyRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyRequest.Mech)
  return mech_;
}
inline void GenerateKeyRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyRequest.Mech)
}

// map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
inline int GenerateKeyRequest::template__size() const {
  return template__.size();
}
inline void GenerateKeyRequest::clear_template_() {
  template__.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
GenerateKeyRequest::template_() const {
  // @@protoc_insertion_point(field_map:grep11.GenerateKeyRequest.Template)
  return template__.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
GenerateKeyRequest::mutable_template_() {
  // @@protoc_insertion_point(field_mutable_map:grep11.GenerateKeyRequest.Template)
  return template__.MutableMap();
}

// string KeyId = 4;
inline void GenerateKeyRequest::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateKeyRequest::keyid() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyRequest.KeyId)
  return keyid_.GetNoArena();
}
inline void GenerateKeyRequest::set_keyid(const ::std::string& value) {
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GenerateKeyRequest.KeyId)
}
#if LANG_CXX11
inline void GenerateKeyRequest::set_keyid(::std::string&& value) {
  
  keyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GenerateKeyRequest.KeyId)
}
#endif
inline void GenerateKeyRequest::set_keyid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GenerateKeyRequest.KeyId)
}
inline void GenerateKeyRequest::set_keyid(const char* value, size_t size) {
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GenerateKeyRequest.KeyId)
}
inline ::std::string* GenerateKeyRequest::mutable_keyid() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyRequest.KeyId)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateKeyRequest::release_keyid() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyRequest.KeyId)
  
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateKeyRequest::set_allocated_keyid(::std::string* keyid) {
  if (keyid != nullptr) {
    
  } else {
    
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyRequest.KeyId)
}

// -------------------------------------------------------------------

// GenerateKeyResponse

// bytes Key = 4;
inline void GenerateKeyResponse::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateKeyResponse::key() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyResponse.Key)
  return key_.GetNoArena();
}
inline void GenerateKeyResponse::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GenerateKeyResponse.Key)
}
#if LANG_CXX11
inline void GenerateKeyResponse::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GenerateKeyResponse.Key)
}
#endif
inline void GenerateKeyResponse::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GenerateKeyResponse.Key)
}
inline void GenerateKeyResponse::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GenerateKeyResponse.Key)
}
inline ::std::string* GenerateKeyResponse::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyResponse.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateKeyResponse::release_key() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyResponse.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateKeyResponse::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyResponse.Key)
}

// bytes CheckSum = 5;
inline void GenerateKeyResponse::clear_checksum() {
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateKeyResponse::checksum() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyResponse.CheckSum)
  return checksum_.GetNoArena();
}
inline void GenerateKeyResponse::set_checksum(const ::std::string& value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GenerateKeyResponse.CheckSum)
}
#if LANG_CXX11
inline void GenerateKeyResponse::set_checksum(::std::string&& value) {
  
  checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GenerateKeyResponse.CheckSum)
}
#endif
inline void GenerateKeyResponse::set_checksum(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GenerateKeyResponse.CheckSum)
}
inline void GenerateKeyResponse::set_checksum(const void* value, size_t size) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GenerateKeyResponse.CheckSum)
}
inline ::std::string* GenerateKeyResponse::mutable_checksum() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyResponse.CheckSum)
  return checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateKeyResponse::release_checksum() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyResponse.CheckSum)
  
  return checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateKeyResponse::set_allocated_checksum(::std::string* checksum) {
  if (checksum != nullptr) {
    
  } else {
    
  }
  checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum);
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyResponse.CheckSum)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GenerateKeyPairRequest

// .grep11.Mechanism Mech = 1;
inline bool GenerateKeyPairRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void GenerateKeyPairRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& GenerateKeyPairRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyPairRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* GenerateKeyPairRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyPairRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* GenerateKeyPairRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyPairRequest.Mech)
  return mech_;
}
inline void GenerateKeyPairRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyPairRequest.Mech)
}

// map<uint64, bytes> PubKeyTemplate = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
inline int GenerateKeyPairRequest::pubkeytemplate_size() const {
  return pubkeytemplate_.size();
}
inline void GenerateKeyPairRequest::clear_pubkeytemplate() {
  pubkeytemplate_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
GenerateKeyPairRequest::pubkeytemplate() const {
  // @@protoc_insertion_point(field_map:grep11.GenerateKeyPairRequest.PubKeyTemplate)
  return pubkeytemplate_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
GenerateKeyPairRequest::mutable_pubkeytemplate() {
  // @@protoc_insertion_point(field_mutable_map:grep11.GenerateKeyPairRequest.PubKeyTemplate)
  return pubkeytemplate_.MutableMap();
}

// map<uint64, bytes> PrivKeyTemplate = 3 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
inline int GenerateKeyPairRequest::privkeytemplate_size() const {
  return privkeytemplate_.size();
}
inline void GenerateKeyPairRequest::clear_privkeytemplate() {
  privkeytemplate_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
GenerateKeyPairRequest::privkeytemplate() const {
  // @@protoc_insertion_point(field_map:grep11.GenerateKeyPairRequest.PrivKeyTemplate)
  return privkeytemplate_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
GenerateKeyPairRequest::mutable_privkeytemplate() {
  // @@protoc_insertion_point(field_mutable_map:grep11.GenerateKeyPairRequest.PrivKeyTemplate)
  return privkeytemplate_.MutableMap();
}

// string PrivKeyId = 5;
inline void GenerateKeyPairRequest::clear_privkeyid() {
  privkeyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateKeyPairRequest::privkeyid() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyPairRequest.PrivKeyId)
  return privkeyid_.GetNoArena();
}
inline void GenerateKeyPairRequest::set_privkeyid(const ::std::string& value) {
  
  privkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GenerateKeyPairRequest.PrivKeyId)
}
#if LANG_CXX11
inline void GenerateKeyPairRequest::set_privkeyid(::std::string&& value) {
  
  privkeyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GenerateKeyPairRequest.PrivKeyId)
}
#endif
inline void GenerateKeyPairRequest::set_privkeyid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  privkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GenerateKeyPairRequest.PrivKeyId)
}
inline void GenerateKeyPairRequest::set_privkeyid(const char* value, size_t size) {
  
  privkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GenerateKeyPairRequest.PrivKeyId)
}
inline ::std::string* GenerateKeyPairRequest::mutable_privkeyid() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyPairRequest.PrivKeyId)
  return privkeyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateKeyPairRequest::release_privkeyid() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyPairRequest.PrivKeyId)
  
  return privkeyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateKeyPairRequest::set_allocated_privkeyid(::std::string* privkeyid) {
  if (privkeyid != nullptr) {
    
  } else {
    
  }
  privkeyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privkeyid);
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyPairRequest.PrivKeyId)
}

// string PubKeyId = 6;
inline void GenerateKeyPairRequest::clear_pubkeyid() {
  pubkeyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateKeyPairRequest::pubkeyid() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyPairRequest.PubKeyId)
  return pubkeyid_.GetNoArena();
}
inline void GenerateKeyPairRequest::set_pubkeyid(const ::std::string& value) {
  
  pubkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GenerateKeyPairRequest.PubKeyId)
}
#if LANG_CXX11
inline void GenerateKeyPairRequest::set_pubkeyid(::std::string&& value) {
  
  pubkeyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GenerateKeyPairRequest.PubKeyId)
}
#endif
inline void GenerateKeyPairRequest::set_pubkeyid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pubkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GenerateKeyPairRequest.PubKeyId)
}
inline void GenerateKeyPairRequest::set_pubkeyid(const char* value, size_t size) {
  
  pubkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GenerateKeyPairRequest.PubKeyId)
}
inline ::std::string* GenerateKeyPairRequest::mutable_pubkeyid() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyPairRequest.PubKeyId)
  return pubkeyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateKeyPairRequest::release_pubkeyid() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyPairRequest.PubKeyId)
  
  return pubkeyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateKeyPairRequest::set_allocated_pubkeyid(::std::string* pubkeyid) {
  if (pubkeyid != nullptr) {
    
  } else {
    
  }
  pubkeyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkeyid);
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyPairRequest.PubKeyId)
}

// -------------------------------------------------------------------

// GenerateKeyPairResponse

// bytes PrivKey = 5;
inline void GenerateKeyPairResponse::clear_privkey() {
  privkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateKeyPairResponse::privkey() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyPairResponse.PrivKey)
  return privkey_.GetNoArena();
}
inline void GenerateKeyPairResponse::set_privkey(const ::std::string& value) {
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GenerateKeyPairResponse.PrivKey)
}
#if LANG_CXX11
inline void GenerateKeyPairResponse::set_privkey(::std::string&& value) {
  
  privkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GenerateKeyPairResponse.PrivKey)
}
#endif
inline void GenerateKeyPairResponse::set_privkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GenerateKeyPairResponse.PrivKey)
}
inline void GenerateKeyPairResponse::set_privkey(const void* value, size_t size) {
  
  privkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GenerateKeyPairResponse.PrivKey)
}
inline ::std::string* GenerateKeyPairResponse::mutable_privkey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyPairResponse.PrivKey)
  return privkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateKeyPairResponse::release_privkey() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyPairResponse.PrivKey)
  
  return privkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateKeyPairResponse::set_allocated_privkey(::std::string* privkey) {
  if (privkey != nullptr) {
    
  } else {
    
  }
  privkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privkey);
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyPairResponse.PrivKey)
}

// bytes PubKey = 6;
inline void GenerateKeyPairResponse::clear_pubkey() {
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateKeyPairResponse::pubkey() const {
  // @@protoc_insertion_point(field_get:grep11.GenerateKeyPairResponse.PubKey)
  return pubkey_.GetNoArena();
}
inline void GenerateKeyPairResponse::set_pubkey(const ::std::string& value) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GenerateKeyPairResponse.PubKey)
}
#if LANG_CXX11
inline void GenerateKeyPairResponse::set_pubkey(::std::string&& value) {
  
  pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GenerateKeyPairResponse.PubKey)
}
#endif
inline void GenerateKeyPairResponse::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GenerateKeyPairResponse.PubKey)
}
inline void GenerateKeyPairResponse::set_pubkey(const void* value, size_t size) {
  
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GenerateKeyPairResponse.PubKey)
}
inline ::std::string* GenerateKeyPairResponse::mutable_pubkey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GenerateKeyPairResponse.PubKey)
  return pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateKeyPairResponse::release_pubkey() {
  // @@protoc_insertion_point(field_release:grep11.GenerateKeyPairResponse.PubKey)
  
  return pubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateKeyPairResponse::set_allocated_pubkey(::std::string* pubkey) {
  if (pubkey != nullptr) {
    
  } else {
    
  }
  pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkey);
  // @@protoc_insertion_point(field_set_allocated:grep11.GenerateKeyPairResponse.PubKey)
}

// -------------------------------------------------------------------

// WrapKeyRequest

// bytes Key = 1;
inline void WrapKeyRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WrapKeyRequest::key() const {
  // @@protoc_insertion_point(field_get:grep11.WrapKeyRequest.Key)
  return key_.GetNoArena();
}
inline void WrapKeyRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.WrapKeyRequest.Key)
}
#if LANG_CXX11
inline void WrapKeyRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.WrapKeyRequest.Key)
}
#endif
inline void WrapKeyRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.WrapKeyRequest.Key)
}
inline void WrapKeyRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.WrapKeyRequest.Key)
}
inline ::std::string* WrapKeyRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grep11.WrapKeyRequest.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WrapKeyRequest::release_key() {
  // @@protoc_insertion_point(field_release:grep11.WrapKeyRequest.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WrapKeyRequest::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grep11.WrapKeyRequest.Key)
}

// bytes KeK = 2;
inline void WrapKeyRequest::clear_kek() {
  kek_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WrapKeyRequest::kek() const {
  // @@protoc_insertion_point(field_get:grep11.WrapKeyRequest.KeK)
  return kek_.GetNoArena();
}
inline void WrapKeyRequest::set_kek(const ::std::string& value) {
  
  kek_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.WrapKeyRequest.KeK)
}
#if LANG_CXX11
inline void WrapKeyRequest::set_kek(::std::string&& value) {
  
  kek_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.WrapKeyRequest.KeK)
}
#endif
inline void WrapKeyRequest::set_kek(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kek_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.WrapKeyRequest.KeK)
}
inline void WrapKeyRequest::set_kek(const void* value, size_t size) {
  
  kek_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.WrapKeyRequest.KeK)
}
inline ::std::string* WrapKeyRequest::mutable_kek() {
  
  // @@protoc_insertion_point(field_mutable:grep11.WrapKeyRequest.KeK)
  return kek_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WrapKeyRequest::release_kek() {
  // @@protoc_insertion_point(field_release:grep11.WrapKeyRequest.KeK)
  
  return kek_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WrapKeyRequest::set_allocated_kek(::std::string* kek) {
  if (kek != nullptr) {
    
  } else {
    
  }
  kek_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kek);
  // @@protoc_insertion_point(field_set_allocated:grep11.WrapKeyRequest.KeK)
}

// bytes MacKey = 3;
inline void WrapKeyRequest::clear_mackey() {
  mackey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WrapKeyRequest::mackey() const {
  // @@protoc_insertion_point(field_get:grep11.WrapKeyRequest.MacKey)
  return mackey_.GetNoArena();
}
inline void WrapKeyRequest::set_mackey(const ::std::string& value) {
  
  mackey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.WrapKeyRequest.MacKey)
}
#if LANG_CXX11
inline void WrapKeyRequest::set_mackey(::std::string&& value) {
  
  mackey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.WrapKeyRequest.MacKey)
}
#endif
inline void WrapKeyRequest::set_mackey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mackey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.WrapKeyRequest.MacKey)
}
inline void WrapKeyRequest::set_mackey(const void* value, size_t size) {
  
  mackey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.WrapKeyRequest.MacKey)
}
inline ::std::string* WrapKeyRequest::mutable_mackey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.WrapKeyRequest.MacKey)
  return mackey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WrapKeyRequest::release_mackey() {
  // @@protoc_insertion_point(field_release:grep11.WrapKeyRequest.MacKey)
  
  return mackey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WrapKeyRequest::set_allocated_mackey(::std::string* mackey) {
  if (mackey != nullptr) {
    
  } else {
    
  }
  mackey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mackey);
  // @@protoc_insertion_point(field_set_allocated:grep11.WrapKeyRequest.MacKey)
}

// .grep11.Mechanism Mech = 4;
inline bool WrapKeyRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void WrapKeyRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& WrapKeyRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.WrapKeyRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* WrapKeyRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.WrapKeyRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* WrapKeyRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.WrapKeyRequest.Mech)
  return mech_;
}
inline void WrapKeyRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.WrapKeyRequest.Mech)
}

// -------------------------------------------------------------------

// WrapKeyResponse

// bytes Wrapped = 5;
inline void WrapKeyResponse::clear_wrapped() {
  wrapped_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WrapKeyResponse::wrapped() const {
  // @@protoc_insertion_point(field_get:grep11.WrapKeyResponse.Wrapped)
  return wrapped_.GetNoArena();
}
inline void WrapKeyResponse::set_wrapped(const ::std::string& value) {
  
  wrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.WrapKeyResponse.Wrapped)
}
#if LANG_CXX11
inline void WrapKeyResponse::set_wrapped(::std::string&& value) {
  
  wrapped_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.WrapKeyResponse.Wrapped)
}
#endif
inline void WrapKeyResponse::set_wrapped(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  wrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.WrapKeyResponse.Wrapped)
}
inline void WrapKeyResponse::set_wrapped(const void* value, size_t size) {
  
  wrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.WrapKeyResponse.Wrapped)
}
inline ::std::string* WrapKeyResponse::mutable_wrapped() {
  
  // @@protoc_insertion_point(field_mutable:grep11.WrapKeyResponse.Wrapped)
  return wrapped_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WrapKeyResponse::release_wrapped() {
  // @@protoc_insertion_point(field_release:grep11.WrapKeyResponse.Wrapped)
  
  return wrapped_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WrapKeyResponse::set_allocated_wrapped(::std::string* wrapped) {
  if (wrapped != nullptr) {
    
  } else {
    
  }
  wrapped_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wrapped);
  // @@protoc_insertion_point(field_set_allocated:grep11.WrapKeyResponse.Wrapped)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UnwrapKeyRequest

// bytes Wrapped = 1;
inline void UnwrapKeyRequest::clear_wrapped() {
  wrapped_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnwrapKeyRequest::wrapped() const {
  // @@protoc_insertion_point(field_get:grep11.UnwrapKeyRequest.Wrapped)
  return wrapped_.GetNoArena();
}
inline void UnwrapKeyRequest::set_wrapped(const ::std::string& value) {
  
  wrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.UnwrapKeyRequest.Wrapped)
}
#if LANG_CXX11
inline void UnwrapKeyRequest::set_wrapped(::std::string&& value) {
  
  wrapped_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.UnwrapKeyRequest.Wrapped)
}
#endif
inline void UnwrapKeyRequest::set_wrapped(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  wrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.UnwrapKeyRequest.Wrapped)
}
inline void UnwrapKeyRequest::set_wrapped(const void* value, size_t size) {
  
  wrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.UnwrapKeyRequest.Wrapped)
}
inline ::std::string* UnwrapKeyRequest::mutable_wrapped() {
  
  // @@protoc_insertion_point(field_mutable:grep11.UnwrapKeyRequest.Wrapped)
  return wrapped_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnwrapKeyRequest::release_wrapped() {
  // @@protoc_insertion_point(field_release:grep11.UnwrapKeyRequest.Wrapped)
  
  return wrapped_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnwrapKeyRequest::set_allocated_wrapped(::std::string* wrapped) {
  if (wrapped != nullptr) {
    
  } else {
    
  }
  wrapped_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wrapped);
  // @@protoc_insertion_point(field_set_allocated:grep11.UnwrapKeyRequest.Wrapped)
}

// bytes KeK = 2;
inline void UnwrapKeyRequest::clear_kek() {
  kek_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnwrapKeyRequest::kek() const {
  // @@protoc_insertion_point(field_get:grep11.UnwrapKeyRequest.KeK)
  return kek_.GetNoArena();
}
inline void UnwrapKeyRequest::set_kek(const ::std::string& value) {
  
  kek_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.UnwrapKeyRequest.KeK)
}
#if LANG_CXX11
inline void UnwrapKeyRequest::set_kek(::std::string&& value) {
  
  kek_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.UnwrapKeyRequest.KeK)
}
#endif
inline void UnwrapKeyRequest::set_kek(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kek_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.UnwrapKeyRequest.KeK)
}
inline void UnwrapKeyRequest::set_kek(const void* value, size_t size) {
  
  kek_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.UnwrapKeyRequest.KeK)
}
inline ::std::string* UnwrapKeyRequest::mutable_kek() {
  
  // @@protoc_insertion_point(field_mutable:grep11.UnwrapKeyRequest.KeK)
  return kek_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnwrapKeyRequest::release_kek() {
  // @@protoc_insertion_point(field_release:grep11.UnwrapKeyRequest.KeK)
  
  return kek_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnwrapKeyRequest::set_allocated_kek(::std::string* kek) {
  if (kek != nullptr) {
    
  } else {
    
  }
  kek_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kek);
  // @@protoc_insertion_point(field_set_allocated:grep11.UnwrapKeyRequest.KeK)
}

// bytes MacKey = 3;
inline void UnwrapKeyRequest::clear_mackey() {
  mackey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnwrapKeyRequest::mackey() const {
  // @@protoc_insertion_point(field_get:grep11.UnwrapKeyRequest.MacKey)
  return mackey_.GetNoArena();
}
inline void UnwrapKeyRequest::set_mackey(const ::std::string& value) {
  
  mackey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.UnwrapKeyRequest.MacKey)
}
#if LANG_CXX11
inline void UnwrapKeyRequest::set_mackey(::std::string&& value) {
  
  mackey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.UnwrapKeyRequest.MacKey)
}
#endif
inline void UnwrapKeyRequest::set_mackey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mackey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.UnwrapKeyRequest.MacKey)
}
inline void UnwrapKeyRequest::set_mackey(const void* value, size_t size) {
  
  mackey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.UnwrapKeyRequest.MacKey)
}
inline ::std::string* UnwrapKeyRequest::mutable_mackey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.UnwrapKeyRequest.MacKey)
  return mackey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnwrapKeyRequest::release_mackey() {
  // @@protoc_insertion_point(field_release:grep11.UnwrapKeyRequest.MacKey)
  
  return mackey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnwrapKeyRequest::set_allocated_mackey(::std::string* mackey) {
  if (mackey != nullptr) {
    
  } else {
    
  }
  mackey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mackey);
  // @@protoc_insertion_point(field_set_allocated:grep11.UnwrapKeyRequest.MacKey)
}

// .grep11.Mechanism Mech = 5;
inline bool UnwrapKeyRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void UnwrapKeyRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& UnwrapKeyRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.UnwrapKeyRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* UnwrapKeyRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.UnwrapKeyRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* UnwrapKeyRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.UnwrapKeyRequest.Mech)
  return mech_;
}
inline void UnwrapKeyRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.UnwrapKeyRequest.Mech)
}

// map<uint64, bytes> Template = 6 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
inline int UnwrapKeyRequest::template__size() const {
  return template__.size();
}
inline void UnwrapKeyRequest::clear_template_() {
  template__.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
UnwrapKeyRequest::template_() const {
  // @@protoc_insertion_point(field_map:grep11.UnwrapKeyRequest.Template)
  return template__.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
UnwrapKeyRequest::mutable_template_() {
  // @@protoc_insertion_point(field_mutable_map:grep11.UnwrapKeyRequest.Template)
  return template__.MutableMap();
}

// string UnwrappedId = 7;
inline void UnwrapKeyRequest::clear_unwrappedid() {
  unwrappedid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnwrapKeyRequest::unwrappedid() const {
  // @@protoc_insertion_point(field_get:grep11.UnwrapKeyRequest.UnwrappedId)
  return unwrappedid_.GetNoArena();
}
inline void UnwrapKeyRequest::set_unwrappedid(const ::std::string& value) {
  
  unwrappedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.UnwrapKeyRequest.UnwrappedId)
}
#if LANG_CXX11
inline void UnwrapKeyRequest::set_unwrappedid(::std::string&& value) {
  
  unwrappedid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.UnwrapKeyRequest.UnwrappedId)
}
#endif
inline void UnwrapKeyRequest::set_unwrappedid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  unwrappedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.UnwrapKeyRequest.UnwrappedId)
}
inline void UnwrapKeyRequest::set_unwrappedid(const char* value, size_t size) {
  
  unwrappedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.UnwrapKeyRequest.UnwrappedId)
}
inline ::std::string* UnwrapKeyRequest::mutable_unwrappedid() {
  
  // @@protoc_insertion_point(field_mutable:grep11.UnwrapKeyRequest.UnwrappedId)
  return unwrappedid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnwrapKeyRequest::release_unwrappedid() {
  // @@protoc_insertion_point(field_release:grep11.UnwrapKeyRequest.UnwrappedId)
  
  return unwrappedid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnwrapKeyRequest::set_allocated_unwrappedid(::std::string* unwrappedid) {
  if (unwrappedid != nullptr) {
    
  } else {
    
  }
  unwrappedid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unwrappedid);
  // @@protoc_insertion_point(field_set_allocated:grep11.UnwrapKeyRequest.UnwrappedId)
}

// -------------------------------------------------------------------

// UnwrapKeyResponse

// bytes Unwrapped = 7;
inline void UnwrapKeyResponse::clear_unwrapped() {
  unwrapped_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnwrapKeyResponse::unwrapped() const {
  // @@protoc_insertion_point(field_get:grep11.UnwrapKeyResponse.Unwrapped)
  return unwrapped_.GetNoArena();
}
inline void UnwrapKeyResponse::set_unwrapped(const ::std::string& value) {
  
  unwrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.UnwrapKeyResponse.Unwrapped)
}
#if LANG_CXX11
inline void UnwrapKeyResponse::set_unwrapped(::std::string&& value) {
  
  unwrapped_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.UnwrapKeyResponse.Unwrapped)
}
#endif
inline void UnwrapKeyResponse::set_unwrapped(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  unwrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.UnwrapKeyResponse.Unwrapped)
}
inline void UnwrapKeyResponse::set_unwrapped(const void* value, size_t size) {
  
  unwrapped_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.UnwrapKeyResponse.Unwrapped)
}
inline ::std::string* UnwrapKeyResponse::mutable_unwrapped() {
  
  // @@protoc_insertion_point(field_mutable:grep11.UnwrapKeyResponse.Unwrapped)
  return unwrapped_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnwrapKeyResponse::release_unwrapped() {
  // @@protoc_insertion_point(field_release:grep11.UnwrapKeyResponse.Unwrapped)
  
  return unwrapped_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnwrapKeyResponse::set_allocated_unwrapped(::std::string* unwrapped) {
  if (unwrapped != nullptr) {
    
  } else {
    
  }
  unwrapped_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unwrapped);
  // @@protoc_insertion_point(field_set_allocated:grep11.UnwrapKeyResponse.Unwrapped)
}

// bytes CheckSum = 8;
inline void UnwrapKeyResponse::clear_checksum() {
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnwrapKeyResponse::checksum() const {
  // @@protoc_insertion_point(field_get:grep11.UnwrapKeyResponse.CheckSum)
  return checksum_.GetNoArena();
}
inline void UnwrapKeyResponse::set_checksum(const ::std::string& value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.UnwrapKeyResponse.CheckSum)
}
#if LANG_CXX11
inline void UnwrapKeyResponse::set_checksum(::std::string&& value) {
  
  checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.UnwrapKeyResponse.CheckSum)
}
#endif
inline void UnwrapKeyResponse::set_checksum(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.UnwrapKeyResponse.CheckSum)
}
inline void UnwrapKeyResponse::set_checksum(const void* value, size_t size) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.UnwrapKeyResponse.CheckSum)
}
inline ::std::string* UnwrapKeyResponse::mutable_checksum() {
  
  // @@protoc_insertion_point(field_mutable:grep11.UnwrapKeyResponse.CheckSum)
  return checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnwrapKeyResponse::release_checksum() {
  // @@protoc_insertion_point(field_release:grep11.UnwrapKeyResponse.CheckSum)
  
  return checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnwrapKeyResponse::set_allocated_checksum(::std::string* checksum) {
  if (checksum != nullptr) {
    
  } else {
    
  }
  checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum);
  // @@protoc_insertion_point(field_set_allocated:grep11.UnwrapKeyResponse.CheckSum)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DeriveKeyRequest

// .grep11.Mechanism Mech = 1;
inline bool DeriveKeyRequest::has_mech() const {
  return this != internal_default_instance() && mech_ != nullptr;
}
inline void DeriveKeyRequest::clear_mech() {
  if (GetArenaNoVirtual() == nullptr && mech_ != nullptr) {
    delete mech_;
  }
  mech_ = nullptr;
}
inline const ::grep11::Mechanism& DeriveKeyRequest::mech() const {
  const ::grep11::Mechanism* p = mech_;
  // @@protoc_insertion_point(field_get:grep11.DeriveKeyRequest.Mech)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::Mechanism*>(
      &::grep11::_Mechanism_default_instance_);
}
inline ::grep11::Mechanism* DeriveKeyRequest::release_mech() {
  // @@protoc_insertion_point(field_release:grep11.DeriveKeyRequest.Mech)
  
  ::grep11::Mechanism* temp = mech_;
  mech_ = nullptr;
  return temp;
}
inline ::grep11::Mechanism* DeriveKeyRequest::mutable_mech() {
  
  if (mech_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::Mechanism>(GetArenaNoVirtual());
    mech_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.DeriveKeyRequest.Mech)
  return mech_;
}
inline void DeriveKeyRequest::set_allocated_mech(::grep11::Mechanism* mech) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mech_;
  }
  if (mech) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mech = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mech, submessage_arena);
    }
    
  } else {
    
  }
  mech_ = mech;
  // @@protoc_insertion_point(field_set_allocated:grep11.DeriveKeyRequest.Mech)
}

// map<uint64, bytes> Template = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
inline int DeriveKeyRequest::template__size() const {
  return template__.size();
}
inline void DeriveKeyRequest::clear_template_() {
  template__.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
DeriveKeyRequest::template_() const {
  // @@protoc_insertion_point(field_map:grep11.DeriveKeyRequest.Template)
  return template__.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
DeriveKeyRequest::mutable_template_() {
  // @@protoc_insertion_point(field_mutable_map:grep11.DeriveKeyRequest.Template)
  return template__.MutableMap();
}

// bytes BaseKey = 3;
inline void DeriveKeyRequest::clear_basekey() {
  basekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeriveKeyRequest::basekey() const {
  // @@protoc_insertion_point(field_get:grep11.DeriveKeyRequest.BaseKey)
  return basekey_.GetNoArena();
}
inline void DeriveKeyRequest::set_basekey(const ::std::string& value) {
  
  basekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DeriveKeyRequest.BaseKey)
}
#if LANG_CXX11
inline void DeriveKeyRequest::set_basekey(::std::string&& value) {
  
  basekey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DeriveKeyRequest.BaseKey)
}
#endif
inline void DeriveKeyRequest::set_basekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  basekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DeriveKeyRequest.BaseKey)
}
inline void DeriveKeyRequest::set_basekey(const void* value, size_t size) {
  
  basekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DeriveKeyRequest.BaseKey)
}
inline ::std::string* DeriveKeyRequest::mutable_basekey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DeriveKeyRequest.BaseKey)
  return basekey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeriveKeyRequest::release_basekey() {
  // @@protoc_insertion_point(field_release:grep11.DeriveKeyRequest.BaseKey)
  
  return basekey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeriveKeyRequest::set_allocated_basekey(::std::string* basekey) {
  if (basekey != nullptr) {
    
  } else {
    
  }
  basekey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), basekey);
  // @@protoc_insertion_point(field_set_allocated:grep11.DeriveKeyRequest.BaseKey)
}

// bytes Data = 4;
inline void DeriveKeyRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeriveKeyRequest::data() const {
  // @@protoc_insertion_point(field_get:grep11.DeriveKeyRequest.Data)
  return data_.GetNoArena();
}
inline void DeriveKeyRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DeriveKeyRequest.Data)
}
#if LANG_CXX11
inline void DeriveKeyRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DeriveKeyRequest.Data)
}
#endif
inline void DeriveKeyRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DeriveKeyRequest.Data)
}
inline void DeriveKeyRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DeriveKeyRequest.Data)
}
inline ::std::string* DeriveKeyRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DeriveKeyRequest.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeriveKeyRequest::release_data() {
  // @@protoc_insertion_point(field_release:grep11.DeriveKeyRequest.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeriveKeyRequest::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grep11.DeriveKeyRequest.Data)
}

// string NewKeyId = 6;
inline void DeriveKeyRequest::clear_newkeyid() {
  newkeyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeriveKeyRequest::newkeyid() const {
  // @@protoc_insertion_point(field_get:grep11.DeriveKeyRequest.NewKeyId)
  return newkeyid_.GetNoArena();
}
inline void DeriveKeyRequest::set_newkeyid(const ::std::string& value) {
  
  newkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DeriveKeyRequest.NewKeyId)
}
#if LANG_CXX11
inline void DeriveKeyRequest::set_newkeyid(::std::string&& value) {
  
  newkeyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DeriveKeyRequest.NewKeyId)
}
#endif
inline void DeriveKeyRequest::set_newkeyid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  newkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DeriveKeyRequest.NewKeyId)
}
inline void DeriveKeyRequest::set_newkeyid(const char* value, size_t size) {
  
  newkeyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DeriveKeyRequest.NewKeyId)
}
inline ::std::string* DeriveKeyRequest::mutable_newkeyid() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DeriveKeyRequest.NewKeyId)
  return newkeyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeriveKeyRequest::release_newkeyid() {
  // @@protoc_insertion_point(field_release:grep11.DeriveKeyRequest.NewKeyId)
  
  return newkeyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeriveKeyRequest::set_allocated_newkeyid(::std::string* newkeyid) {
  if (newkeyid != nullptr) {
    
  } else {
    
  }
  newkeyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newkeyid);
  // @@protoc_insertion_point(field_set_allocated:grep11.DeriveKeyRequest.NewKeyId)
}

// -------------------------------------------------------------------

// DeriveKeyResponse

// bytes NewKey = 6;
inline void DeriveKeyResponse::clear_newkey() {
  newkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeriveKeyResponse::newkey() const {
  // @@protoc_insertion_point(field_get:grep11.DeriveKeyResponse.NewKey)
  return newkey_.GetNoArena();
}
inline void DeriveKeyResponse::set_newkey(const ::std::string& value) {
  
  newkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DeriveKeyResponse.NewKey)
}
#if LANG_CXX11
inline void DeriveKeyResponse::set_newkey(::std::string&& value) {
  
  newkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DeriveKeyResponse.NewKey)
}
#endif
inline void DeriveKeyResponse::set_newkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  newkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DeriveKeyResponse.NewKey)
}
inline void DeriveKeyResponse::set_newkey(const void* value, size_t size) {
  
  newkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DeriveKeyResponse.NewKey)
}
inline ::std::string* DeriveKeyResponse::mutable_newkey() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DeriveKeyResponse.NewKey)
  return newkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeriveKeyResponse::release_newkey() {
  // @@protoc_insertion_point(field_release:grep11.DeriveKeyResponse.NewKey)
  
  return newkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeriveKeyResponse::set_allocated_newkey(::std::string* newkey) {
  if (newkey != nullptr) {
    
  } else {
    
  }
  newkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newkey);
  // @@protoc_insertion_point(field_set_allocated:grep11.DeriveKeyResponse.NewKey)
}

// bytes CheckSum = 7;
inline void DeriveKeyResponse::clear_checksum() {
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeriveKeyResponse::checksum() const {
  // @@protoc_insertion_point(field_get:grep11.DeriveKeyResponse.CheckSum)
  return checksum_.GetNoArena();
}
inline void DeriveKeyResponse::set_checksum(const ::std::string& value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.DeriveKeyResponse.CheckSum)
}
#if LANG_CXX11
inline void DeriveKeyResponse::set_checksum(::std::string&& value) {
  
  checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.DeriveKeyResponse.CheckSum)
}
#endif
inline void DeriveKeyResponse::set_checksum(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.DeriveKeyResponse.CheckSum)
}
inline void DeriveKeyResponse::set_checksum(const void* value, size_t size) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.DeriveKeyResponse.CheckSum)
}
inline ::std::string* DeriveKeyResponse::mutable_checksum() {
  
  // @@protoc_insertion_point(field_mutable:grep11.DeriveKeyResponse.CheckSum)
  return checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeriveKeyResponse::release_checksum() {
  // @@protoc_insertion_point(field_release:grep11.DeriveKeyResponse.CheckSum)
  
  return checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeriveKeyResponse::set_allocated_checksum(::std::string* checksum) {
  if (checksum != nullptr) {
    
  } else {
    
  }
  checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum);
  // @@protoc_insertion_point(field_set_allocated:grep11.DeriveKeyResponse.CheckSum)
}

// -------------------------------------------------------------------

// GetMechanismListRequest

// -------------------------------------------------------------------

// GetMechanismListResponse

// repeated uint64 Mechs = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
inline int GetMechanismListResponse::mechs_size() const {
  return mechs_.size();
}
inline void GetMechanismListResponse::clear_mechs() {
  mechs_.Clear();
}
inline ::google::protobuf::uint64 GetMechanismListResponse::mechs(int index) const {
  // @@protoc_insertion_point(field_get:grep11.GetMechanismListResponse.Mechs)
  return mechs_.Get(index);
}
inline void GetMechanismListResponse::set_mechs(int index, ::google::protobuf::uint64 value) {
  mechs_.Set(index, value);
  // @@protoc_insertion_point(field_set:grep11.GetMechanismListResponse.Mechs)
}
inline void GetMechanismListResponse::add_mechs(::google::protobuf::uint64 value) {
  mechs_.Add(value);
  // @@protoc_insertion_point(field_add:grep11.GetMechanismListResponse.Mechs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetMechanismListResponse::mechs() const {
  // @@protoc_insertion_point(field_list:grep11.GetMechanismListResponse.Mechs)
  return mechs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetMechanismListResponse::mutable_mechs() {
  // @@protoc_insertion_point(field_mutable_list:grep11.GetMechanismListResponse.Mechs)
  return &mechs_;
}

// -------------------------------------------------------------------

// GetMechanismInfoRequest

// uint64 Mech = 2 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
inline void GetMechanismInfoRequest::clear_mech() {
  mech_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetMechanismInfoRequest::mech() const {
  // @@protoc_insertion_point(field_get:grep11.GetMechanismInfoRequest.Mech)
  return mech_;
}
inline void GetMechanismInfoRequest::set_mech(::google::protobuf::uint64 value) {
  
  mech_ = value;
  // @@protoc_insertion_point(field_set:grep11.GetMechanismInfoRequest.Mech)
}

// -------------------------------------------------------------------

// GetMechanismInfoResponse

// .grep11.MechanismInfo MechInfo = 3;
inline bool GetMechanismInfoResponse::has_mechinfo() const {
  return this != internal_default_instance() && mechinfo_ != nullptr;
}
inline void GetMechanismInfoResponse::clear_mechinfo() {
  if (GetArenaNoVirtual() == nullptr && mechinfo_ != nullptr) {
    delete mechinfo_;
  }
  mechinfo_ = nullptr;
}
inline const ::grep11::MechanismInfo& GetMechanismInfoResponse::mechinfo() const {
  const ::grep11::MechanismInfo* p = mechinfo_;
  // @@protoc_insertion_point(field_get:grep11.GetMechanismInfoResponse.MechInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::grep11::MechanismInfo*>(
      &::grep11::_MechanismInfo_default_instance_);
}
inline ::grep11::MechanismInfo* GetMechanismInfoResponse::release_mechinfo() {
  // @@protoc_insertion_point(field_release:grep11.GetMechanismInfoResponse.MechInfo)
  
  ::grep11::MechanismInfo* temp = mechinfo_;
  mechinfo_ = nullptr;
  return temp;
}
inline ::grep11::MechanismInfo* GetMechanismInfoResponse::mutable_mechinfo() {
  
  if (mechinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::grep11::MechanismInfo>(GetArenaNoVirtual());
    mechinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grep11.GetMechanismInfoResponse.MechInfo)
  return mechinfo_;
}
inline void GetMechanismInfoResponse::set_allocated_mechinfo(::grep11::MechanismInfo* mechinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mechinfo_;
  }
  if (mechinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mechinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mechinfo, submessage_arena);
    }
    
  } else {
    
  }
  mechinfo_ = mechinfo;
  // @@protoc_insertion_point(field_set_allocated:grep11.GetMechanismInfoResponse.MechInfo)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetAttributeValueRequest

// bytes Object = 1;
inline void GetAttributeValueRequest::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAttributeValueRequest::object() const {
  // @@protoc_insertion_point(field_get:grep11.GetAttributeValueRequest.Object)
  return object_.GetNoArena();
}
inline void GetAttributeValueRequest::set_object(const ::std::string& value) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.GetAttributeValueRequest.Object)
}
#if LANG_CXX11
inline void GetAttributeValueRequest::set_object(::std::string&& value) {
  
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.GetAttributeValueRequest.Object)
}
#endif
inline void GetAttributeValueRequest::set_object(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.GetAttributeValueRequest.Object)
}
inline void GetAttributeValueRequest::set_object(const void* value, size_t size) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.GetAttributeValueRequest.Object)
}
inline ::std::string* GetAttributeValueRequest::mutable_object() {
  
  // @@protoc_insertion_point(field_mutable:grep11.GetAttributeValueRequest.Object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAttributeValueRequest::release_object() {
  // @@protoc_insertion_point(field_release:grep11.GetAttributeValueRequest.Object)
  
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAttributeValueRequest::set_allocated_object(::std::string* object) {
  if (object != nullptr) {
    
  } else {
    
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:grep11.GetAttributeValueRequest.Object)
}

// map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
inline int GetAttributeValueRequest::attributes_size() const {
  return attributes_.size();
}
inline void GetAttributeValueRequest::clear_attributes() {
  attributes_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
GetAttributeValueRequest::attributes() const {
  // @@protoc_insertion_point(field_map:grep11.GetAttributeValueRequest.Attributes)
  return attributes_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
GetAttributeValueRequest::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_map:grep11.GetAttributeValueRequest.Attributes)
  return attributes_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetAttributeValueResponse

// map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
inline int GetAttributeValueResponse::attributes_size() const {
  return attributes_.size();
}
inline void GetAttributeValueResponse::clear_attributes() {
  attributes_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
GetAttributeValueResponse::attributes() const {
  // @@protoc_insertion_point(field_map:grep11.GetAttributeValueResponse.Attributes)
  return attributes_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
GetAttributeValueResponse::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_map:grep11.GetAttributeValueResponse.Attributes)
  return attributes_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SetAttributeValueRequest

// bytes Object = 1;
inline void SetAttributeValueRequest::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAttributeValueRequest::object() const {
  // @@protoc_insertion_point(field_get:grep11.SetAttributeValueRequest.Object)
  return object_.GetNoArena();
}
inline void SetAttributeValueRequest::set_object(const ::std::string& value) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SetAttributeValueRequest.Object)
}
#if LANG_CXX11
inline void SetAttributeValueRequest::set_object(::std::string&& value) {
  
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SetAttributeValueRequest.Object)
}
#endif
inline void SetAttributeValueRequest::set_object(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SetAttributeValueRequest.Object)
}
inline void SetAttributeValueRequest::set_object(const void* value, size_t size) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SetAttributeValueRequest.Object)
}
inline ::std::string* SetAttributeValueRequest::mutable_object() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SetAttributeValueRequest.Object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAttributeValueRequest::release_object() {
  // @@protoc_insertion_point(field_release:grep11.SetAttributeValueRequest.Object)
  
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAttributeValueRequest::set_allocated_object(::std::string* object) {
  if (object != nullptr) {
    
  } else {
    
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:grep11.SetAttributeValueRequest.Object)
}

// map<uint64, bytes> Attributes = 2 [(.gogoproto.castkey) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Attribute"];
inline int SetAttributeValueRequest::attributes_size() const {
  return attributes_.size();
}
inline void SetAttributeValueRequest::clear_attributes() {
  attributes_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
SetAttributeValueRequest::attributes() const {
  // @@protoc_insertion_point(field_map:grep11.SetAttributeValueRequest.Attributes)
  return attributes_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
SetAttributeValueRequest::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_map:grep11.SetAttributeValueRequest.Attributes)
  return attributes_.MutableMap();
}

// -------------------------------------------------------------------

// SetAttributeValueResponse

// bytes Object = 1;
inline void SetAttributeValueResponse::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAttributeValueResponse::object() const {
  // @@protoc_insertion_point(field_get:grep11.SetAttributeValueResponse.Object)
  return object_.GetNoArena();
}
inline void SetAttributeValueResponse::set_object(const ::std::string& value) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.SetAttributeValueResponse.Object)
}
#if LANG_CXX11
inline void SetAttributeValueResponse::set_object(::std::string&& value) {
  
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.SetAttributeValueResponse.Object)
}
#endif
inline void SetAttributeValueResponse::set_object(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.SetAttributeValueResponse.Object)
}
inline void SetAttributeValueResponse::set_object(const void* value, size_t size) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.SetAttributeValueResponse.Object)
}
inline ::std::string* SetAttributeValueResponse::mutable_object() {
  
  // @@protoc_insertion_point(field_mutable:grep11.SetAttributeValueResponse.Object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAttributeValueResponse::release_object() {
  // @@protoc_insertion_point(field_release:grep11.SetAttributeValueResponse.Object)
  
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAttributeValueResponse::set_allocated_object(::std::string* object) {
  if (object != nullptr) {
    
  } else {
    
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:grep11.SetAttributeValueResponse.Object)
}

// -------------------------------------------------------------------

// Mechanism

// uint64 Mechanism = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Mechanism"];
inline void Mechanism::clear_mechanism() {
  mechanism_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Mechanism::mechanism() const {
  // @@protoc_insertion_point(field_get:grep11.Mechanism.Mechanism)
  return mechanism_;
}
inline void Mechanism::set_mechanism(::google::protobuf::uint64 value) {
  
  mechanism_ = value;
  // @@protoc_insertion_point(field_set:grep11.Mechanism.Mechanism)
}

// bytes Parameter = 2;
inline void Mechanism::clear_parameter() {
  parameter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Mechanism::parameter() const {
  // @@protoc_insertion_point(field_get:grep11.Mechanism.Parameter)
  return parameter_.GetNoArena();
}
inline void Mechanism::set_parameter(const ::std::string& value) {
  
  parameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.Mechanism.Parameter)
}
#if LANG_CXX11
inline void Mechanism::set_parameter(::std::string&& value) {
  
  parameter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.Mechanism.Parameter)
}
#endif
inline void Mechanism::set_parameter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  parameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.Mechanism.Parameter)
}
inline void Mechanism::set_parameter(const void* value, size_t size) {
  
  parameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.Mechanism.Parameter)
}
inline ::std::string* Mechanism::mutable_parameter() {
  
  // @@protoc_insertion_point(field_mutable:grep11.Mechanism.Parameter)
  return parameter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Mechanism::release_parameter() {
  // @@protoc_insertion_point(field_release:grep11.Mechanism.Parameter)
  
  return parameter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mechanism::set_allocated_parameter(::std::string* parameter) {
  if (parameter != nullptr) {
    
  } else {
    
  }
  parameter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter);
  // @@protoc_insertion_point(field_set_allocated:grep11.Mechanism.Parameter)
}

// -------------------------------------------------------------------

// MechanismInfo

// uint64 MinKeySize = 1;
inline void MechanismInfo::clear_minkeysize() {
  minkeysize_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MechanismInfo::minkeysize() const {
  // @@protoc_insertion_point(field_get:grep11.MechanismInfo.MinKeySize)
  return minkeysize_;
}
inline void MechanismInfo::set_minkeysize(::google::protobuf::uint64 value) {
  
  minkeysize_ = value;
  // @@protoc_insertion_point(field_set:grep11.MechanismInfo.MinKeySize)
}

// uint64 MaxKeySize = 2;
inline void MechanismInfo::clear_maxkeysize() {
  maxkeysize_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MechanismInfo::maxkeysize() const {
  // @@protoc_insertion_point(field_get:grep11.MechanismInfo.MaxKeySize)
  return maxkeysize_;
}
inline void MechanismInfo::set_maxkeysize(::google::protobuf::uint64 value) {
  
  maxkeysize_ = value;
  // @@protoc_insertion_point(field_set:grep11.MechanismInfo.MaxKeySize)
}

// uint64 Flags = 3;
inline void MechanismInfo::clear_flags() {
  flags_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MechanismInfo::flags() const {
  // @@protoc_insertion_point(field_get:grep11.MechanismInfo.Flags)
  return flags_;
}
inline void MechanismInfo::set_flags(::google::protobuf::uint64 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:grep11.MechanismInfo.Flags)
}

// -------------------------------------------------------------------

// Grep11Error

// uint64 Code = 1 [(.gogoproto.casttype) = "github.com/ibm-developer/ibm-cloud-hyperprotectcrypto/golang/ep11.Return"];
inline void Grep11Error::clear_code() {
  code_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Grep11Error::code() const {
  // @@protoc_insertion_point(field_get:grep11.Grep11Error.Code)
  return code_;
}
inline void Grep11Error::set_code(::google::protobuf::uint64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:grep11.Grep11Error.Code)
}

// string Detail = 2;
inline void Grep11Error::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Grep11Error::detail() const {
  // @@protoc_insertion_point(field_get:grep11.Grep11Error.Detail)
  return detail_.GetNoArena();
}
inline void Grep11Error::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grep11.Grep11Error.Detail)
}
#if LANG_CXX11
inline void Grep11Error::set_detail(::std::string&& value) {
  
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grep11.Grep11Error.Detail)
}
#endif
inline void Grep11Error::set_detail(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grep11.Grep11Error.Detail)
}
inline void Grep11Error::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grep11.Grep11Error.Detail)
}
inline ::std::string* Grep11Error::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:grep11.Grep11Error.Detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Grep11Error::release_detail() {
  // @@protoc_insertion_point(field_release:grep11.Grep11Error.Detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Grep11Error::set_allocated_detail(::std::string* detail) {
  if (detail != nullptr) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:grep11.Grep11Error.Detail)
}

// bool Retry = 3;
inline void Grep11Error::clear_retry() {
  retry_ = false;
}
inline bool Grep11Error::retry() const {
  // @@protoc_insertion_point(field_get:grep11.Grep11Error.Retry)
  return retry_;
}
inline void Grep11Error::set_retry(bool value) {
  
  retry_ = value;
  // @@protoc_insertion_point(field_set:grep11.Grep11Error.Retry)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grep11

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_server_2eproto
