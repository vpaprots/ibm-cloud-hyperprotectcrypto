# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import server_pb2 as server__pb2


class CryptoStub(object):
  """See https://www-03.ibm.com/security/cryptocards/pciecc/pdf/ep11-structure.pdf for
  further documentation
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GenerateRandom = channel.unary_unary(
        '/grep11.Crypto/GenerateRandom',
        request_serializer=server__pb2.GenerateRandomRequest.SerializeToString,
        response_deserializer=server__pb2.GenerateRandomResponse.FromString,
        )
    self.DigestInit = channel.unary_unary(
        '/grep11.Crypto/DigestInit',
        request_serializer=server__pb2.DigestInitRequest.SerializeToString,
        response_deserializer=server__pb2.DigestInitResponse.FromString,
        )
    self.Digest = channel.unary_unary(
        '/grep11.Crypto/Digest',
        request_serializer=server__pb2.DigestRequest.SerializeToString,
        response_deserializer=server__pb2.DigestResponse.FromString,
        )
    self.DigestUpdate = channel.unary_unary(
        '/grep11.Crypto/DigestUpdate',
        request_serializer=server__pb2.DigestUpdateRequest.SerializeToString,
        response_deserializer=server__pb2.DigestUpdateResponse.FromString,
        )
    self.DigestKey = channel.unary_unary(
        '/grep11.Crypto/DigestKey',
        request_serializer=server__pb2.DigestKeyRequest.SerializeToString,
        response_deserializer=server__pb2.DigestKeyResponse.FromString,
        )
    self.DigestFinal = channel.unary_unary(
        '/grep11.Crypto/DigestFinal',
        request_serializer=server__pb2.DigestFinalRequest.SerializeToString,
        response_deserializer=server__pb2.DigestFinalResponse.FromString,
        )
    self.DigestSingle = channel.unary_unary(
        '/grep11.Crypto/DigestSingle',
        request_serializer=server__pb2.DigestSingleRequest.SerializeToString,
        response_deserializer=server__pb2.DigestSingleResponse.FromString,
        )
    self.EncryptInit = channel.unary_unary(
        '/grep11.Crypto/EncryptInit',
        request_serializer=server__pb2.EncryptInitRequest.SerializeToString,
        response_deserializer=server__pb2.EncryptInitResponse.FromString,
        )
    self.DecryptInit = channel.unary_unary(
        '/grep11.Crypto/DecryptInit',
        request_serializer=server__pb2.DecryptInitRequest.SerializeToString,
        response_deserializer=server__pb2.DecryptInitResponse.FromString,
        )
    self.EncryptUpdate = channel.unary_unary(
        '/grep11.Crypto/EncryptUpdate',
        request_serializer=server__pb2.EncryptUpdateRequest.SerializeToString,
        response_deserializer=server__pb2.EncryptUpdateResponse.FromString,
        )
    self.DecryptUpdate = channel.unary_unary(
        '/grep11.Crypto/DecryptUpdate',
        request_serializer=server__pb2.DecryptUpdateRequest.SerializeToString,
        response_deserializer=server__pb2.DecryptUpdateResponse.FromString,
        )
    self.Encrypt = channel.unary_unary(
        '/grep11.Crypto/Encrypt',
        request_serializer=server__pb2.EncryptRequest.SerializeToString,
        response_deserializer=server__pb2.EncryptResponse.FromString,
        )
    self.Decrypt = channel.unary_unary(
        '/grep11.Crypto/Decrypt',
        request_serializer=server__pb2.DecryptRequest.SerializeToString,
        response_deserializer=server__pb2.DecryptResponse.FromString,
        )
    self.EncryptFinal = channel.unary_unary(
        '/grep11.Crypto/EncryptFinal',
        request_serializer=server__pb2.EncryptFinalRequest.SerializeToString,
        response_deserializer=server__pb2.EncryptFinalResponse.FromString,
        )
    self.DecryptFinal = channel.unary_unary(
        '/grep11.Crypto/DecryptFinal',
        request_serializer=server__pb2.DecryptFinalRequest.SerializeToString,
        response_deserializer=server__pb2.DecryptFinalResponse.FromString,
        )
    self.EncryptSingle = channel.unary_unary(
        '/grep11.Crypto/EncryptSingle',
        request_serializer=server__pb2.EncryptSingleRequest.SerializeToString,
        response_deserializer=server__pb2.EncryptSingleResponse.FromString,
        )
    self.DecryptSingle = channel.unary_unary(
        '/grep11.Crypto/DecryptSingle',
        request_serializer=server__pb2.DecryptSingleRequest.SerializeToString,
        response_deserializer=server__pb2.DecryptSingleResponse.FromString,
        )
    self.SignInit = channel.unary_unary(
        '/grep11.Crypto/SignInit',
        request_serializer=server__pb2.SignInitRequest.SerializeToString,
        response_deserializer=server__pb2.SignInitResponse.FromString,
        )
    self.VerifyInit = channel.unary_unary(
        '/grep11.Crypto/VerifyInit',
        request_serializer=server__pb2.VerifyInitRequest.SerializeToString,
        response_deserializer=server__pb2.VerifyInitResponse.FromString,
        )
    self.SignUpdate = channel.unary_unary(
        '/grep11.Crypto/SignUpdate',
        request_serializer=server__pb2.SignUpdateRequest.SerializeToString,
        response_deserializer=server__pb2.SignUpdateResponse.FromString,
        )
    self.VerifyUpdate = channel.unary_unary(
        '/grep11.Crypto/VerifyUpdate',
        request_serializer=server__pb2.VerifyUpdateRequest.SerializeToString,
        response_deserializer=server__pb2.VerifyUpdateResponse.FromString,
        )
    self.SignFinal = channel.unary_unary(
        '/grep11.Crypto/SignFinal',
        request_serializer=server__pb2.SignFinalRequest.SerializeToString,
        response_deserializer=server__pb2.SignFinalResponse.FromString,
        )
    self.VerifyFinal = channel.unary_unary(
        '/grep11.Crypto/VerifyFinal',
        request_serializer=server__pb2.VerifyFinalRequest.SerializeToString,
        response_deserializer=server__pb2.VerifyFinalResponse.FromString,
        )
    self.Sign = channel.unary_unary(
        '/grep11.Crypto/Sign',
        request_serializer=server__pb2.SignRequest.SerializeToString,
        response_deserializer=server__pb2.SignResponse.FromString,
        )
    self.Verify = channel.unary_unary(
        '/grep11.Crypto/Verify',
        request_serializer=server__pb2.VerifyRequest.SerializeToString,
        response_deserializer=server__pb2.VerifyResponse.FromString,
        )
    self.SignSingle = channel.unary_unary(
        '/grep11.Crypto/SignSingle',
        request_serializer=server__pb2.SignSingleRequest.SerializeToString,
        response_deserializer=server__pb2.SignSingleResponse.FromString,
        )
    self.VerifySingle = channel.unary_unary(
        '/grep11.Crypto/VerifySingle',
        request_serializer=server__pb2.VerifySingleRequest.SerializeToString,
        response_deserializer=server__pb2.VerifySingleResponse.FromString,
        )
    self.GenerateKey = channel.unary_unary(
        '/grep11.Crypto/GenerateKey',
        request_serializer=server__pb2.GenerateKeyRequest.SerializeToString,
        response_deserializer=server__pb2.GenerateKeyResponse.FromString,
        )
    self.GenerateKeyPair = channel.unary_unary(
        '/grep11.Crypto/GenerateKeyPair',
        request_serializer=server__pb2.GenerateKeyPairRequest.SerializeToString,
        response_deserializer=server__pb2.GenerateKeyPairResponse.FromString,
        )
    self.WrapKey = channel.unary_unary(
        '/grep11.Crypto/WrapKey',
        request_serializer=server__pb2.WrapKeyRequest.SerializeToString,
        response_deserializer=server__pb2.WrapKeyResponse.FromString,
        )
    self.UnwrapKey = channel.unary_unary(
        '/grep11.Crypto/UnwrapKey',
        request_serializer=server__pb2.UnwrapKeyRequest.SerializeToString,
        response_deserializer=server__pb2.UnwrapKeyResponse.FromString,
        )
    self.DeriveKey = channel.unary_unary(
        '/grep11.Crypto/DeriveKey',
        request_serializer=server__pb2.DeriveKeyRequest.SerializeToString,
        response_deserializer=server__pb2.DeriveKeyResponse.FromString,
        )
    self.GetMechanismList = channel.unary_unary(
        '/grep11.Crypto/GetMechanismList',
        request_serializer=server__pb2.GetMechanismListRequest.SerializeToString,
        response_deserializer=server__pb2.GetMechanismListResponse.FromString,
        )
    self.GetMechanismInfo = channel.unary_unary(
        '/grep11.Crypto/GetMechanismInfo',
        request_serializer=server__pb2.GetMechanismInfoRequest.SerializeToString,
        response_deserializer=server__pb2.GetMechanismInfoResponse.FromString,
        )
    self.GetAttributeValue = channel.unary_unary(
        '/grep11.Crypto/GetAttributeValue',
        request_serializer=server__pb2.GetAttributeValueRequest.SerializeToString,
        response_deserializer=server__pb2.GetAttributeValueResponse.FromString,
        )
    self.SetAttributeValue = channel.unary_unary(
        '/grep11.Crypto/SetAttributeValue',
        request_serializer=server__pb2.SetAttributeValueRequest.SerializeToString,
        response_deserializer=server__pb2.SetAttributeValueResponse.FromString,
        )


class CryptoServicer(object):
  """See https://www-03.ibm.com/security/cryptocards/pciecc/pdf/ep11-structure.pdf for
  further documentation
  """

  def GenerateRandom(self, request, context):
    """CK_RV m_GenerateRandom (
    CK_BYTE_PTR rnd, CK_ULONG rndlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DigestInit(self, request, context):
    """CK_RV m_DigestInit (
    unsigned char *state, size_t *statelen,
    const CK_MECHANISM_PTR mech,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Digest(self, request, context):
    """CK_RV m_Digest (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR data, CK_ULONG datalen,
    CK_BYTE_PTR digest, CK_ULONG_PTR digestlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DigestUpdate(self, request, context):
    """CK_RV m_DigestUpdate (
    unsigned char *state, size_t statelen,
    CK_BYTE_PTR data, CK_ULONG datalen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DigestKey(self, request, context):
    """CK_RV m_DigestKey (
    unsigned char *state, size_t statelen,
    const unsigned char *key, size_t keylen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DigestFinal(self, request, context):
    """CK_RV m_DigestFinal (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR digest, CK_ULONG_PTR digestlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DigestSingle(self, request, context):
    """CK_RV m_DigestSingle (
    CK_MECHANISM_PTR mech,
    CK_BYTE_PTR data, CK_ULONG datalen,
    CK_BYTE_PTR digest, CK_ULONG_PTR digestlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EncryptInit(self, request, context):
    """CK_RV m_EncryptInit (
    unsigned char *state, size_t *statelen,
    CK_MECHANISM_PTR mech,
    const unsigned char *key, size_t keylen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DecryptInit(self, request, context):
    """CK_RV m_DecryptInit (
    unsigned char *state, size_t *statelen,
    CK_MECHANISM_PTR mech,
    const unsigned char *key, size_t keylen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EncryptUpdate(self, request, context):
    """CK_RV m_EncryptUpdate (
    unsigned char *state, size_t statelen,
    CK_BYTE_PTR plain, CK_ULONG plainlen,
    CK_BYTE_PTR ciphered, CK_ULONG_PTR cipheredlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DecryptUpdate(self, request, context):
    """CK_RV m_DecryptUpdate (
    unsigned char *state, size_t statelen,
    CK_BYTE_PTR ciphered, CK_ULONG cipheredlen,
    CK_BYTE_PTR plain, CK_ULONG_PTR plainlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Encrypt(self, request, context):
    """CK_RV m_Encrypt (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR plain, CK_ULONG plainlen,
    CK_BYTE_PTR ciphered, CK_ULONG_PTR cipheredlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Decrypt(self, request, context):
    """CK_RV m_Decrypt (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR ciphered, CK_ULONG cipheredlen,
    CK_BYTE_PTR plain, CK_ULONG_PTR plainlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EncryptFinal(self, request, context):
    """CK_RV m_EncryptFinal (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR ciphered, CK_ULONG_PTR cipheredlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DecryptFinal(self, request, context):
    """CK_RV m_DecryptFinal (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR plain, CK_ULONG_PTR plainlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EncryptSingle(self, request, context):
    """CK_RV m_EncryptSingle (
    const unsigned char *key, size_t keylen,
    CK_MECHANISM_PTR mech,
    CK_BYTE_PTR plain, CK_ULONG plainlen,
    CK_BYTE_PTR ciphered, CK_ULONG_PTR cipheredlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DecryptSingle(self, request, context):
    """CK_RV m_DecryptSingle (
    const unsigned char *key, size_t keylen,
    CK_MECHANISM_PTR mech,
    CK_BYTE_PTR ciphered, CK_ULONG cipheredlen,
    CK_BYTE_PTR plain, CK_ULONG_PTR plainlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SignInit(self, request, context):
    """CK_RV m_SignInit (
    unsigned char *state, size_t *statelen,
    CK_MECHANISM_PTR mech,
    const unsigned char *privKey, size_t privKeylen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VerifyInit(self, request, context):
    """CK_RV m_VerifyInit (
    unsigned char *state, size_t *statelen,
    CK_MECHANISM_PTR mech,
    const unsigned char *pubKey, size_t pubKeylen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SignUpdate(self, request, context):
    """CK_RV m_SignUpdate (
    unsigned char *state, size_t statelen,
    CK_BYTE_PTR data, CK_ULONG datalen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VerifyUpdate(self, request, context):
    """CK_RV m_VerifyUpdate (
    unsigned char *state, size_t statelen,
    CK_BYTE_PTR data, CK_ULONG datalen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SignFinal(self, request, context):
    """CK_RV m_SignFinal (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR signature, CK_ULONG_PTR signaturelen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VerifyFinal(self, request, context):
    """CK_RV m_VerifyFinal (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR signature, CK_ULONG signaturelen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Sign(self, request, context):
    """CK_RV m_Sign (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR data, CK_ULONG datalen,
    CK_BYTE_PTR signature, CK_ULONG_PTR signaturelen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Verify(self, request, context):
    """CK_RV m_Verify (
    const unsigned char *state, size_t statelen,
    CK_BYTE_PTR data, CK_ULONG datalen,
    CK_BYTE_PTR signature, CK_ULONG signaturelen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SignSingle(self, request, context):
    """CK_RV m_SignSingle (
    const unsigned char *privKey, size_t privKeylen,
    CK_MECHANISM_PTR mech,
    CK_BYTE_PTR data, CK_ULONG datalen,
    CK_BYTE_PTR signature, CK_ULONG_PTR signaturelen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VerifySingle(self, request, context):
    """CK_RV m_VerifySingle (
    const unsigned char *pubKey, size_t pubKeylen,
    CK_MECHANISM_PTR mech,
    CK_BYTE_PTR data, CK_ULONG datalen,
    CK_BYTE_PTR signature, CK_ULONG signaturelen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GenerateKey(self, request, context):
    """CK_RV m_GenerateKey (
    CK_MECHANISM_PTR mech,
    CK_ATTRIBUTE_PTR template, CK_ULONG templatelen,
    const unsigned char *pin, size_t pinlen,
    unsigned char *key, size_t *keylen,
    unsigned char *checkSum, size_t *checkSumlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GenerateKeyPair(self, request, context):
    """CK_RV m_GenerateKeyPair (
    CK_MECHANISM_PTR mech,
    CK_ATTRIBUTE_PTR pubKeyTemplate, CK_ULONG pubKeyTemplatelen,
    CK_ATTRIBUTE_PTR privKeyTemplate, CK_ULONG privKeyTemplatelen,
    const unsigned char *pin, size_t pinlen,
    unsigned char *privKey, size_t *privKeylen,
    unsigned char *pubKey, size_t *pubKeylen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WrapKey(self, request, context):
    """CK_RV m_WrapKey (
    const unsigned char *key, size_t keylen,
    const unsigned char *keK, size_t keKlen,
    const unsigned char *macKey, size_t macKeylen,
    const CK_MECHANISM_PTR mech,
    CK_BYTE_PTR wrapped, CK_ULONG_PTR wrappedlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnwrapKey(self, request, context):
    """CK_RV m_UnwrapKey (
    const CK_BYTE_PTR wrapped, CK_ULONG wrappedlen,
    const unsigned char *keK, size_t keKlen,
    const unsigned char *macKey, size_t macKeylen,
    const unsigned char *pin, size_t pinlen,
    const CK_MECHANISM_PTR mech,
    const CK_ATTRIBUTE_PTR template, CK_ULONG templatelen,
    unsigned char *unwrapped, size_t *unwrappedlen,
    CK_BYTE_PTR checkSum, CK_ULONG *checkSumlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeriveKey(self, request, context):
    """CK_RV m_DeriveKey (
    CK_MECHANISM_PTR mech,
    CK_ATTRIBUTE_PTR template, CK_ULONG templatelen,
    const unsigned char *baseKey, size_t baseKeylen,
    const unsigned char *data, size_t datalen,
    const unsigned char *pin, size_t pinlen,
    unsigned char *newKey, size_t *newKeylen,
    unsigned char *checkSum, size_t *checkSumlen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMechanismList(self, request, context):
    """CK_RV m_GetMechanismList (
    CK_SLOT_ID slot,
    CK_MECHANISM_TYPE_PTR mechs, CK_ULONG_PTR mechslen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMechanismInfo(self, request, context):
    """CK_RV m_GetMechanismInfo (
    CK_SLOT_ID slot,
    CK_MECHANISM_TYPE mech,
    CK_MECHANISM_INFO_PTR mechInfo,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAttributeValue(self, request, context):
    """CK_RV m_GetAttributeValue (
    const unsigned char *object, size_t objectlen,
    CK_ATTRIBUTE_PTR attributes, CK_ULONG attributeslen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetAttributeValue(self, request, context):
    """CK_RV m_SetAttributeValue (
    unsigned char *object, size_t objectlen,
    CK_ATTRIBUTE_PTR attributes, CK_ULONG attributeslen,
    target_t target) ;
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CryptoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GenerateRandom': grpc.unary_unary_rpc_method_handler(
          servicer.GenerateRandom,
          request_deserializer=server__pb2.GenerateRandomRequest.FromString,
          response_serializer=server__pb2.GenerateRandomResponse.SerializeToString,
      ),
      'DigestInit': grpc.unary_unary_rpc_method_handler(
          servicer.DigestInit,
          request_deserializer=server__pb2.DigestInitRequest.FromString,
          response_serializer=server__pb2.DigestInitResponse.SerializeToString,
      ),
      'Digest': grpc.unary_unary_rpc_method_handler(
          servicer.Digest,
          request_deserializer=server__pb2.DigestRequest.FromString,
          response_serializer=server__pb2.DigestResponse.SerializeToString,
      ),
      'DigestUpdate': grpc.unary_unary_rpc_method_handler(
          servicer.DigestUpdate,
          request_deserializer=server__pb2.DigestUpdateRequest.FromString,
          response_serializer=server__pb2.DigestUpdateResponse.SerializeToString,
      ),
      'DigestKey': grpc.unary_unary_rpc_method_handler(
          servicer.DigestKey,
          request_deserializer=server__pb2.DigestKeyRequest.FromString,
          response_serializer=server__pb2.DigestKeyResponse.SerializeToString,
      ),
      'DigestFinal': grpc.unary_unary_rpc_method_handler(
          servicer.DigestFinal,
          request_deserializer=server__pb2.DigestFinalRequest.FromString,
          response_serializer=server__pb2.DigestFinalResponse.SerializeToString,
      ),
      'DigestSingle': grpc.unary_unary_rpc_method_handler(
          servicer.DigestSingle,
          request_deserializer=server__pb2.DigestSingleRequest.FromString,
          response_serializer=server__pb2.DigestSingleResponse.SerializeToString,
      ),
      'EncryptInit': grpc.unary_unary_rpc_method_handler(
          servicer.EncryptInit,
          request_deserializer=server__pb2.EncryptInitRequest.FromString,
          response_serializer=server__pb2.EncryptInitResponse.SerializeToString,
      ),
      'DecryptInit': grpc.unary_unary_rpc_method_handler(
          servicer.DecryptInit,
          request_deserializer=server__pb2.DecryptInitRequest.FromString,
          response_serializer=server__pb2.DecryptInitResponse.SerializeToString,
      ),
      'EncryptUpdate': grpc.unary_unary_rpc_method_handler(
          servicer.EncryptUpdate,
          request_deserializer=server__pb2.EncryptUpdateRequest.FromString,
          response_serializer=server__pb2.EncryptUpdateResponse.SerializeToString,
      ),
      'DecryptUpdate': grpc.unary_unary_rpc_method_handler(
          servicer.DecryptUpdate,
          request_deserializer=server__pb2.DecryptUpdateRequest.FromString,
          response_serializer=server__pb2.DecryptUpdateResponse.SerializeToString,
      ),
      'Encrypt': grpc.unary_unary_rpc_method_handler(
          servicer.Encrypt,
          request_deserializer=server__pb2.EncryptRequest.FromString,
          response_serializer=server__pb2.EncryptResponse.SerializeToString,
      ),
      'Decrypt': grpc.unary_unary_rpc_method_handler(
          servicer.Decrypt,
          request_deserializer=server__pb2.DecryptRequest.FromString,
          response_serializer=server__pb2.DecryptResponse.SerializeToString,
      ),
      'EncryptFinal': grpc.unary_unary_rpc_method_handler(
          servicer.EncryptFinal,
          request_deserializer=server__pb2.EncryptFinalRequest.FromString,
          response_serializer=server__pb2.EncryptFinalResponse.SerializeToString,
      ),
      'DecryptFinal': grpc.unary_unary_rpc_method_handler(
          servicer.DecryptFinal,
          request_deserializer=server__pb2.DecryptFinalRequest.FromString,
          response_serializer=server__pb2.DecryptFinalResponse.SerializeToString,
      ),
      'EncryptSingle': grpc.unary_unary_rpc_method_handler(
          servicer.EncryptSingle,
          request_deserializer=server__pb2.EncryptSingleRequest.FromString,
          response_serializer=server__pb2.EncryptSingleResponse.SerializeToString,
      ),
      'DecryptSingle': grpc.unary_unary_rpc_method_handler(
          servicer.DecryptSingle,
          request_deserializer=server__pb2.DecryptSingleRequest.FromString,
          response_serializer=server__pb2.DecryptSingleResponse.SerializeToString,
      ),
      'SignInit': grpc.unary_unary_rpc_method_handler(
          servicer.SignInit,
          request_deserializer=server__pb2.SignInitRequest.FromString,
          response_serializer=server__pb2.SignInitResponse.SerializeToString,
      ),
      'VerifyInit': grpc.unary_unary_rpc_method_handler(
          servicer.VerifyInit,
          request_deserializer=server__pb2.VerifyInitRequest.FromString,
          response_serializer=server__pb2.VerifyInitResponse.SerializeToString,
      ),
      'SignUpdate': grpc.unary_unary_rpc_method_handler(
          servicer.SignUpdate,
          request_deserializer=server__pb2.SignUpdateRequest.FromString,
          response_serializer=server__pb2.SignUpdateResponse.SerializeToString,
      ),
      'VerifyUpdate': grpc.unary_unary_rpc_method_handler(
          servicer.VerifyUpdate,
          request_deserializer=server__pb2.VerifyUpdateRequest.FromString,
          response_serializer=server__pb2.VerifyUpdateResponse.SerializeToString,
      ),
      'SignFinal': grpc.unary_unary_rpc_method_handler(
          servicer.SignFinal,
          request_deserializer=server__pb2.SignFinalRequest.FromString,
          response_serializer=server__pb2.SignFinalResponse.SerializeToString,
      ),
      'VerifyFinal': grpc.unary_unary_rpc_method_handler(
          servicer.VerifyFinal,
          request_deserializer=server__pb2.VerifyFinalRequest.FromString,
          response_serializer=server__pb2.VerifyFinalResponse.SerializeToString,
      ),
      'Sign': grpc.unary_unary_rpc_method_handler(
          servicer.Sign,
          request_deserializer=server__pb2.SignRequest.FromString,
          response_serializer=server__pb2.SignResponse.SerializeToString,
      ),
      'Verify': grpc.unary_unary_rpc_method_handler(
          servicer.Verify,
          request_deserializer=server__pb2.VerifyRequest.FromString,
          response_serializer=server__pb2.VerifyResponse.SerializeToString,
      ),
      'SignSingle': grpc.unary_unary_rpc_method_handler(
          servicer.SignSingle,
          request_deserializer=server__pb2.SignSingleRequest.FromString,
          response_serializer=server__pb2.SignSingleResponse.SerializeToString,
      ),
      'VerifySingle': grpc.unary_unary_rpc_method_handler(
          servicer.VerifySingle,
          request_deserializer=server__pb2.VerifySingleRequest.FromString,
          response_serializer=server__pb2.VerifySingleResponse.SerializeToString,
      ),
      'GenerateKey': grpc.unary_unary_rpc_method_handler(
          servicer.GenerateKey,
          request_deserializer=server__pb2.GenerateKeyRequest.FromString,
          response_serializer=server__pb2.GenerateKeyResponse.SerializeToString,
      ),
      'GenerateKeyPair': grpc.unary_unary_rpc_method_handler(
          servicer.GenerateKeyPair,
          request_deserializer=server__pb2.GenerateKeyPairRequest.FromString,
          response_serializer=server__pb2.GenerateKeyPairResponse.SerializeToString,
      ),
      'WrapKey': grpc.unary_unary_rpc_method_handler(
          servicer.WrapKey,
          request_deserializer=server__pb2.WrapKeyRequest.FromString,
          response_serializer=server__pb2.WrapKeyResponse.SerializeToString,
      ),
      'UnwrapKey': grpc.unary_unary_rpc_method_handler(
          servicer.UnwrapKey,
          request_deserializer=server__pb2.UnwrapKeyRequest.FromString,
          response_serializer=server__pb2.UnwrapKeyResponse.SerializeToString,
      ),
      'DeriveKey': grpc.unary_unary_rpc_method_handler(
          servicer.DeriveKey,
          request_deserializer=server__pb2.DeriveKeyRequest.FromString,
          response_serializer=server__pb2.DeriveKeyResponse.SerializeToString,
      ),
      'GetMechanismList': grpc.unary_unary_rpc_method_handler(
          servicer.GetMechanismList,
          request_deserializer=server__pb2.GetMechanismListRequest.FromString,
          response_serializer=server__pb2.GetMechanismListResponse.SerializeToString,
      ),
      'GetMechanismInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetMechanismInfo,
          request_deserializer=server__pb2.GetMechanismInfoRequest.FromString,
          response_serializer=server__pb2.GetMechanismInfoResponse.SerializeToString,
      ),
      'GetAttributeValue': grpc.unary_unary_rpc_method_handler(
          servicer.GetAttributeValue,
          request_deserializer=server__pb2.GetAttributeValueRequest.FromString,
          response_serializer=server__pb2.GetAttributeValueResponse.SerializeToString,
      ),
      'SetAttributeValue': grpc.unary_unary_rpc_method_handler(
          servicer.SetAttributeValue,
          request_deserializer=server__pb2.SetAttributeValueRequest.FromString,
          response_serializer=server__pb2.SetAttributeValueResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grep11.Crypto', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
